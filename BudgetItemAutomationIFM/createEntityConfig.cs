///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace BudgetItemAutomationIFM
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The createEntityConfig recording.
    /// </summary>
    [TestModule("59611eeb-5631-43f5-8d43-402fb090860b", ModuleType.Recording, 1)]
    public partial class createEntityConfig : ITestModule
    {
        /// <summary>
        /// Holds an instance of the BudgetItemAutomationIFMRepository repository.
        /// </summary>
        public static BudgetItemAutomationIFMRepository repo = BudgetItemAutomationIFMRepository.Instance;

        static createEntityConfig instance = new createEntityConfig();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public createEntityConfig()
        {
            itemCount = "";
            newTemplateName = "";
            sequenceNumber = "";
            parentName = "";
            siteBuildingRoom = "";
            fieldType = "";
            unitType = "";
            isGroup = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static createEntityConfig Instance
        {
            get { return instance; }
        }

#region Variables

        string _itemCount;

        /// <summary>
        /// Gets or sets the value of variable itemCount.
        /// </summary>
        [TestVariable("763362a3-a9d7-4ef2-aef4-345ef298d07a")]
        public string itemCount
        {
            get { return _itemCount; }
            set { _itemCount = value; }
        }

        string _sequenceNumber;

        /// <summary>
        /// Gets or sets the value of variable sequenceNumber.
        /// </summary>
        [TestVariable("8d1859b2-4508-4b0e-9c93-1ec87113ad4d")]
        public string sequenceNumber
        {
            get { return _sequenceNumber; }
            set { _sequenceNumber = value; }
        }

        string _parentName;

        /// <summary>
        /// Gets or sets the value of variable parentName.
        /// </summary>
        [TestVariable("6b928fae-03a0-49c4-9952-3d128742e128")]
        public string parentName
        {
            get { return _parentName; }
            set { _parentName = value; }
        }

        string _siteBuildingRoom;

        /// <summary>
        /// Gets or sets the value of variable siteBuildingRoom.
        /// </summary>
        [TestVariable("8bd4302a-3773-4d93-a63e-514c307ca44b")]
        public string siteBuildingRoom
        {
            get { return _siteBuildingRoom; }
            set { _siteBuildingRoom = value; }
        }

        string _fieldType;

        /// <summary>
        /// Gets or sets the value of variable fieldType.
        /// </summary>
        [TestVariable("c7e72757-9a02-4c03-aadf-ffd0ca0a73f3")]
        public string fieldType
        {
            get { return _fieldType; }
            set { _fieldType = value; }
        }

        string _unitType;

        /// <summary>
        /// Gets or sets the value of variable unitType.
        /// </summary>
        [TestVariable("a3f42227-7b2f-4640-ad4e-160687e3d25e")]
        public string unitType
        {
            get { return _unitType; }
            set { _unitType = value; }
        }

        string _isGroup;

        /// <summary>
        /// Gets or sets the value of variable isGroup.
        /// </summary>
        [TestVariable("0026a25b-3da0-43df-8550-e4dff7e4e048")]
        public string isGroup
        {
            get { return _isGroup; }
            set { _isGroup = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable newTemplateName.
        /// </summary>
        [TestVariable("f0f69fee-996c-4cd8-90b1-889e1f4a5f90")]
        public string newTemplateName
        {
            get { return repo.newTemplateName; }
            set { repo.newTemplateName = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            itemCount = ValueConverter.ToString(HelperMethodsCollection.getNumberOfRecordsFromFooter(repo.ApplicationUnderTest.showingNumberOfRecords));
            Delay.Milliseconds(0);
            
            newTemplateName = HelperMethodsCollection.getNewCreateItem(ValueConverter.ArgumentFromString<int>("nextCount", itemCount), "item");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.createSpanTag' at Center.", repo.ApplicationUnderTest.createSpanTagInfo, new RecordItemIndex(2));
            repo.ApplicationUnderTest.createSpanTag.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 30s to not exist. Associated repository item: 'ApplicationUnderTest.FaFaSpinFaSpinner'", repo.ApplicationUnderTest.FaFaSpinFaSpinnerInfo, new ActionTimeout(30000), new RecordItemIndex(3));
            repo.ApplicationUnderTest.FaFaSpinFaSpinnerInfo.WaitForNotExists(30000);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.TitleInputBar' at Center.", repo.ApplicationUnderTest.TitleInputBarInfo, new RecordItemIndex(4));
            repo.ApplicationUnderTest.TitleInputBar.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$newTemplateName' with focus on 'ApplicationUnderTest.TitleInputBar'.", repo.ApplicationUnderTest.TitleInputBarInfo, new RecordItemIndex(5));
            repo.ApplicationUnderTest.TitleInputBar.PressKeys(newTemplateName);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.AddEditFieldForm.DropdownBtn' at Center.", repo.ApplicationUnderTest.AddEditFieldForm.DropdownBtnInfo, new RecordItemIndex(6));
            repo.ApplicationUnderTest.AddEditFieldForm.DropdownBtn.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'InnerText' from item 'ApplicationUnderTest.AddEditFieldForm.parentItem_FirstInstance' and assigning its value to variable 'parentName'.", repo.ApplicationUnderTest.AddEditFieldForm.parentItem_FirstInstanceInfo, new RecordItemIndex(7));
            parentName = repo.ApplicationUnderTest.AddEditFieldForm.parentItem_FirstInstance.Element.GetAttributeValueText("InnerText");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.AddEditFieldForm.parentItem_FirstInstance' at Center.", repo.ApplicationUnderTest.AddEditFieldForm.parentItem_FirstInstanceInfo, new RecordItemIndex(8));
            repo.ApplicationUnderTest.AddEditFieldForm.parentItem_FirstInstance.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.AddEditFieldForm.SiteBuildingRoom' at Center.", repo.ApplicationUnderTest.AddEditFieldForm.SiteBuildingRoomInfo, new RecordItemIndex(9));
            repo.ApplicationUnderTest.AddEditFieldForm.SiteBuildingRoom.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'InnerText' from item 'ApplicationUnderTest.CdkOverlayContainer.MatOption1' and assigning its value to variable 'siteBuildingRoom'.", repo.ApplicationUnderTest.CdkOverlayContainer.MatOption1Info, new RecordItemIndex(10));
            siteBuildingRoom = repo.ApplicationUnderTest.CdkOverlayContainer.MatOption1.Element.GetAttributeValueText("InnerText");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.CdkOverlayContainer.MatOption1' at Center.", repo.ApplicationUnderTest.CdkOverlayContainer.MatOption1Info, new RecordItemIndex(11));
            repo.ApplicationUnderTest.CdkOverlayContainer.MatOption1.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 30s to not exist. Associated repository item: 'ApplicationUnderTest.FaFaSpinFaSpinner'", repo.ApplicationUnderTest.FaFaSpinFaSpinnerInfo, new ActionTimeout(30000), new RecordItemIndex(12));
            repo.ApplicationUnderTest.FaFaSpinFaSpinnerInfo.WaitForNotExists(30000);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.AddEditFieldForm.fieldTypeDropdpown' at Center.", repo.ApplicationUnderTest.AddEditFieldForm.fieldTypeDropdpownInfo, new RecordItemIndex(13));
            repo.ApplicationUnderTest.AddEditFieldForm.fieldTypeDropdpown.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'InnerText' from item 'ApplicationUnderTest.CdkOverlayContainer.fieldType_FirstInstance' and assigning its value to variable 'fieldType'.", repo.ApplicationUnderTest.CdkOverlayContainer.fieldType_FirstInstanceInfo, new RecordItemIndex(14));
            fieldType = repo.ApplicationUnderTest.CdkOverlayContainer.fieldType_FirstInstance.Element.GetAttributeValueText("InnerText");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.CdkOverlayContainer.fieldType_FirstInstance' at Center.", repo.ApplicationUnderTest.CdkOverlayContainer.fieldType_FirstInstanceInfo, new RecordItemIndex(15));
            repo.ApplicationUnderTest.CdkOverlayContainer.fieldType_FirstInstance.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.AddEditFieldForm.unitDropdown' at Center.", repo.ApplicationUnderTest.AddEditFieldForm.unitDropdownInfo, new RecordItemIndex(16));
            repo.ApplicationUnderTest.AddEditFieldForm.unitDropdown.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'InnerText' from item 'ApplicationUnderTest.CdkOverlayContainer.MatOption1' and assigning its value to variable 'unitType'.", repo.ApplicationUnderTest.CdkOverlayContainer.MatOption1Info, new RecordItemIndex(17));
            unitType = repo.ApplicationUnderTest.CdkOverlayContainer.MatOption1.Element.GetAttributeValueText("InnerText");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.CdkOverlayContainer.MatOption1' at Center.", repo.ApplicationUnderTest.CdkOverlayContainer.MatOption1Info, new RecordItemIndex(18));
            repo.ApplicationUnderTest.CdkOverlayContainer.MatOption1.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.AddEditFieldForm.sequenceNumber' at Center.", repo.ApplicationUnderTest.AddEditFieldForm.sequenceNumberInfo, new RecordItemIndex(19));
            repo.ApplicationUnderTest.AddEditFieldForm.sequenceNumber.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$sequenceNumber' with focus on 'ApplicationUnderTest.AddEditFieldForm.sequenceNumber'.", repo.ApplicationUnderTest.AddEditFieldForm.sequenceNumberInfo, new RecordItemIndex(20));
            repo.ApplicationUnderTest.AddEditFieldForm.sequenceNumber.PressKeys(sequenceNumber);
            Delay.Milliseconds(0);
            
            isGroup = Mouse_Click_Checkbox(repo.ApplicationUnderTest.AddEditFieldForm.CheckboxInfo, ValueConverter.ArgumentFromString<bool>("isGroup", "False"));
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.CdkOverlayContainer.SaveButton' at Center.", repo.ApplicationUnderTest.CdkOverlayContainer.SaveButtonInfo, new RecordItemIndex(22));
            repo.ApplicationUnderTest.CdkOverlayContainer.SaveButton.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 30s to not exist. Associated repository item: 'ApplicationUnderTest.FaFaSpinFaSpinner'", repo.ApplicationUnderTest.FaFaSpinFaSpinnerInfo, new ActionTimeout(30000), new RecordItemIndex(23));
            repo.ApplicationUnderTest.FaFaSpinFaSpinnerInfo.WaitForNotExists(30000);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
