///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace BudgetItemAutomationIFM
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The validateCreateCategory_2_Fail recording.
    /// </summary>
    [TestModule("853d4ddc-bdf4-4250-9a0c-aad77f9a28e0", ModuleType.Recording, 1)]
    public partial class ValidateCreateCategory_2_Fail : ITestModule
    {
        /// <summary>
        /// Holds an instance of the BudgetItemAutomationIFMRepository repository.
        /// </summary>
        public static BudgetItemAutomationIFMRepository repo = BudgetItemAutomationIFMRepository.Instance;

        static ValidateCreateCategory_2_Fail instance = new ValidateCreateCategory_2_Fail();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public ValidateCreateCategory_2_Fail()
        {
            itemName = "";
            firstRecord = "";
            secondRecord = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static ValidateCreateCategory_2_Fail Instance
        {
            get { return instance; }
        }

#region Variables

        string _itemName;

        /// <summary>
        /// Gets or sets the value of variable itemName.
        /// </summary>
        [TestVariable("03c672c8-68c8-455a-b175-7f71a4844343")]
        public string itemName
        {
            get { return _itemName; }
            set { _itemName = value; }
        }

        string _firstRecord;

        /// <summary>
        /// Gets or sets the value of variable firstRecord.
        /// </summary>
        [TestVariable("5381f94a-8162-4b61-988b-b1760b96a44d")]
        public string firstRecord
        {
            get { return _firstRecord; }
            set { _firstRecord = value; }
        }

        string _secondRecord;

        /// <summary>
        /// Gets or sets the value of variable secondRecord.
        /// </summary>
        [TestVariable("42305d6f-da17-4d55-b81a-fbcb1a5183a6")]
        public string secondRecord
        {
            get { return _secondRecord; }
            set { _secondRecord = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            //HelperMethodsCollection.validationNotExist(repo.ApplicationUnderTest.DivTagBudgetCategotyHasBeenUpdated);
            //Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating NotExists on item 'ApplicationUnderTest.DivTagBudgetCategotyHasBeenUpdated'.", repo.ApplicationUnderTest.DivTagBudgetCategotyHasBeenUpdatedInfo, new RecordItemIndex(1));
            //Validate.NotExists(repo.ApplicationUnderTest.DivTagBudgetCategotyHasBeenUpdatedInfo);
            //Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Visible='True') on item 'ApplicationUnderTest.SwalOverlaySwalOverlayShowModal.SwalModal'.", repo.ApplicationUnderTest.SwalOverlaySwalOverlayShowModal.SwalModalInfo, new RecordItemIndex(2));
            Validate.AttributeEqual(repo.ApplicationUnderTest.SwalOverlaySwalOverlayShowModal.SwalModalInfo, "Visible", "True");
            Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText='The Budget Category already exists. Please revise the current entry.') on item 'ApplicationUnderTest.SwalOverlaySwalOverlayShowModal.TheBudgetCategoryAlreadyExistsPlea'.", repo.ApplicationUnderTest.SwalOverlaySwalOverlayShowModal.TheBudgetCategoryAlreadyExistsPleaInfo, new RecordItemIndex(3));
            //Validate.AttributeEqual(repo.ApplicationUnderTest.SwalOverlaySwalOverlayShowModal.TheBudgetCategoryAlreadyExistsPleaInfo, "InnerText", "The Budget Category already exists. Please revise the current entry.");
            //Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.SwalOverlaySwalOverlayShowModal.ButtonTagOK' at Center.", repo.ApplicationUnderTest.SwalOverlaySwalOverlayShowModal.ButtonTagOKInfo, new RecordItemIndex(4));
            repo.ApplicationUnderTest.SwalOverlaySwalOverlayShowModal.ButtonTagOK.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.Content1.ButtonTagCancel3' at Center.", repo.ApplicationUnderTest.Content1.ButtonTagCancel3Info, new RecordItemIndex(5));
            repo.ApplicationUnderTest.Content1.ButtonTagCancel3.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute TagValue to '' on item 'ApplicationUnderTest.searchBar'.", repo.ApplicationUnderTest.searchBarInfo, new RecordItemIndex(6));
            repo.ApplicationUnderTest.searchBar.Element.SetAttributeValue("TagValue", "");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.searchBar' at Center.", repo.ApplicationUnderTest.searchBarInfo, new RecordItemIndex(7));
            repo.ApplicationUnderTest.searchBar.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$itemName' with focus on 'ApplicationUnderTest.searchBar'.", repo.ApplicationUnderTest.searchBarInfo, new RecordItemIndex(8));
            repo.ApplicationUnderTest.searchBar.PressKeys(itemName);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 500ms.", new RecordItemIndex(9));
            Delay.Duration(500, false);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'InnerText' from item 'ApplicationUnderTest.firstElement_anyTag' and assigning its value to variable 'firstRecord'.", repo.ApplicationUnderTest.firstElement_anyTagInfo, new RecordItemIndex(10));
            firstRecord = repo.ApplicationUnderTest.firstElement_anyTag.Element.GetAttributeValueText("InnerText");
            Delay.Milliseconds(0);
            
            HelperMethodsCollection.compareSecondRecord_IfExist(firstRecord, ".//table/tbody/tr[2]/td[1]/?");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Ctrl+A' Press with focus on 'ApplicationUnderTest.searchBar'.", repo.ApplicationUnderTest.searchBarInfo, new RecordItemIndex(12));
            Keyboard.PrepareFocus(repo.ApplicationUnderTest.searchBar);
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, 30, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Back}' with focus on 'ApplicationUnderTest.searchBar'.", repo.ApplicationUnderTest.searchBarInfo, new RecordItemIndex(13));
            repo.ApplicationUnderTest.searchBar.PressKeys("{Back}");
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
