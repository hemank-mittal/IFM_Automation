///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace BudgetItemAutomationIFM
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The createPATemplate recording.
    /// </summary>
    [TestModule("9e681959-0b25-44ac-9ae6-f2b5824c01ee", ModuleType.Recording, 1)]
    public partial class createPATemplate : ITestModule
    {
        /// <summary>
        /// Holds an instance of the BudgetItemAutomationIFMRepository repository.
        /// </summary>
        public static BudgetItemAutomationIFMRepository repo = BudgetItemAutomationIFMRepository.Instance;

        static createPATemplate instance = new createPATemplate();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public createPATemplate()
        {
            itemCount = "";
            newTemplateName = "";
            linkedCategory1 = "";
            linkedCategory2 = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static createPATemplate Instance
        {
            get { return instance; }
        }

#region Variables

        string _itemCount;

        /// <summary>
        /// Gets or sets the value of variable itemCount.
        /// </summary>
        [TestVariable("05918e4c-261c-42ae-aa73-f42b9aa8de1f")]
        public string itemCount
        {
            get { return _itemCount; }
            set { _itemCount = value; }
        }

        string _linkedCategory1;

        /// <summary>
        /// Gets or sets the value of variable linkedCategory1.
        /// </summary>
        [TestVariable("b4eb5949-91bb-4358-913e-940199d9a66e")]
        public string linkedCategory1
        {
            get { return _linkedCategory1; }
            set { _linkedCategory1 = value; }
        }

        string _linkedCategory2;

        /// <summary>
        /// Gets or sets the value of variable linkedCategory2.
        /// </summary>
        [TestVariable("410a118f-25e8-4665-a84b-cb49c13304d3")]
        public string linkedCategory2
        {
            get { return _linkedCategory2; }
            set { _linkedCategory2 = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable newTemplateName.
        /// </summary>
        [TestVariable("6b123570-0b63-40fc-b7c5-cd3a0110c6ff")]
        public string newTemplateName
        {
            get { return repo.newTemplateName; }
            set { repo.newTemplateName = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            itemCount = ValueConverter.ToString(HelperMethodsCollection.getNumberOfRecordsFromFooter(repo.ApplicationUnderTest.showingNumberOfRecords));
            Delay.Milliseconds(0);
            
            newTemplateName = HelperMethodsCollection.getNewCreateItem(ValueConverter.ArgumentFromString<int>("nextCount", itemCount), "category");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.createButtonTag' at Center.", repo.ApplicationUnderTest.createButtonTagInfo, new RecordItemIndex(2));
            repo.ApplicationUnderTest.createButtonTag.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 30s to not exist. Associated repository item: 'ApplicationUnderTest.FaFaSpinFaSpinner'", repo.ApplicationUnderTest.FaFaSpinFaSpinnerInfo, new ActionTimeout(30000), new RecordItemIndex(3));
            repo.ApplicationUnderTest.FaFaSpinFaSpinnerInfo.WaitForNotExists(30000);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.TitleInputBar' at Center.", repo.ApplicationUnderTest.TitleInputBarInfo, new RecordItemIndex(4));
            repo.ApplicationUnderTest.TitleInputBar.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$newTemplateName' with focus on 'ApplicationUnderTest.TitleInputBar'.", repo.ApplicationUnderTest.TitleInputBarInfo, new RecordItemIndex(5));
            repo.ApplicationUnderTest.TitleInputBar.PressKeys(newTemplateName);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.Content1.PACategory_dropdown' at Center.", repo.ApplicationUnderTest.Content1.PACategory_dropdownInfo, new RecordItemIndex(6));
            repo.ApplicationUnderTest.Content1.PACategory_dropdown.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'InnerText' from item 'ApplicationUnderTest.PACategory_firstInstance' and assigning its value to variable 'linkedCategory1'.", repo.ApplicationUnderTest.PACategory_firstInstanceInfo, new RecordItemIndex(7));
            linkedCategory1 = repo.ApplicationUnderTest.PACategory_firstInstance.Element.GetAttributeValueText("InnerText");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'InnerText' from item 'ApplicationUnderTest.PACategory_secondInstance' and assigning its value to variable 'linkedCategory2'.", repo.ApplicationUnderTest.PACategory_secondInstanceInfo, new RecordItemIndex(8));
            linkedCategory2 = repo.ApplicationUnderTest.PACategory_secondInstance.Element.GetAttributeValueText("InnerText");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.PACategory_firstInstance' at Center.", repo.ApplicationUnderTest.PACategory_firstInstanceInfo, new RecordItemIndex(9));
            repo.ApplicationUnderTest.PACategory_firstInstance.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.PACategory_secondInstance' at Center.", repo.ApplicationUnderTest.PACategory_secondInstanceInfo, new RecordItemIndex(10));
            repo.ApplicationUnderTest.PACategory_secondInstance.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.Content1.PACategory_dropdown' at Center.", repo.ApplicationUnderTest.Content1.PACategory_dropdownInfo, new RecordItemIndex(11));
            repo.ApplicationUnderTest.Content1.PACategory_dropdown.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.Submit' at Center.", repo.ApplicationUnderTest.SubmitInfo, new RecordItemIndex(12));
            repo.ApplicationUnderTest.Submit.Click();
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
