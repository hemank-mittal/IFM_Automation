///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace BudgetItemAutomationIFM
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The validateRoom_MDC recording.
    /// </summary>
    [TestModule("2061ac00-4193-45f4-85f1-b51cb75cfbbb", ModuleType.Recording, 1)]
    public partial class validateRoom_MDC : ITestModule
    {
        /// <summary>
        /// Holds an instance of the BudgetItemAutomationIFMRepository repository.
        /// </summary>
        public static BudgetItemAutomationIFMRepository repo = BudgetItemAutomationIFMRepository.Instance;

        static validateRoom_MDC instance = new validateRoom_MDC();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public validateRoom_MDC()
        {
            roomDescription = "";
            visibleBiulding = "";
            visibleDescription = "";
            visibleRoomName = "";
            visibleRoomNumber = "";
            selectedBuilding = "";
            roomName = "";
            roomNumber = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static validateRoom_MDC Instance
        {
            get { return instance; }
        }

#region Variables

        string _roomDescription;

        /// <summary>
        /// Gets or sets the value of variable roomDescription.
        /// </summary>
        [TestVariable("82d2494a-ec43-4a41-92f5-d503c5b5e7a1")]
        public string roomDescription
        {
            get { return _roomDescription; }
            set { _roomDescription = value; }
        }

        string _visibleBiulding;

        /// <summary>
        /// Gets or sets the value of variable visibleBiulding.
        /// </summary>
        [TestVariable("3f85feb8-16ec-4014-9f27-7c7732935a08")]
        public string visibleBiulding
        {
            get { return _visibleBiulding; }
            set { _visibleBiulding = value; }
        }

        string _visibleDescription;

        /// <summary>
        /// Gets or sets the value of variable visibleDescription.
        /// </summary>
        [TestVariable("efb0c9ed-acde-40fc-b669-982745232ab7")]
        public string visibleDescription
        {
            get { return _visibleDescription; }
            set { _visibleDescription = value; }
        }

        string _visibleRoomName;

        /// <summary>
        /// Gets or sets the value of variable visibleRoomName.
        /// </summary>
        [TestVariable("ac0ba3e5-865b-41c1-a27a-2c8f8a12c4eb")]
        public string visibleRoomName
        {
            get { return _visibleRoomName; }
            set { _visibleRoomName = value; }
        }

        string _visibleRoomNumber;

        /// <summary>
        /// Gets or sets the value of variable visibleRoomNumber.
        /// </summary>
        [TestVariable("cb738148-e8d6-48f9-95c2-3145a7ac381c")]
        public string visibleRoomNumber
        {
            get { return _visibleRoomNumber; }
            set { _visibleRoomNumber = value; }
        }

        string _selectedBuilding;

        /// <summary>
        /// Gets or sets the value of variable selectedBuilding.
        /// </summary>
        [TestVariable("60fd5e78-61d1-4110-aa91-86b1926daf86")]
        public string selectedBuilding
        {
            get { return _selectedBuilding; }
            set { _selectedBuilding = value; }
        }

        string _roomName;

        /// <summary>
        /// Gets or sets the value of variable roomName.
        /// </summary>
        [TestVariable("05a5afa8-3ec1-4f5f-beb4-e608358412ba")]
        public string roomName
        {
            get { return _roomName; }
            set { _roomName = value; }
        }

        string _roomNumber;

        /// <summary>
        /// Gets or sets the value of variable roomNumber.
        /// </summary>
        [TestVariable("dd7d63cb-090e-4275-9f98-81964dfd5696")]
        public string roomNumber
        {
            get { return _roomNumber; }
            set { _roomNumber = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable domain.
        /// </summary>
        [TestVariable("0e49bfa6-0c8f-4999-ad77-5babbb4e74af")]
        public string domain
        {
            get { return repo.domain; }
            set { repo.domain = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.searchBtn_Id_searchbox' at Center.", repo.ApplicationUnderTest.searchBtn_Id_searchboxInfo, new RecordItemIndex(0));
            repo.ApplicationUnderTest.searchBtn_Id_searchbox.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$roomName' with focus on 'ApplicationUnderTest.searchBtn_Id_searchbox'.", repo.ApplicationUnderTest.searchBtn_Id_searchboxInfo, new RecordItemIndex(1));
            repo.ApplicationUnderTest.searchBtn_Id_searchbox.PressKeys(roomName);
            Delay.Milliseconds(0);
            
            HelperMethodsCollection.waitForLoading();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'InnerText' from item 'ApplicationUnderTest.firstElement_anyTag' and assigning its value to variable 'visibleBiulding'.", repo.ApplicationUnderTest.firstElement_anyTagInfo, new RecordItemIndex(3));
            visibleBiulding = repo.ApplicationUnderTest.firstElement_anyTag.Element.GetAttributeValueText("InnerText");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'InnerText' from item 'ApplicationUnderTest.secondElement_anyTag' and assigning its value to variable 'visibleDescription'.", repo.ApplicationUnderTest.secondElement_anyTagInfo, new RecordItemIndex(4));
            visibleDescription = repo.ApplicationUnderTest.secondElement_anyTag.Element.GetAttributeValueText("InnerText");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'InnerText' from item 'ApplicationUnderTest.thirdElement_anyTag' and assigning its value to variable 'visibleRoomName'.", repo.ApplicationUnderTest.thirdElement_anyTagInfo, new RecordItemIndex(5));
            visibleRoomName = repo.ApplicationUnderTest.thirdElement_anyTag.Element.GetAttributeValueText("InnerText");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'InnerText' from item 'ApplicationUnderTest.fourthElement_anyTag' and assigning its value to variable 'visibleRoomNumber'.", repo.ApplicationUnderTest.fourthElement_anyTagInfo, new RecordItemIndex(6));
            visibleRoomNumber = repo.ApplicationUnderTest.fourthElement_anyTag.Element.GetAttributeValueText("InnerText");
            Delay.Milliseconds(0);
            
            HelperMethodsCollection.compareStrings(visibleBiulding, selectedBuilding);
            Delay.Milliseconds(0);
            
            HelperMethodsCollection.compareStrings(visibleDescription, roomDescription);
            Delay.Milliseconds(0);
            
            HelperMethodsCollection.compareStrings(visibleRoomName, roomName);
            Delay.Milliseconds(0);
            
            HelperMethodsCollection.compareStrings(visibleRoomNumber, roomNumber);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Ctrl+A' Press with focus on 'ApplicationUnderTest.searchBtn_Id_searchbox'.", repo.ApplicationUnderTest.searchBtn_Id_searchboxInfo, new RecordItemIndex(11));
            Keyboard.PrepareFocus(repo.ApplicationUnderTest.searchBtn_Id_searchbox);
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, 30, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Back}' with focus on 'ApplicationUnderTest.searchBtn_Id_searchbox'.", repo.ApplicationUnderTest.searchBtn_Id_searchboxInfo, new RecordItemIndex(12));
            repo.ApplicationUnderTest.searchBtn_Id_searchbox.PressKeys("{Back}");
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
