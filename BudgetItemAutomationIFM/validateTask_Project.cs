///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace BudgetItemAutomationIFM
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The validateTask_Project recording.
    /// </summary>
    [TestModule("afc4906c-713b-4396-9bab-f97a7521b401", ModuleType.Recording, 1)]
    public partial class validateTask_Project : ITestModule
    {
        /// <summary>
        /// Holds an instance of the BudgetItemAutomationIFMRepository repository.
        /// </summary>
        public static BudgetItemAutomationIFMRepository repo = BudgetItemAutomationIFMRepository.Instance;

        static validateTask_Project instance = new validateTask_Project();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public validateTask_Project()
        {
            itemName = "";
            visibleTaskTitle = "";
            startDate = "";
            visibleEndDate = "";
            visibleStartDate = "";
            endDate = "";
            visibleStatus = "";
            visibleNoOfActionItems = "";
            visiblePriority = "";
            status = "";
            priority = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static validateTask_Project Instance
        {
            get { return instance; }
        }

#region Variables

        string _itemName;

        /// <summary>
        /// Gets or sets the value of variable itemName.
        /// </summary>
        [TestVariable("39dae05f-b514-4ea5-9b6a-8953d09fdd5c")]
        public string itemName
        {
            get { return _itemName; }
            set { _itemName = value; }
        }

        string _visibleTaskTitle;

        /// <summary>
        /// Gets or sets the value of variable visibleTaskTitle.
        /// </summary>
        [TestVariable("7e909013-8d82-457b-a259-65c50399f527")]
        public string visibleTaskTitle
        {
            get { return _visibleTaskTitle; }
            set { _visibleTaskTitle = value; }
        }

        string _startDate;

        /// <summary>
        /// Gets or sets the value of variable startDate.
        /// </summary>
        [TestVariable("649be7f6-e5e6-46b1-8ea2-8fc5b833be53")]
        public string startDate
        {
            get { return _startDate; }
            set { _startDate = value; }
        }

        string _visibleEndDate;

        /// <summary>
        /// Gets or sets the value of variable visibleEndDate.
        /// </summary>
        [TestVariable("8e9d4619-a5a9-45cd-8f44-e07705f5c059")]
        public string visibleEndDate
        {
            get { return _visibleEndDate; }
            set { _visibleEndDate = value; }
        }

        string _visibleStartDate;

        /// <summary>
        /// Gets or sets the value of variable visibleStartDate.
        /// </summary>
        [TestVariable("7e5313d9-b65f-4563-81b4-33d35aa4f13d")]
        public string visibleStartDate
        {
            get { return _visibleStartDate; }
            set { _visibleStartDate = value; }
        }

        string _endDate;

        /// <summary>
        /// Gets or sets the value of variable endDate.
        /// </summary>
        [TestVariable("31c36904-c808-45c6-bd4d-7f45158b96fd")]
        public string endDate
        {
            get { return _endDate; }
            set { _endDate = value; }
        }

        string _visibleStatus;

        /// <summary>
        /// Gets or sets the value of variable visibleStatus.
        /// </summary>
        [TestVariable("f342b20f-1b7e-492c-a536-17c8028e37fe")]
        public string visibleStatus
        {
            get { return _visibleStatus; }
            set { _visibleStatus = value; }
        }

        string _visibleNoOfActionItems;

        /// <summary>
        /// Gets or sets the value of variable visibleNoOfActionItems.
        /// </summary>
        [TestVariable("e25bfbd1-cac0-47f7-92e4-618c7f98d0f8")]
        public string visibleNoOfActionItems
        {
            get { return _visibleNoOfActionItems; }
            set { _visibleNoOfActionItems = value; }
        }

        string _visiblePriority;

        /// <summary>
        /// Gets or sets the value of variable visiblePriority.
        /// </summary>
        [TestVariable("18270c2f-5ac8-47e6-8750-226423bbeab5")]
        public string visiblePriority
        {
            get { return _visiblePriority; }
            set { _visiblePriority = value; }
        }

        string _status;

        /// <summary>
        /// Gets or sets the value of variable status.
        /// </summary>
        [TestVariable("72645490-ccab-41b0-b9c6-6fbdc8b109e4")]
        public string status
        {
            get { return _status; }
            set { _status = value; }
        }

        string _priority;

        /// <summary>
        /// Gets or sets the value of variable priority.
        /// </summary>
        [TestVariable("0858391c-d71e-42ab-aacb-0f918e746404")]
        public string priority
        {
            get { return _priority; }
            set { _priority = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable domain.
        /// </summary>
        [TestVariable("0e49bfa6-0c8f-4999-ad77-5babbb4e74af")]
        public string domain
        {
            get { return repo.domain; }
            set { repo.domain = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.searchBar_type_search' at Center.", repo.ApplicationUnderTest.searchBar_type_searchInfo, new RecordItemIndex(0));
            repo.ApplicationUnderTest.searchBar_type_search.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$itemName' with focus on 'ApplicationUnderTest.searchBar_type_search'.", repo.ApplicationUnderTest.searchBar_type_searchInfo, new RecordItemIndex(1));
            repo.ApplicationUnderTest.searchBar_type_search.PressKeys(itemName);
            Delay.Milliseconds(20);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Return}' with focus on 'ApplicationUnderTest.searchBar_type_search'.", repo.ApplicationUnderTest.searchBar_type_searchInfo, new RecordItemIndex(2));
            repo.ApplicationUnderTest.searchBar_type_search.EnsureVisible();
            Keyboard.Press("{Return}");
            Delay.Milliseconds(0);
            
            HelperMethodsCollection.waitForLoading();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'InnerText' from item 'ApplicationUnderTest.syncfusionGridTable_records.row1_column1_aTag' and assigning its value to variable 'visibleTaskTitle'.", repo.ApplicationUnderTest.syncfusionGridTable_records.row1_column1_aTagInfo, new RecordItemIndex(4));
            visibleTaskTitle = repo.ApplicationUnderTest.syncfusionGridTable_records.row1_column1_aTag.Element.GetAttributeValueText("InnerText");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'InnerText' from item 'ApplicationUnderTest.syncfusionGridTable_records.row1_column2' and assigning its value to variable 'visibleStartDate'.", repo.ApplicationUnderTest.syncfusionGridTable_records.row1_column2Info, new RecordItemIndex(5));
            visibleStartDate = repo.ApplicationUnderTest.syncfusionGridTable_records.row1_column2.Element.GetAttributeValueText("InnerText");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'InnerText' from item 'ApplicationUnderTest.syncfusionGridTable_records.row1_column3' and assigning its value to variable 'visibleEndDate'.", repo.ApplicationUnderTest.syncfusionGridTable_records.row1_column3Info, new RecordItemIndex(6));
            visibleEndDate = repo.ApplicationUnderTest.syncfusionGridTable_records.row1_column3.Element.GetAttributeValueText("InnerText");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'InnerText' from item 'ApplicationUnderTest.syncfusionGridTable_records.row1_column4' and assigning its value to variable 'visibleStatus'.", repo.ApplicationUnderTest.syncfusionGridTable_records.row1_column4Info, new RecordItemIndex(7));
            visibleStatus = repo.ApplicationUnderTest.syncfusionGridTable_records.row1_column4.Element.GetAttributeValueText("InnerText");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'InnerText' from item 'ApplicationUnderTest.syncfusionGridTable_records.row1_column5' and assigning its value to variable 'visibleNoOfActionItems'.", repo.ApplicationUnderTest.syncfusionGridTable_records.row1_column5Info, new RecordItemIndex(8));
            visibleNoOfActionItems = repo.ApplicationUnderTest.syncfusionGridTable_records.row1_column5.Element.GetAttributeValueText("InnerText");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'InnerText' from item 'ApplicationUnderTest.syncfusionGridTable_records.row1_column6' and assigning its value to variable 'visiblePriority'.", repo.ApplicationUnderTest.syncfusionGridTable_records.row1_column6Info, new RecordItemIndex(9));
            visiblePriority = repo.ApplicationUnderTest.syncfusionGridTable_records.row1_column6.Element.GetAttributeValueText("InnerText");
            Delay.Milliseconds(0);
            
            HelperMethodsCollection.compareStrings(visibleTaskTitle, itemName);
            Delay.Milliseconds(0);
            
            HelperMethodsCollection.compareStrings(visibleStartDate, startDate);
            Delay.Milliseconds(0);
            
            HelperMethodsCollection.compareStrings(visibleEndDate, endDate);
            Delay.Milliseconds(0);
            
            HelperMethodsCollection.compareStrings(visibleStatus, "Pending");
            Delay.Milliseconds(0);
            
            HelperMethodsCollection.compareStrings(visibleNoOfActionItems, "0");
            Delay.Milliseconds(0);
            
            HelperMethodsCollection.compareStrings(visiblePriority, priority);
            Delay.Milliseconds(0);
            
            // Remove the actions created below once BLOCKER removed
            Report.Log(ReportLevel.Info, "Section", "Remove the actions created below once BLOCKER removed", new RecordItemIndex(16));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.searchBar_type_search' at Center.", repo.ApplicationUnderTest.searchBar_type_searchInfo, new RecordItemIndex(17));
            repo.ApplicationUnderTest.searchBar_type_search.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Ctrl+A' Press with focus on 'ApplicationUnderTest.searchBar_type_search'.", repo.ApplicationUnderTest.searchBar_type_searchInfo, new RecordItemIndex(18));
            Keyboard.PrepareFocus(repo.ApplicationUnderTest.searchBar_type_search);
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, 30, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Back}' with focus on 'ApplicationUnderTest.searchBar_type_search'.", repo.ApplicationUnderTest.searchBar_type_searchInfo, new RecordItemIndex(19));
            repo.ApplicationUnderTest.searchBar_type_search.EnsureVisible();
            Keyboard.Press("{Back}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Return}' with focus on 'ApplicationUnderTest.searchBar_type_search'.", repo.ApplicationUnderTest.searchBar_type_searchInfo, new RecordItemIndex(20));
            repo.ApplicationUnderTest.searchBar_type_search.EnsureVisible();
            Keyboard.Press("{Return}");
            Delay.Milliseconds(0);
            
            HelperMethodsCollection.waitForLoading();
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
