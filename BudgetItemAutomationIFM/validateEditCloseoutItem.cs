///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace BudgetItemAutomationIFM
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The validateEditCloseoutItem recording.
    /// </summary>
    [TestModule("34f76c73-c9f0-49cf-8d8a-d404d0769d22", ModuleType.Recording, 1)]
    public partial class validateEditCloseoutItem : ITestModule
    {
        /// <summary>
        /// Holds an instance of the BudgetItemAutomationIFMRepository repository.
        /// </summary>
        public static BudgetItemAutomationIFMRepository repo = BudgetItemAutomationIFMRepository.Instance;

        static validateEditCloseoutItem instance = new validateEditCloseoutItem();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public validateEditCloseoutItem()
        {
            newParentName = "";
            newTitle = "name  edited";
            newSpecificationSection = "";
            newDrawing = "";
            newCsiDivisionCode = "";
            newUniformatCode = "";
            newDescription = "";
            visibleTitle = "";
            visibleParentitem = "";
            visibleSpecificationSection = "";
            visibleDrawing = "";
            visibleCsiDivisionCode = "";
            visibleUniformatCode = "";
            visibleDescription = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static validateEditCloseoutItem Instance
        {
            get { return instance; }
        }

#region Variables

        string _newParentName;

        /// <summary>
        /// Gets or sets the value of variable newParentName.
        /// </summary>
        [TestVariable("a27103e2-c295-43c9-b353-d98434c10f8f")]
        public string newParentName
        {
            get { return _newParentName; }
            set { _newParentName = value; }
        }

        string _newTitle;

        /// <summary>
        /// Gets or sets the value of variable newTitle.
        /// </summary>
        [TestVariable("28fe1aea-af9e-4510-9934-5dfefc7c1eb4")]
        public string newTitle
        {
            get { return _newTitle; }
            set { _newTitle = value; }
        }

        string _newSpecificationSection;

        /// <summary>
        /// Gets or sets the value of variable newSpecificationSection.
        /// </summary>
        [TestVariable("fe122813-40b9-4deb-aabb-a124371161c4")]
        public string newSpecificationSection
        {
            get { return _newSpecificationSection; }
            set { _newSpecificationSection = value; }
        }

        string _newDrawing;

        /// <summary>
        /// Gets or sets the value of variable newDrawing.
        /// </summary>
        [TestVariable("a8eb34a5-1328-4b0d-af15-4b2bb3e073f0")]
        public string newDrawing
        {
            get { return _newDrawing; }
            set { _newDrawing = value; }
        }

        string _newCsiDivisionCode;

        /// <summary>
        /// Gets or sets the value of variable newCsiDivisionCode.
        /// </summary>
        [TestVariable("c13a879b-b109-4453-8836-eab393f58546")]
        public string newCsiDivisionCode
        {
            get { return _newCsiDivisionCode; }
            set { _newCsiDivisionCode = value; }
        }

        string _newUniformatCode;

        /// <summary>
        /// Gets or sets the value of variable newUniformatCode.
        /// </summary>
        [TestVariable("5c9dd756-8735-44da-b65b-e32f4e8b267c")]
        public string newUniformatCode
        {
            get { return _newUniformatCode; }
            set { _newUniformatCode = value; }
        }

        string _newDescription;

        /// <summary>
        /// Gets or sets the value of variable newDescription.
        /// </summary>
        [TestVariable("9f6f067b-2852-43db-a5b8-43dd287628e1")]
        public string newDescription
        {
            get { return _newDescription; }
            set { _newDescription = value; }
        }

        string _visibleTitle;

        /// <summary>
        /// Gets or sets the value of variable visibleTitle.
        /// </summary>
        [TestVariable("717dcdc9-561b-4545-8d60-9c8af0c70cdc")]
        public string visibleTitle
        {
            get { return _visibleTitle; }
            set { _visibleTitle = value; }
        }

        string _visibleParentitem;

        /// <summary>
        /// Gets or sets the value of variable visibleParentitem.
        /// </summary>
        [TestVariable("6e7ba69e-184c-4833-a327-e690a076a68f")]
        public string visibleParentitem
        {
            get { return _visibleParentitem; }
            set { _visibleParentitem = value; }
        }

        string _visibleSpecificationSection;

        /// <summary>
        /// Gets or sets the value of variable visibleSpecificationSection.
        /// </summary>
        [TestVariable("f0f9eeeb-73de-473a-a6c4-bbcebb802c1e")]
        public string visibleSpecificationSection
        {
            get { return _visibleSpecificationSection; }
            set { _visibleSpecificationSection = value; }
        }

        string _visibleDrawing;

        /// <summary>
        /// Gets or sets the value of variable visibleDrawing.
        /// </summary>
        [TestVariable("d9e3d4ab-f863-4a91-8257-6b61691a0195")]
        public string visibleDrawing
        {
            get { return _visibleDrawing; }
            set { _visibleDrawing = value; }
        }

        string _visibleCsiDivisionCode;

        /// <summary>
        /// Gets or sets the value of variable visibleCsiDivisionCode.
        /// </summary>
        [TestVariable("7f801d65-0de5-4c18-b47f-6d406b1946d7")]
        public string visibleCsiDivisionCode
        {
            get { return _visibleCsiDivisionCode; }
            set { _visibleCsiDivisionCode = value; }
        }

        string _visibleUniformatCode;

        /// <summary>
        /// Gets or sets the value of variable visibleUniformatCode.
        /// </summary>
        [TestVariable("c9cdd491-1d1d-48f7-b09a-eea57bdd0522")]
        public string visibleUniformatCode
        {
            get { return _visibleUniformatCode; }
            set { _visibleUniformatCode = value; }
        }

        string _visibleDescription;

        /// <summary>
        /// Gets or sets the value of variable visibleDescription.
        /// </summary>
        [TestVariable("e1f2ad95-6e69-4cb3-8882-c4d6e61d2d63")]
        public string visibleDescription
        {
            get { return _visibleDescription; }
            set { _visibleDescription = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Wait", "Waiting 30s to not exist. Associated repository item: 'ApplicationUnderTest.itemCreatedMessageToaster'", repo.ApplicationUnderTest.itemCreatedMessageToasterInfo, new ActionTimeout(30000), new RecordItemIndex(0));
            repo.ApplicationUnderTest.itemCreatedMessageToasterInfo.WaitForNotExists(30000);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute TagValue to '' on item 'ApplicationUnderTest.searchBar'.", repo.ApplicationUnderTest.searchBarInfo, new RecordItemIndex(1));
            repo.ApplicationUnderTest.searchBar.Element.SetAttributeValue("TagValue", "");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.searchBar' at Center.", repo.ApplicationUnderTest.searchBarInfo, new RecordItemIndex(2));
            repo.ApplicationUnderTest.searchBar.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$newTitle' with focus on 'ApplicationUnderTest.searchBar'.", repo.ApplicationUnderTest.searchBarInfo, new RecordItemIndex(3));
            repo.ApplicationUnderTest.searchBar.PressKeys(newTitle);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '' with focus on 'ApplicationUnderTest.searchBar'.", repo.ApplicationUnderTest.searchBarInfo, new RecordItemIndex(4));
            repo.ApplicationUnderTest.searchBar.PressKeys("");
            Delay.Milliseconds(20);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText=$newTitle) on item 'ApplicationUnderTest.firstElement_anyTag'.", repo.ApplicationUnderTest.firstElement_anyTagInfo, new RecordItemIndex(5));
            Validate.AttributeEqual(repo.ApplicationUnderTest.firstElement_anyTagInfo, "InnerText", newTitle);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.firstElement_anyTag' at Center.", repo.ApplicationUnderTest.firstElement_anyTagInfo, new RecordItemIndex(6));
            repo.ApplicationUnderTest.firstElement_anyTag.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 30s to not exist. Associated repository item: 'ApplicationUnderTest.FaFaSpinFaSpinner'", repo.ApplicationUnderTest.FaFaSpinFaSpinnerInfo, new ActionTimeout(30000), new RecordItemIndex(7));
            repo.ApplicationUnderTest.FaFaSpinFaSpinnerInfo.WaitForNotExists(30000);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'InnerText' from item 'ApplicationUnderTest.ItemData_Title' and assigning its value to variable 'visibleTitle'.", repo.ApplicationUnderTest.ItemData_TitleInfo, new RecordItemIndex(8));
            visibleTitle = repo.ApplicationUnderTest.ItemData_Title.Element.GetAttributeValueText("InnerText");
            Delay.Milliseconds(0);
            
            HelperMethodsCollection.compareStrings(visibleTitle, newTitle);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'InnerText' from item 'ApplicationUnderTest.ItemData_ParentItem' and assigning its value to variable 'visibleParentitem'.", repo.ApplicationUnderTest.ItemData_ParentItemInfo, new RecordItemIndex(10));
            visibleParentitem = repo.ApplicationUnderTest.ItemData_ParentItem.Element.GetAttributeValueText("InnerText");
            Delay.Milliseconds(0);
            
            HelperMethodsCollection.compareStrings(visibleParentitem, newParentName);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'InnerText' from item 'ApplicationUnderTest.ItemData_SpecificationSeciton' and assigning its value to variable 'visibleSpecificationSection'.", repo.ApplicationUnderTest.ItemData_SpecificationSecitonInfo, new RecordItemIndex(12));
            visibleSpecificationSection = repo.ApplicationUnderTest.ItemData_SpecificationSeciton.Element.GetAttributeValueText("InnerText");
            Delay.Milliseconds(0);
            
            HelperMethodsCollection.compareStrings(visibleSpecificationSection, newSpecificationSection);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'InnerText' from item 'ApplicationUnderTest.ItemData_Drawing' and assigning its value to variable 'visibleDrawing'.", repo.ApplicationUnderTest.ItemData_DrawingInfo, new RecordItemIndex(14));
            visibleDrawing = repo.ApplicationUnderTest.ItemData_Drawing.Element.GetAttributeValueText("InnerText");
            Delay.Milliseconds(0);
            
            HelperMethodsCollection.compareStrings(visibleDrawing, newDrawing);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'InnerText' from item 'ApplicationUnderTest.ItemData_CsiDivisionCode' and assigning its value to variable 'visibleCsiDivisionCode'.", repo.ApplicationUnderTest.ItemData_CsiDivisionCodeInfo, new RecordItemIndex(16));
            visibleCsiDivisionCode = repo.ApplicationUnderTest.ItemData_CsiDivisionCode.Element.GetAttributeValueText("InnerText");
            Delay.Milliseconds(0);
            
            HelperMethodsCollection.compareStrings(visibleCsiDivisionCode, newCsiDivisionCode);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'InnerText' from item 'ApplicationUnderTest.ItemData_UniformatCode' and assigning its value to variable 'visibleUniformatCode'.", repo.ApplicationUnderTest.ItemData_UniformatCodeInfo, new RecordItemIndex(18));
            visibleUniformatCode = repo.ApplicationUnderTest.ItemData_UniformatCode.Element.GetAttributeValueText("InnerText");
            Delay.Milliseconds(0);
            
            HelperMethodsCollection.compareStrings(visibleUniformatCode, newUniformatCode);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'InnerText' from item 'ApplicationUnderTest.ItemData_Description' and assigning its value to variable 'visibleDescription'.", repo.ApplicationUnderTest.ItemData_DescriptionInfo, new RecordItemIndex(20));
            visibleDescription = repo.ApplicationUnderTest.ItemData_Description.Element.GetAttributeValueText("InnerText");
            Delay.Milliseconds(0);
            
            HelperMethodsCollection.compareStrings(visibleDescription, newDescription);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.Content1.ButtonTagBack' at Center.", repo.ApplicationUnderTest.Content1.ButtonTagBackInfo, new RecordItemIndex(22));
            repo.ApplicationUnderTest.Content1.ButtonTagBack.Click();
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
