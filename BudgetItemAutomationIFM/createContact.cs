///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace BudgetItemAutomationIFM
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The createContact recording.
    /// </summary>
    [TestModule("f0debfc1-cb82-402c-9343-037727c04743", ModuleType.Recording, 1)]
    public partial class createContact : ITestModule
    {
        /// <summary>
        /// Holds an instance of the BudgetItemAutomationIFMRepository repository.
        /// </summary>
        public static BudgetItemAutomationIFMRepository repo = BudgetItemAutomationIFMRepository.Instance;

        static createContact instance = new createContact();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public createContact()
        {
            itemCount = "";
            newTemplateName = "";
            roleToAssign = "";
            email = "";
            fullName = "";
            jobTitle = "Test Account";
            addressLine1 = "";
            addressLine2 = "";
            city = "";
            country = "";
            zipCode = "";
            phoneNumber = "";
            organisation = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static createContact Instance
        {
            get { return instance; }
        }

#region Variables

        string _itemCount;

        /// <summary>
        /// Gets or sets the value of variable itemCount.
        /// </summary>
        [TestVariable("33e87d36-bb99-4e00-9585-68dde405c558")]
        public string itemCount
        {
            get { return _itemCount; }
            set { _itemCount = value; }
        }

        string _email;

        /// <summary>
        /// Gets or sets the value of variable email.
        /// </summary>
        [TestVariable("1eafb2f9-29a8-4885-969c-922757db4b4c")]
        public string email
        {
            get { return _email; }
            set { _email = value; }
        }

        string _fullName;

        /// <summary>
        /// Gets or sets the value of variable fullName.
        /// </summary>
        [TestVariable("d87f7d29-8153-4fde-9a17-272cf9dc823e")]
        public string fullName
        {
            get { return _fullName; }
            set { _fullName = value; }
        }

        string _jobTitle;

        /// <summary>
        /// Gets or sets the value of variable jobTitle.
        /// </summary>
        [TestVariable("13ccc78a-cbb5-4ac1-a2fe-6505a77fcc81")]
        public string jobTitle
        {
            get { return _jobTitle; }
            set { _jobTitle = value; }
        }

        string _addressLine1;

        /// <summary>
        /// Gets or sets the value of variable addressLine1.
        /// </summary>
        [TestVariable("c0dfa7d4-c2fb-41ed-9b0d-94601832d7e0")]
        public string addressLine1
        {
            get { return _addressLine1; }
            set { _addressLine1 = value; }
        }

        string _addressLine2;

        /// <summary>
        /// Gets or sets the value of variable addressLine2.
        /// </summary>
        [TestVariable("e0634997-4f4e-4243-9f22-d9d93641bda1")]
        public string addressLine2
        {
            get { return _addressLine2; }
            set { _addressLine2 = value; }
        }

        string _city;

        /// <summary>
        /// Gets or sets the value of variable city.
        /// </summary>
        [TestVariable("76741a76-41ef-4b00-bf46-1af9e336c364")]
        public string city
        {
            get { return _city; }
            set { _city = value; }
        }

        string _country;

        /// <summary>
        /// Gets or sets the value of variable country.
        /// </summary>
        [TestVariable("f3a2721b-a819-4236-b4af-c4d00e14cbb7")]
        public string country
        {
            get { return _country; }
            set { _country = value; }
        }

        string _zipCode;

        /// <summary>
        /// Gets or sets the value of variable zipCode.
        /// </summary>
        [TestVariable("a42fc47e-ccc2-477b-8a83-04a59889b897")]
        public string zipCode
        {
            get { return _zipCode; }
            set { _zipCode = value; }
        }

        string _phoneNumber;

        /// <summary>
        /// Gets or sets the value of variable phoneNumber.
        /// </summary>
        [TestVariable("faee5e0e-4a33-4699-bc18-27da48bed7b7")]
        public string phoneNumber
        {
            get { return _phoneNumber; }
            set { _phoneNumber = value; }
        }

        string _organisation;

        /// <summary>
        /// Gets or sets the value of variable organisation.
        /// </summary>
        [TestVariable("e162e31d-78b2-4377-b3af-b59318a0a332")]
        public string organisation
        {
            get { return _organisation; }
            set { _organisation = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable domain.
        /// </summary>
        [TestVariable("0e49bfa6-0c8f-4999-ad77-5babbb4e74af")]
        public string domain
        {
            get { return repo.domain; }
            set { repo.domain = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable roleToAssign.
        /// </summary>
        [TestVariable("35d1061f-0542-48d9-bb28-5f86d8bcc8a8")]
        public string roleToAssign
        {
            get { return repo.roleToAssign; }
            set { repo.roleToAssign = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable newTemplateName.
        /// </summary>
        [TestVariable("77feafb6-1148-42e1-b39b-3a79da8cd675")]
        public string newTemplateName
        {
            get { return repo.newTemplateName; }
            set { repo.newTemplateName = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.contactsForm.FirstName' at Center.", repo.ApplicationUnderTest.contactsForm.FirstNameInfo, new RecordItemIndex(0));
            repo.ApplicationUnderTest.contactsForm.FirstName.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$newTemplateName' with focus on 'ApplicationUnderTest.contactsForm.FirstName'.", repo.ApplicationUnderTest.contactsForm.FirstNameInfo, new RecordItemIndex(1));
            repo.ApplicationUnderTest.contactsForm.FirstName.PressKeys(newTemplateName);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.contactsForm.LastName' at Center.", repo.ApplicationUnderTest.contactsForm.LastNameInfo, new RecordItemIndex(2));
            repo.ApplicationUnderTest.contactsForm.LastName.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$roleToAssign' with focus on 'ApplicationUnderTest.contactsForm.LastName'.", repo.ApplicationUnderTest.contactsForm.LastNameInfo, new RecordItemIndex(3));
            repo.ApplicationUnderTest.contactsForm.LastName.PressKeys(roleToAssign);
            Delay.Milliseconds(0);
            
            fullName = HelperMethodsCollection.concatStrings_spaces(newTemplateName, roleToAssign, "", "", "", "");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.contactsForm.IFMRolesDropdown' at Center.", repo.ApplicationUnderTest.contactsForm.IFMRolesDropdownInfo, new RecordItemIndex(5));
            repo.ApplicationUnderTest.contactsForm.IFMRolesDropdown.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.contactsForm.searchIFMRoles' at Center.", repo.ApplicationUnderTest.contactsForm.searchIFMRolesInfo, new RecordItemIndex(6));
            repo.ApplicationUnderTest.contactsForm.searchIFMRoles.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$roleToAssign' with focus on 'ApplicationUnderTest.contactsForm.searchIFMRoles'.", repo.ApplicationUnderTest.contactsForm.searchIFMRolesInfo, new RecordItemIndex(7));
            repo.ApplicationUnderTest.contactsForm.searchIFMRoles.PressKeys(roleToAssign);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.contactsForm.searchedRole' at Center.", repo.ApplicationUnderTest.contactsForm.searchedRoleInfo, new RecordItemIndex(8));
            repo.ApplicationUnderTest.contactsForm.searchedRole.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.contactsForm.IFMRolesDropdown' at Center.", repo.ApplicationUnderTest.contactsForm.IFMRolesDropdownInfo, new RecordItemIndex(9));
            repo.ApplicationUnderTest.contactsForm.IFMRolesDropdown.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.contactsForm.OrganizationDropdown' at Center.", repo.ApplicationUnderTest.contactsForm.OrganizationDropdownInfo, new RecordItemIndex(10));
            repo.ApplicationUnderTest.contactsForm.OrganizationDropdown.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'InnerText' from item 'ApplicationUnderTest.contactsForm.organizatiion_firstInstance' and assigning its value to variable 'organisation'.", repo.ApplicationUnderTest.contactsForm.organizatiion_firstInstanceInfo, new RecordItemIndex(11));
            organisation = repo.ApplicationUnderTest.contactsForm.organizatiion_firstInstance.Element.GetAttributeValueText("InnerText");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.contactsForm.organizatiion_firstInstance' at Center.", repo.ApplicationUnderTest.contactsForm.organizatiion_firstInstanceInfo, new RecordItemIndex(12));
            repo.ApplicationUnderTest.contactsForm.organizatiion_firstInstance.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.contactsForm.OrganizationDropdown' at Center.", repo.ApplicationUnderTest.contactsForm.OrganizationDropdownInfo, new RecordItemIndex(13));
            repo.ApplicationUnderTest.contactsForm.OrganizationDropdown.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.contactsForm.Jobtitle' at Center.", repo.ApplicationUnderTest.contactsForm.JobtitleInfo, new RecordItemIndex(14));
            repo.ApplicationUnderTest.contactsForm.Jobtitle.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$jobTitle' with focus on 'ApplicationUnderTest.contactsForm.Jobtitle'.", repo.ApplicationUnderTest.contactsForm.JobtitleInfo, new RecordItemIndex(15));
            repo.ApplicationUnderTest.contactsForm.Jobtitle.PressKeys(jobTitle);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.contactsForm.Address1' at Center.", repo.ApplicationUnderTest.contactsForm.Address1Info, new RecordItemIndex(16));
            repo.ApplicationUnderTest.contactsForm.Address1.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$addressLine1' with focus on 'ApplicationUnderTest.contactsForm.Address1'.", repo.ApplicationUnderTest.contactsForm.Address1Info, new RecordItemIndex(17));
            repo.ApplicationUnderTest.contactsForm.Address1.PressKeys(addressLine1);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.contactsForm.Address2' at Center.", repo.ApplicationUnderTest.contactsForm.Address2Info, new RecordItemIndex(18));
            repo.ApplicationUnderTest.contactsForm.Address2.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$addressLine2' with focus on 'ApplicationUnderTest.contactsForm.Address2'.", repo.ApplicationUnderTest.contactsForm.Address2Info, new RecordItemIndex(19));
            repo.ApplicationUnderTest.contactsForm.Address2.PressKeys(addressLine2);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.contactsForm.City' at Center.", repo.ApplicationUnderTest.contactsForm.CityInfo, new RecordItemIndex(20));
            repo.ApplicationUnderTest.contactsForm.City.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$city' with focus on 'ApplicationUnderTest.contactsForm.City'.", repo.ApplicationUnderTest.contactsForm.CityInfo, new RecordItemIndex(21));
            repo.ApplicationUnderTest.contactsForm.City.PressKeys(city);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.contactsForm.CountryDropdown' at Center.", repo.ApplicationUnderTest.contactsForm.CountryDropdownInfo, new RecordItemIndex(22));
            repo.ApplicationUnderTest.contactsForm.CountryDropdown.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.contactsForm.searchCountry' at Center.", repo.ApplicationUnderTest.contactsForm.searchCountryInfo, new RecordItemIndex(23));
            repo.ApplicationUnderTest.contactsForm.searchCountry.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$country' with focus on 'ApplicationUnderTest.contactsForm.searchCountry'.", repo.ApplicationUnderTest.contactsForm.searchCountryInfo, new RecordItemIndex(24));
            repo.ApplicationUnderTest.contactsForm.searchCountry.PressKeys(country);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.contactsForm.searchedCountry' at Center.", repo.ApplicationUnderTest.contactsForm.searchedCountryInfo, new RecordItemIndex(25));
            repo.ApplicationUnderTest.contactsForm.searchedCountry.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.contactsForm.CountryDropdown' at Center.", repo.ApplicationUnderTest.contactsForm.CountryDropdownInfo, new RecordItemIndex(26));
            repo.ApplicationUnderTest.contactsForm.CountryDropdown.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.contactsForm.StateDropdown' at Center.", repo.ApplicationUnderTest.contactsForm.StateDropdownInfo, new RecordItemIndex(27));
            repo.ApplicationUnderTest.contactsForm.StateDropdown.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.contactsForm.StateDropdown_firstInstance' at Center.", repo.ApplicationUnderTest.contactsForm.StateDropdown_firstInstanceInfo, new RecordItemIndex(28));
            repo.ApplicationUnderTest.contactsForm.StateDropdown_firstInstance.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.contactsForm.StateDropdown' at Center.", repo.ApplicationUnderTest.contactsForm.StateDropdownInfo, new RecordItemIndex(29));
            repo.ApplicationUnderTest.contactsForm.StateDropdown.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.contactsForm.ZipCode' at Center.", repo.ApplicationUnderTest.contactsForm.ZipCodeInfo, new RecordItemIndex(30));
            repo.ApplicationUnderTest.contactsForm.ZipCode.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$zipCode' with focus on 'ApplicationUnderTest.contactsForm.ZipCode'.", repo.ApplicationUnderTest.contactsForm.ZipCodeInfo, new RecordItemIndex(31));
            repo.ApplicationUnderTest.contactsForm.ZipCode.PressKeys(zipCode);
            Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.contactsForm.FacebookURL' at Center.", repo.ApplicationUnderTest.contactsForm.FacebookURLInfo, new RecordItemIndex(32));
            //repo.ApplicationUnderTest.contactsForm.FacebookURL.Click();
            //Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'face' with focus on 'ApplicationUnderTest.contactsForm.FacebookURL'.", repo.ApplicationUnderTest.contactsForm.FacebookURLInfo, new RecordItemIndex(33));
            //repo.ApplicationUnderTest.contactsForm.FacebookURL.PressKeys("face");
            //Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.contactsForm.LinkedinURL' at Center.", repo.ApplicationUnderTest.contactsForm.LinkedinURLInfo, new RecordItemIndex(34));
            //repo.ApplicationUnderTest.contactsForm.LinkedinURL.Click();
            //Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'link' with focus on 'ApplicationUnderTest.contactsForm.LinkedinURL'.", repo.ApplicationUnderTest.contactsForm.LinkedinURLInfo, new RecordItemIndex(35));
            //repo.ApplicationUnderTest.contactsForm.LinkedinURL.PressKeys("link");
            //Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.contactsForm.TwitterURL' at Center.", repo.ApplicationUnderTest.contactsForm.TwitterURLInfo, new RecordItemIndex(36));
            //repo.ApplicationUnderTest.contactsForm.TwitterURL.Click();
            //Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'twit' with focus on 'ApplicationUnderTest.contactsForm.TwitterURL'.", repo.ApplicationUnderTest.contactsForm.TwitterURLInfo, new RecordItemIndex(37));
            //repo.ApplicationUnderTest.contactsForm.TwitterURL.PressKeys("twit");
            //Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Invoke action", "Invoking EnsureVisible() on item 'ApplicationUnderTest.contactsForm.submitButton'.", repo.ApplicationUnderTest.contactsForm.submitButtonInfo, new RecordItemIndex(38));
            repo.ApplicationUnderTest.contactsForm.submitButton.EnsureVisible();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.contactsForm.ContactEmail' at Center.", repo.ApplicationUnderTest.contactsForm.ContactEmailInfo, new RecordItemIndex(39));
            repo.ApplicationUnderTest.contactsForm.ContactEmail.Click();
            Delay.Milliseconds(0);
            
            email = HelperMethodsCollection.getNewCreateItem(ValueConverter.ArgumentFromString<int>("nextCount", itemCount), "email");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$email' with focus on 'ApplicationUnderTest.contactsForm.ContactEmail'.", repo.ApplicationUnderTest.contactsForm.ContactEmailInfo, new RecordItemIndex(41));
            repo.ApplicationUnderTest.contactsForm.ContactEmail.PressKeys(email);
            Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.contactsForm.ContactFax' at Center.", repo.ApplicationUnderTest.contactsForm.ContactFaxInfo, new RecordItemIndex(42));
            //repo.ApplicationUnderTest.contactsForm.ContactFax.Click();
            //Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'fax' with focus on 'ApplicationUnderTest.contactsForm.ContactFax'.", repo.ApplicationUnderTest.contactsForm.ContactFaxInfo, new RecordItemIndex(43));
            //repo.ApplicationUnderTest.contactsForm.ContactFax.PressKeys("fax");
            //Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.contactsForm.PhoneNo0' at Center.", repo.ApplicationUnderTest.contactsForm.PhoneNo0Info, new RecordItemIndex(44));
            repo.ApplicationUnderTest.contactsForm.PhoneNo0.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$phoneNumber' with focus on 'ApplicationUnderTest.contactsForm.PhoneNo0'.", repo.ApplicationUnderTest.contactsForm.PhoneNo0Info, new RecordItemIndex(45));
            repo.ApplicationUnderTest.contactsForm.PhoneNo0.PressKeys(phoneNumber);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.contactsForm.submitButton' at Center.", repo.ApplicationUnderTest.contactsForm.submitButtonInfo, new RecordItemIndex(46));
            repo.ApplicationUnderTest.contactsForm.submitButton.Click();
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
