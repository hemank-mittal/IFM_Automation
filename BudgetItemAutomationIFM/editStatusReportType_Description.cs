///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace BudgetItemAutomationIFM
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The editStatusReportType_Description recording.
    /// </summary>
    [TestModule("7ec39620-46a3-4cca-8a5b-48861aea3bf5", ModuleType.Recording, 1)]
    public partial class editStatusReportType_Description : ITestModule
    {
        /// <summary>
        /// Holds an instance of the BudgetItemAutomationIFMRepository repository.
        /// </summary>
        public static BudgetItemAutomationIFMRepository repo = BudgetItemAutomationIFMRepository.Instance;

        static editStatusReportType_Description instance = new editStatusReportType_Description();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public editStatusReportType_Description()
        {
            descriptionText = "";
            editedDescription = "";
            existingName = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static editStatusReportType_Description Instance
        {
            get { return instance; }
        }

#region Variables

        string _descriptionText;

        /// <summary>
        /// Gets or sets the value of variable descriptionText.
        /// </summary>
        [TestVariable("a914c95a-e5ea-427b-b232-757210dd173e")]
        public string descriptionText
        {
            get { return _descriptionText; }
            set { _descriptionText = value; }
        }

        string _editedDescription;

        /// <summary>
        /// Gets or sets the value of variable editedDescription.
        /// </summary>
        [TestVariable("e7f77f13-90b0-49e5-ac26-f8097e561935")]
        public string editedDescription
        {
            get { return _editedDescription; }
            set { _editedDescription = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable existingName.
        /// </summary>
        [TestVariable("3c892dc8-21f9-4b0d-a1bc-382d5ba6f328")]
        public string existingName
        {
            get { return repo.existingName; }
            set { repo.existingName = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.ButtonTagEdit_Row2' at Center.", repo.ApplicationUnderTest.ButtonTagEdit_Row2Info, new RecordItemIndex(0));
            repo.ApplicationUnderTest.ButtonTagEdit_Row2.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'TagValue' from item 'ApplicationUnderTest.FundingWrapperNgStarInsertedRow.Text2' and assigning its value to variable 'existingName'.", repo.ApplicationUnderTest.FundingWrapperNgStarInsertedRow.Text2Info, new RecordItemIndex(1));
            existingName = repo.ApplicationUnderTest.FundingWrapperNgStarInsertedRow.Text2.Element.GetAttributeValueText("TagValue");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'TagValue' from item 'ApplicationUnderTest.FundingWrapperNgStarInsertedRow.Text3' and assigning its value to variable 'descriptionText'.", repo.ApplicationUnderTest.FundingWrapperNgStarInsertedRow.Text3Info, new RecordItemIndex(2));
            descriptionText = repo.ApplicationUnderTest.FundingWrapperNgStarInsertedRow.Text3.Element.GetAttributeValueText("TagValue");
            Delay.Milliseconds(0);
            
            editedDescription = HelperMethodsCollection.getEdittedName(descriptionText);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.FundingWrapperNgStarInsertedRow.Text3' at Center.", repo.ApplicationUnderTest.FundingWrapperNgStarInsertedRow.Text3Info, new RecordItemIndex(4));
            repo.ApplicationUnderTest.FundingWrapperNgStarInsertedRow.Text3.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute TagValue to '' on item 'ApplicationUnderTest.FundingWrapperNgStarInsertedRow.Text3'.", repo.ApplicationUnderTest.FundingWrapperNgStarInsertedRow.Text3Info, new RecordItemIndex(5));
            repo.ApplicationUnderTest.FundingWrapperNgStarInsertedRow.Text3.Element.SetAttributeValue("TagValue", "");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$editedDescription' with focus on 'ApplicationUnderTest.FundingWrapperNgStarInsertedRow.Text3'.", repo.ApplicationUnderTest.FundingWrapperNgStarInsertedRow.Text3Info, new RecordItemIndex(6));
            repo.ApplicationUnderTest.FundingWrapperNgStarInsertedRow.Text3.PressKeys(editedDescription);
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
