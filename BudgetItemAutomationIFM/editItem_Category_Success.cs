///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace BudgetItemAutomationIFM
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The editItem_Category_Success recording.
    /// </summary>
    [TestModule("9607e0d5-949b-407a-8dc4-45d378d5d516", ModuleType.Recording, 1)]
    public partial class editItem_Category_Success : ITestModule
    {
        /// <summary>
        /// Holds an instance of the BudgetItemAutomationIFMRepository repository.
        /// </summary>
        public static BudgetItemAutomationIFMRepository repo = BudgetItemAutomationIFMRepository.Instance;

        static editItem_Category_Success instance = new editItem_Category_Success();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public editItem_Category_Success()
        {
            itemName = "";
            linkedCategory = "";
            optionIndex = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static editItem_Category_Success Instance
        {
            get { return instance; }
        }

#region Variables

        string _itemName;

        /// <summary>
        /// Gets or sets the value of variable itemName.
        /// </summary>
        [TestVariable("d3f3d808-79b9-4dd0-9b7d-5a4ff32e338d")]
        public string itemName
        {
            get { return _itemName; }
            set { _itemName = value; }
        }

        string _linkedCategory;

        /// <summary>
        /// Gets or sets the value of variable linkedCategory.
        /// </summary>
        [TestVariable("b4905ced-bc16-48a7-aab4-c070a67373e3")]
        public string linkedCategory
        {
            get { return _linkedCategory; }
            set { _linkedCategory = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable optionIndex.
        /// </summary>
        [TestVariable("856084da-8249-45c6-9735-8ef830ba3d10")]
        public string optionIndex
        {
            get { return repo.optionIndex; }
            set { repo.optionIndex = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.ButtonTagEdit_Row2' at Center.", repo.ApplicationUnderTest.ButtonTagEdit_Row2Info, new RecordItemIndex(0));
            repo.ApplicationUnderTest.ButtonTagEdit_Row2.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'InnerText' from item 'ApplicationUnderTest.FundingWrapperNgStarInsertedRow.Text' and assigning its value to variable 'itemName'.", repo.ApplicationUnderTest.FundingWrapperNgStarInsertedRow.TextInfo, new RecordItemIndex(1));
            itemName = repo.ApplicationUnderTest.FundingWrapperNgStarInsertedRow.Text.Element.GetAttributeValueText("InnerText");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.FundingWrapperNgStarInsertedRow.DropdownBtn' at Center.", repo.ApplicationUnderTest.FundingWrapperNgStarInsertedRow.DropdownBtnInfo, new RecordItemIndex(2));
            repo.ApplicationUnderTest.FundingWrapperNgStarInsertedRow.DropdownBtn.Click();
            Delay.Milliseconds(0);
            
            optionIndex = ValueConverter.ToString(HelperMethodsCollection.getDifferentOption(repo.ApplicationUnderTest.FundingWrapperNgStarInsertedRow.budgetCategoryList));
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.FundingWrapperNgStarInsertedRow.dynamicCategory' at Center.", repo.ApplicationUnderTest.FundingWrapperNgStarInsertedRow.dynamicCategoryInfo, new RecordItemIndex(4));
            repo.ApplicationUnderTest.FundingWrapperNgStarInsertedRow.dynamicCategory.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'TagValue' from item 'ApplicationUnderTest.FundingWrapperNgStarInsertedRow.DropdownBtn' and assigning its value to variable 'linkedCategory'.", repo.ApplicationUnderTest.FundingWrapperNgStarInsertedRow.DropdownBtnInfo, new RecordItemIndex(5));
            linkedCategory = repo.ApplicationUnderTest.FundingWrapperNgStarInsertedRow.DropdownBtn.Element.GetAttributeValueText("TagValue");
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
