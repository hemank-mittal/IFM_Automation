///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace BudgetItemAutomationIFM
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The createProjects_AllFields_PrimaryInformation recording.
    /// </summary>
    [TestModule("71231b94-8df8-481d-9e1f-f4ac502372f6", ModuleType.Recording, 1)]
    public partial class createProjects_AllFields : ITestModule
    {
        /// <summary>
        /// Holds an instance of the BudgetItemAutomationIFMRepository repository.
        /// </summary>
        public static BudgetItemAutomationIFMRepository repo = BudgetItemAutomationIFMRepository.Instance;

        static createProjects_AllFields instance = new createProjects_AllFields();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public createProjects_AllFields()
        {
            fieldName = "";
            projectName = "";
            projectId = "";
            optionIndex = "";
            program = "";
            projectType = "";
            tags = "";
            campus = "";
            projectDescription = "";
            address1 = "";
            address2 = "";
            city = "";
            state = "";
            county = "";
            Country = "Tags";
            zipcode = "";
            territoryDistrict = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static createProjects_AllFields Instance
        {
            get { return instance; }
        }

#region Variables

        string _projectName;

        /// <summary>
        /// Gets or sets the value of variable projectName.
        /// </summary>
        [TestVariable("39c52873-4b5d-4053-acf5-55874f0af919")]
        public string projectName
        {
            get { return _projectName; }
            set { _projectName = value; }
        }

        string _projectId;

        /// <summary>
        /// Gets or sets the value of variable projectId.
        /// </summary>
        [TestVariable("19df51bd-3ab6-4ba1-9118-5e6e1a2850ec")]
        public string projectId
        {
            get { return _projectId; }
            set { _projectId = value; }
        }

        string _program;

        /// <summary>
        /// Gets or sets the value of variable program.
        /// </summary>
        [TestVariable("c37d99ae-d3de-4eea-a952-c6c5843da146")]
        public string program
        {
            get { return _program; }
            set { _program = value; }
        }

        string _projectType;

        /// <summary>
        /// Gets or sets the value of variable projectType.
        /// </summary>
        [TestVariable("79c187ae-6589-45e8-941c-8b9975c336ae")]
        public string projectType
        {
            get { return _projectType; }
            set { _projectType = value; }
        }

        string _tags;

        /// <summary>
        /// Gets or sets the value of variable tags.
        /// </summary>
        [TestVariable("1cbc591a-2589-4b7d-ba21-2c590b3c1a4a")]
        public string tags
        {
            get { return _tags; }
            set { _tags = value; }
        }

        string _campus;

        /// <summary>
        /// Gets or sets the value of variable campus.
        /// </summary>
        [TestVariable("85f9e4f5-601f-47f8-90de-6e5490044f75")]
        public string campus
        {
            get { return _campus; }
            set { _campus = value; }
        }

        string _projectDescription;

        /// <summary>
        /// Gets or sets the value of variable projectDescription.
        /// </summary>
        [TestVariable("eb78b400-27ad-4d4e-b693-c109e1078c89")]
        public string projectDescription
        {
            get { return _projectDescription; }
            set { _projectDescription = value; }
        }

        string _address1;

        /// <summary>
        /// Gets or sets the value of variable address1.
        /// </summary>
        [TestVariable("60cbcd38-7529-417b-a788-e298183eaf21")]
        public string address1
        {
            get { return _address1; }
            set { _address1 = value; }
        }

        string _address2;

        /// <summary>
        /// Gets or sets the value of variable address2.
        /// </summary>
        [TestVariable("68082b07-61f8-4b04-bc28-efc32ad26d1c")]
        public string address2
        {
            get { return _address2; }
            set { _address2 = value; }
        }

        string _city;

        /// <summary>
        /// Gets or sets the value of variable city.
        /// </summary>
        [TestVariable("3428c893-4758-4bfd-989d-a8384d7671d7")]
        public string city
        {
            get { return _city; }
            set { _city = value; }
        }

        string _state;

        /// <summary>
        /// Gets or sets the value of variable state.
        /// </summary>
        [TestVariable("fbd190e8-23f4-41a7-b98c-06b172dc76d4")]
        public string state
        {
            get { return _state; }
            set { _state = value; }
        }

        string _county;

        /// <summary>
        /// Gets or sets the value of variable county.
        /// </summary>
        [TestVariable("f44e0325-3f29-47c9-8946-4fccd3f17b79")]
        public string county
        {
            get { return _county; }
            set { _county = value; }
        }

        string _Country;

        /// <summary>
        /// Gets or sets the value of variable Country.
        /// </summary>
        [TestVariable("575b05a2-20ab-42b1-9d17-7db18164ca5a")]
        public string Country
        {
            get { return _Country; }
            set { _Country = value; }
        }

        string _zipcode;

        /// <summary>
        /// Gets or sets the value of variable zipcode.
        /// </summary>
        [TestVariable("2bf99e57-9b06-4b16-8777-87b5ec184fbb")]
        public string zipcode
        {
            get { return _zipcode; }
            set { _zipcode = value; }
        }

        string _territoryDistrict;

        /// <summary>
        /// Gets or sets the value of variable territoryDistrict.
        /// </summary>
        [TestVariable("8a1153bd-3441-4fc0-88dc-aa798783bd7f")]
        public string territoryDistrict
        {
            get { return _territoryDistrict; }
            set { _territoryDistrict = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable domain.
        /// </summary>
        [TestVariable("0e49bfa6-0c8f-4999-ad77-5babbb4e74af")]
        public string domain
        {
            get { return repo.domain; }
            set { repo.domain = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable fieldName.
        /// </summary>
        [TestVariable("c0f21d87-e705-4cd0-95cc-dc9a7c989e7a")]
        public string fieldName
        {
            get { return repo.fieldName; }
            set { repo.fieldName = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable optionIndex.
        /// </summary>
        [TestVariable("9759e01f-858b-4f25-8ea6-4e11f71e9a17")]
        public string optionIndex
        {
            get { return repo.optionIndex; }
            set { repo.optionIndex = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            fieldName = HelperMethodsCollection.assignVariable("Project Name");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.projects_Form.primaryInformationDiv.dynamicInputField' at Center.", repo.ApplicationUnderTest.projects_Form.primaryInformationDiv.dynamicInputFieldInfo, new RecordItemIndex(1));
            repo.ApplicationUnderTest.projects_Form.primaryInformationDiv.dynamicInputField.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$projectName' with focus on 'ApplicationUnderTest.projects_Form.primaryInformationDiv.dynamicInputField'.", repo.ApplicationUnderTest.projects_Form.primaryInformationDiv.dynamicInputFieldInfo, new RecordItemIndex(2));
            repo.ApplicationUnderTest.projects_Form.primaryInformationDiv.dynamicInputField.EnsureVisible();
            Keyboard.Press(projectName);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Escape}' with focus on 'ApplicationUnderTest.projects_Form.primaryInformationDiv.dynamicInputField'.", repo.ApplicationUnderTest.projects_Form.primaryInformationDiv.dynamicInputFieldInfo, new RecordItemIndex(3));
            repo.ApplicationUnderTest.projects_Form.primaryInformationDiv.dynamicInputField.EnsureVisible();
            Keyboard.Press("{Escape}");
            Delay.Milliseconds(0);
            
            fieldName = HelperMethodsCollection.assignVariable("Project ID");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.projects_Form.primaryInformationDiv.dynamicInputField' at Center.", repo.ApplicationUnderTest.projects_Form.primaryInformationDiv.dynamicInputFieldInfo, new RecordItemIndex(5));
            repo.ApplicationUnderTest.projects_Form.primaryInformationDiv.dynamicInputField.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$projectId' with focus on 'ApplicationUnderTest.projects_Form.primaryInformationDiv.dynamicInputField'.", repo.ApplicationUnderTest.projects_Form.primaryInformationDiv.dynamicInputFieldInfo, new RecordItemIndex(6));
            repo.ApplicationUnderTest.projects_Form.primaryInformationDiv.dynamicInputField.EnsureVisible();
            Keyboard.Press(projectId);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Escape}' with focus on 'ApplicationUnderTest.projects_Form.primaryInformationDiv.dynamicInputField'.", repo.ApplicationUnderTest.projects_Form.primaryInformationDiv.dynamicInputFieldInfo, new RecordItemIndex(7));
            repo.ApplicationUnderTest.projects_Form.primaryInformationDiv.dynamicInputField.EnsureVisible();
            Keyboard.Press("{Escape}");
            Delay.Milliseconds(0);
            
            fieldName = HelperMethodsCollection.assignVariable("Program");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.projects_Form.primaryInformationDiv.dynamicdropdownField' at Center.", repo.ApplicationUnderTest.projects_Form.primaryInformationDiv.dynamicdropdownFieldInfo, new RecordItemIndex(9));
            repo.ApplicationUnderTest.projects_Form.primaryInformationDiv.dynamicdropdownField.Click();
            Delay.Milliseconds(0);
            
            optionIndex = ValueConverter.ToString(HelperMethodsCollection.getDifferentOption(repo.ApplicationUnderTest.listbox_DropdownList));
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'InnerText' from item 'ApplicationUnderTest.listbox_dynamicOption' and assigning its value to variable 'program'.", repo.ApplicationUnderTest.listbox_dynamicOptionInfo, new RecordItemIndex(11));
            program = repo.ApplicationUnderTest.listbox_dynamicOption.Element.GetAttributeValueText("InnerText");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.listbox_dynamicOption' at Center.", repo.ApplicationUnderTest.listbox_dynamicOptionInfo, new RecordItemIndex(12));
            repo.ApplicationUnderTest.listbox_dynamicOption.Click();
            Delay.Milliseconds(0);
            
            fieldName = HelperMethodsCollection.assignVariable("Project Type");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.projects_Form.primaryInformationDiv.dynamicdropdownField' at Center.", repo.ApplicationUnderTest.projects_Form.primaryInformationDiv.dynamicdropdownFieldInfo, new RecordItemIndex(14));
            repo.ApplicationUnderTest.projects_Form.primaryInformationDiv.dynamicdropdownField.Click();
            Delay.Milliseconds(0);
            
            optionIndex = ValueConverter.ToString(HelperMethodsCollection.getDifferentOption(repo.ApplicationUnderTest.listbox_DropdownList));
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'InnerText' from item 'ApplicationUnderTest.listbox_dynamicOption' and assigning its value to variable 'projectType'.", repo.ApplicationUnderTest.listbox_dynamicOptionInfo, new RecordItemIndex(16));
            projectType = repo.ApplicationUnderTest.listbox_dynamicOption.Element.GetAttributeValueText("InnerText");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.listbox_dynamicOption' at Center.", repo.ApplicationUnderTest.listbox_dynamicOptionInfo, new RecordItemIndex(17));
            repo.ApplicationUnderTest.listbox_dynamicOption.Click();
            Delay.Milliseconds(0);
            
            fieldName = HelperMethodsCollection.assignVariable("Select Campus");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.projects_Form.primaryInformationDiv.dynamicdropdownField_div' at Center.", repo.ApplicationUnderTest.projects_Form.primaryInformationDiv.dynamicdropdownField_divInfo, new RecordItemIndex(19));
            repo.ApplicationUnderTest.projects_Form.primaryInformationDiv.dynamicdropdownField_div.Click();
            Delay.Milliseconds(0);
            
            optionIndex = ValueConverter.ToString(HelperMethodsCollection.getDifferentOption(repo.ApplicationUnderTest.projects_Form.visibleDropdown_ul));
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'InnerText' from item 'ApplicationUnderTest.projects_Form.visibleDropdown_ul_dynamic' and assigning its value to variable 'campus'.", repo.ApplicationUnderTest.projects_Form.visibleDropdown_ul_dynamicInfo, new RecordItemIndex(21));
            campus = repo.ApplicationUnderTest.projects_Form.visibleDropdown_ul_dynamic.Element.GetAttributeValueText("InnerText");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.projects_Form.visibleDropdown_ul_dynamic' at Center.", repo.ApplicationUnderTest.projects_Form.visibleDropdown_ul_dynamicInfo, new RecordItemIndex(22));
            repo.ApplicationUnderTest.projects_Form.visibleDropdown_ul_dynamic.Click();
            Delay.Milliseconds(0);
            
            fieldName = HelperMethodsCollection.assignVariable("Address1");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'Value' from item 'ApplicationUnderTest.projects_Form.primaryInformationDiv.dynamicInputField' and assigning its value to variable 'address1'.", repo.ApplicationUnderTest.projects_Form.primaryInformationDiv.dynamicInputFieldInfo, new RecordItemIndex(24));
            address1 = repo.ApplicationUnderTest.projects_Form.primaryInformationDiv.dynamicInputField.Element.GetAttributeValueText("Value");
            Delay.Milliseconds(0);
            
            fieldName = HelperMethodsCollection.assignVariable("Address2");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'Value' from item 'ApplicationUnderTest.projects_Form.primaryInformationDiv.dynamicInputField' and assigning its value to variable 'address2'.", repo.ApplicationUnderTest.projects_Form.primaryInformationDiv.dynamicInputFieldInfo, new RecordItemIndex(26));
            address2 = repo.ApplicationUnderTest.projects_Form.primaryInformationDiv.dynamicInputField.Element.GetAttributeValueText("Value");
            Delay.Milliseconds(0);
            
            fieldName = HelperMethodsCollection.assignVariable("City");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'Value' from item 'ApplicationUnderTest.projects_Form.primaryInformationDiv.dynamicInputField' and assigning its value to variable 'city'.", repo.ApplicationUnderTest.projects_Form.primaryInformationDiv.dynamicInputFieldInfo, new RecordItemIndex(28));
            city = repo.ApplicationUnderTest.projects_Form.primaryInformationDiv.dynamicInputField.Element.GetAttributeValueText("Value");
            Delay.Milliseconds(0);
            
            fieldName = HelperMethodsCollection.assignVariable("State");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'Value' from item 'ApplicationUnderTest.projects_Form.primaryInformationDiv.dynamicInputField' and assigning its value to variable 'state'.", repo.ApplicationUnderTest.projects_Form.primaryInformationDiv.dynamicInputFieldInfo, new RecordItemIndex(30));
            state = repo.ApplicationUnderTest.projects_Form.primaryInformationDiv.dynamicInputField.Element.GetAttributeValueText("Value");
            Delay.Milliseconds(0);
            
            fieldName = HelperMethodsCollection.assignVariable("County");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'Value' from item 'ApplicationUnderTest.projects_Form.primaryInformationDiv.dynamicInputField' and assigning its value to variable 'county'.", repo.ApplicationUnderTest.projects_Form.primaryInformationDiv.dynamicInputFieldInfo, new RecordItemIndex(32));
            county = repo.ApplicationUnderTest.projects_Form.primaryInformationDiv.dynamicInputField.Element.GetAttributeValueText("Value");
            Delay.Milliseconds(0);
            
            fieldName = HelperMethodsCollection.assignVariable("Country");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'Value' from item 'ApplicationUnderTest.projects_Form.primaryInformationDiv.dynamicInputField' and assigning its value to variable 'Country'.", repo.ApplicationUnderTest.projects_Form.primaryInformationDiv.dynamicInputFieldInfo, new RecordItemIndex(34));
            Country = repo.ApplicationUnderTest.projects_Form.primaryInformationDiv.dynamicInputField.Element.GetAttributeValueText("Value");
            Delay.Milliseconds(0);
            
            fieldName = HelperMethodsCollection.assignVariable("ZipCode");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'Value' from item 'ApplicationUnderTest.projects_Form.primaryInformationDiv.dynamicInputField' and assigning its value to variable 'zipcode'.", repo.ApplicationUnderTest.projects_Form.primaryInformationDiv.dynamicInputFieldInfo, new RecordItemIndex(36));
            zipcode = repo.ApplicationUnderTest.projects_Form.primaryInformationDiv.dynamicInputField.Element.GetAttributeValueText("Value");
            Delay.Milliseconds(0);
            
            fieldName = HelperMethodsCollection.assignVariable("Territory/District");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'Value' from item 'ApplicationUnderTest.projects_Form.primaryInformationDiv.dynamicInputField' and assigning its value to variable 'territoryDistrict'.", repo.ApplicationUnderTest.projects_Form.primaryInformationDiv.dynamicInputFieldInfo, new RecordItemIndex(38));
            territoryDistrict = repo.ApplicationUnderTest.projects_Form.primaryInformationDiv.dynamicInputField.Element.GetAttributeValueText("Value");
            Delay.Milliseconds(0);
            
            fieldName = HelperMethodsCollection.assignVariable("Tags");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.projects_Form.primaryInformationDiv.dynamicInputField' at Center.", repo.ApplicationUnderTest.projects_Form.primaryInformationDiv.dynamicInputFieldInfo, new RecordItemIndex(40));
            repo.ApplicationUnderTest.projects_Form.primaryInformationDiv.dynamicInputField.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$tags' with focus on 'ApplicationUnderTest.projects_Form.primaryInformationDiv.dynamicInputField'.", repo.ApplicationUnderTest.projects_Form.primaryInformationDiv.dynamicInputFieldInfo, new RecordItemIndex(41));
            repo.ApplicationUnderTest.projects_Form.primaryInformationDiv.dynamicInputField.EnsureVisible();
            Keyboard.Press(tags);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Escape}' with focus on 'ApplicationUnderTest.projects_Form.primaryInformationDiv.dynamicInputField'.", repo.ApplicationUnderTest.projects_Form.primaryInformationDiv.dynamicInputFieldInfo, new RecordItemIndex(42));
            repo.ApplicationUnderTest.projects_Form.primaryInformationDiv.dynamicInputField.EnsureVisible();
            Keyboard.Press("{Escape}");
            Delay.Milliseconds(0);
            
            fieldName = HelperMethodsCollection.assignVariable("Project Description");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.projects_Form.primaryInformationDiv.dynamicInputField_textarea' at Center.", repo.ApplicationUnderTest.projects_Form.primaryInformationDiv.dynamicInputField_textareaInfo, new RecordItemIndex(44));
            repo.ApplicationUnderTest.projects_Form.primaryInformationDiv.dynamicInputField_textarea.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$projectDescription' with focus on 'ApplicationUnderTest.projects_Form.primaryInformationDiv.dynamicInputField_textarea'.", repo.ApplicationUnderTest.projects_Form.primaryInformationDiv.dynamicInputField_textareaInfo, new RecordItemIndex(45));
            repo.ApplicationUnderTest.projects_Form.primaryInformationDiv.dynamicInputField_textarea.EnsureVisible();
            Keyboard.Press(projectDescription);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Escape}' with focus on 'ApplicationUnderTest.projects_Form.primaryInformationDiv.dynamicInputField_textarea'.", repo.ApplicationUnderTest.projects_Form.primaryInformationDiv.dynamicInputField_textareaInfo, new RecordItemIndex(46));
            repo.ApplicationUnderTest.projects_Form.primaryInformationDiv.dynamicInputField_textarea.EnsureVisible();
            Keyboard.Press("{Escape}");
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
