///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace BudgetItemAutomationIFM
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The createPunchList_Project recording.
    /// </summary>
    [TestModule("10bdbe18-adb8-4e61-aaff-a72f3a59756b", ModuleType.Recording, 1)]
    public partial class createPunchList_Project : ITestModule
    {
        /// <summary>
        /// Holds an instance of the BudgetItemAutomationIFMRepository repository.
        /// </summary>
        public static BudgetItemAutomationIFMRepository repo = BudgetItemAutomationIFMRepository.Instance;

        static createPunchList_Project instance = new createPunchList_Project();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public createPunchList_Project()
        {
            itemName = "";
            location = "";
            description = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static createPunchList_Project Instance
        {
            get { return instance; }
        }

#region Variables

        string _itemName;

        /// <summary>
        /// Gets or sets the value of variable itemName.
        /// </summary>
        [TestVariable("d237e3be-d2b8-4e2b-829b-b0420cc4f61e")]
        public string itemName
        {
            get { return _itemName; }
            set { _itemName = value; }
        }

        string _location;

        /// <summary>
        /// Gets or sets the value of variable location.
        /// </summary>
        [TestVariable("e7c2a111-2ccb-448e-a1c2-8e53816bee2d")]
        public string location
        {
            get { return _location; }
            set { _location = value; }
        }

        string _description;

        /// <summary>
        /// Gets or sets the value of variable description.
        /// </summary>
        [TestVariable("903b000a-8101-449a-9b28-5daad7b22085")]
        public string description
        {
            get { return _description; }
            set { _description = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable domain.
        /// </summary>
        [TestVariable("0e49bfa6-0c8f-4999-ad77-5babbb4e74af")]
        public string domain
        {
            get { return repo.domain; }
            set { repo.domain = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.project_PunchList_itemName' at Center.", repo.ApplicationUnderTest.project_PunchList_itemNameInfo, new RecordItemIndex(0));
            repo.ApplicationUnderTest.project_PunchList_itemName.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$itemName' with focus on 'ApplicationUnderTest.project_PunchList_itemName'.", repo.ApplicationUnderTest.project_PunchList_itemNameInfo, new RecordItemIndex(1));
            repo.ApplicationUnderTest.project_PunchList_itemName.PressKeys(itemName);
            Delay.Milliseconds(20);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.project_PunchList_Location' at Center.", repo.ApplicationUnderTest.project_PunchList_LocationInfo, new RecordItemIndex(2));
            repo.ApplicationUnderTest.project_PunchList_Location.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$location' with focus on 'ApplicationUnderTest.project_PunchList_Location'.", repo.ApplicationUnderTest.project_PunchList_LocationInfo, new RecordItemIndex(3));
            repo.ApplicationUnderTest.project_PunchList_Location.PressKeys(location);
            Delay.Milliseconds(20);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.project_PunchList_Description' at Center.", repo.ApplicationUnderTest.project_PunchList_DescriptionInfo, new RecordItemIndex(4));
            repo.ApplicationUnderTest.project_PunchList_Description.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$description' with focus on 'ApplicationUnderTest.project_PunchList_Description'.", repo.ApplicationUnderTest.project_PunchList_DescriptionInfo, new RecordItemIndex(5));
            repo.ApplicationUnderTest.project_PunchList_Description.PressKeys(description);
            Delay.Milliseconds(20);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.buttonTagSave' at Center.", repo.ApplicationUnderTest.buttonTagSaveInfo, new RecordItemIndex(6));
            repo.ApplicationUnderTest.buttonTagSave.Click();
            Delay.Milliseconds(0);
            
            HelperMethodsCollection.waitForLoading();
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
