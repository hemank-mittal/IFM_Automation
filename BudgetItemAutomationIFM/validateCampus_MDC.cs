///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace BudgetItemAutomationIFM
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The validateCampus_MDC recording.
    /// </summary>
    [TestModule("a22969a3-3703-4226-8494-eb66de1a9dc9", ModuleType.Recording, 1)]
    public partial class validateCampus_MDC : ITestModule
    {
        /// <summary>
        /// Holds an instance of the BudgetItemAutomationIFMRepository repository.
        /// </summary>
        public static BudgetItemAutomationIFMRepository repo = BudgetItemAutomationIFMRepository.Instance;

        static validateCampus_MDC instance = new validateCampus_MDC();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public validateCampus_MDC()
        {
            selectedCampus = "";
            visibleCampus = "";
            visibleZone = "";
            selectedZone = "";
            visibleDescription = "";
            description = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static validateCampus_MDC Instance
        {
            get { return instance; }
        }

#region Variables

        string _selectedCampus;

        /// <summary>
        /// Gets or sets the value of variable selectedCampus.
        /// </summary>
        [TestVariable("9d9db1ed-808e-44cf-a880-bf655144ca2d")]
        public string selectedCampus
        {
            get { return _selectedCampus; }
            set { _selectedCampus = value; }
        }

        string _visibleCampus;

        /// <summary>
        /// Gets or sets the value of variable visibleCampus.
        /// </summary>
        [TestVariable("4c06fa08-cd4e-42fa-8124-d06fab9f88cf")]
        public string visibleCampus
        {
            get { return _visibleCampus; }
            set { _visibleCampus = value; }
        }

        string _visibleZone;

        /// <summary>
        /// Gets or sets the value of variable visibleZone.
        /// </summary>
        [TestVariable("cf40685e-4bb3-4227-b1f8-48f665e59cff")]
        public string visibleZone
        {
            get { return _visibleZone; }
            set { _visibleZone = value; }
        }

        string _selectedZone;

        /// <summary>
        /// Gets or sets the value of variable selectedZone.
        /// </summary>
        [TestVariable("dc57825d-0e43-4375-b617-7f54a4843c51")]
        public string selectedZone
        {
            get { return _selectedZone; }
            set { _selectedZone = value; }
        }

        string _visibleDescription;

        /// <summary>
        /// Gets or sets the value of variable visibleDescription.
        /// </summary>
        [TestVariable("40cd7e53-2be7-452b-8897-ceea6fe3acdf")]
        public string visibleDescription
        {
            get { return _visibleDescription; }
            set { _visibleDescription = value; }
        }

        string _description;

        /// <summary>
        /// Gets or sets the value of variable description.
        /// </summary>
        [TestVariable("1dc322ae-50cd-4880-b56c-090bccce3470")]
        public string description
        {
            get { return _description; }
            set { _description = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable domain.
        /// </summary>
        [TestVariable("0e49bfa6-0c8f-4999-ad77-5babbb4e74af")]
        public string domain
        {
            get { return repo.domain; }
            set { repo.domain = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.searchBtn_Id_searchbox' at Center.", repo.ApplicationUnderTest.searchBtn_Id_searchboxInfo, new RecordItemIndex(0));
            repo.ApplicationUnderTest.searchBtn_Id_searchbox.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$selectedCampus' with focus on 'ApplicationUnderTest.searchBtn_Id_searchbox'.", repo.ApplicationUnderTest.searchBtn_Id_searchboxInfo, new RecordItemIndex(1));
            repo.ApplicationUnderTest.searchBtn_Id_searchbox.PressKeys(selectedCampus);
            Delay.Milliseconds(0);
            
            HelperMethodsCollection.waitForLoading();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'InnerText' from item 'ApplicationUnderTest.firstElement_anyTag' and assigning its value to variable 'visibleCampus'.", repo.ApplicationUnderTest.firstElement_anyTagInfo, new RecordItemIndex(3));
            visibleCampus = repo.ApplicationUnderTest.firstElement_anyTag.Element.GetAttributeValueText("InnerText");
            Delay.Milliseconds(0);
            
            HelperMethodsCollection.compareStrings(visibleCampus, selectedCampus);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.firstRow_ViewButton' at Center.", repo.ApplicationUnderTest.firstRow_ViewButtonInfo, new RecordItemIndex(5));
            repo.ApplicationUnderTest.firstRow_ViewButton.Click();
            Delay.Milliseconds(0);
            
            HelperMethodsCollection.waitForLoading();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'InnerText' from item 'ApplicationUnderTest.viewCampus_Campus' and assigning its value to variable 'visibleCampus'.", repo.ApplicationUnderTest.viewCampus_CampusInfo, new RecordItemIndex(7));
            visibleCampus = repo.ApplicationUnderTest.viewCampus_Campus.Element.GetAttributeValueText("InnerText");
            Delay.Milliseconds(0);
            
            HelperMethodsCollection.compareStrings(visibleCampus, selectedCampus);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'InnerText' from item 'ApplicationUnderTest.viewCampus_Zone' and assigning its value to variable 'visibleZone'.", repo.ApplicationUnderTest.viewCampus_ZoneInfo, new RecordItemIndex(9));
            visibleZone = repo.ApplicationUnderTest.viewCampus_Zone.Element.GetAttributeValueText("InnerText");
            Delay.Milliseconds(0);
            
            HelperMethodsCollection.compareStrings(visibleZone, selectedZone);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'InnerText' from item 'ApplicationUnderTest.viewCampus_Description' and assigning its value to variable 'visibleDescription'.", repo.ApplicationUnderTest.viewCampus_DescriptionInfo, new RecordItemIndex(11));
            visibleDescription = repo.ApplicationUnderTest.viewCampus_Description.Element.GetAttributeValueText("InnerText");
            Delay.Milliseconds(0);
            
            HelperMethodsCollection.compareStrings(visibleDescription, description);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.buttonTagBack' at Center.", repo.ApplicationUnderTest.buttonTagBackInfo, new RecordItemIndex(13));
            repo.ApplicationUnderTest.buttonTagBack.Click();
            Delay.Milliseconds(0);
            
            HelperMethodsCollection.waitForLoading();
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
