///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace BudgetItemAutomationIFM
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The editBuilding_MDC recording.
    /// </summary>
    [TestModule("63c197dd-c360-4e61-9b88-ffaa9068308e", ModuleType.Recording, 1)]
    public partial class EditBuilding_MDC : ITestModule
    {
        /// <summary>
        /// Holds an instance of the BudgetItemAutomationIFMRepository repository.
        /// </summary>
        public static BudgetItemAutomationIFMRepository repo = BudgetItemAutomationIFMRepository.Instance;

        static EditBuilding_MDC instance = new EditBuilding_MDC();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public EditBuilding_MDC()
        {
            editedArchitect = "";
            editedBuildingName = "";
            currentString = "";
            editedContractor = "";
            editedRenovationHistory = "";
            editedDescription = "";
            editedBuildingNumber = "";
            editedContructionCost = "";
            optionIndex = "";
            editedCampus = "";
            editedWing = "";
            editedZone = "";
            oldDateContructed = "";
            currentNumber = "0";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static EditBuilding_MDC Instance
        {
            get { return instance; }
        }

#region Variables

        string _editedArchitect;

        /// <summary>
        /// Gets or sets the value of variable editedArchitect.
        /// </summary>
        [TestVariable("a21facc6-7330-4271-ae77-1c39b3f37fa3")]
        public string editedArchitect
        {
            get { return _editedArchitect; }
            set { _editedArchitect = value; }
        }

        string _editedBuildingName;

        /// <summary>
        /// Gets or sets the value of variable editedBuildingName.
        /// </summary>
        [TestVariable("dba61151-2efd-4433-8fa5-a6b0c63cd641")]
        public string editedBuildingName
        {
            get { return _editedBuildingName; }
            set { _editedBuildingName = value; }
        }

        string _currentString;

        /// <summary>
        /// Gets or sets the value of variable currentString.
        /// </summary>
        [TestVariable("274bf2fe-d13a-4d4f-ae65-957ff50a06d8")]
        public string currentString
        {
            get { return _currentString; }
            set { _currentString = value; }
        }

        string _editedContractor;

        /// <summary>
        /// Gets or sets the value of variable editedContractor.
        /// </summary>
        [TestVariable("0f2242de-5cbc-46e8-a022-f4ad16b08935")]
        public string editedContractor
        {
            get { return _editedContractor; }
            set { _editedContractor = value; }
        }

        string _editedRenovationHistory;

        /// <summary>
        /// Gets or sets the value of variable editedRenovationHistory.
        /// </summary>
        [TestVariable("53fe31fd-3b63-4ab9-8da7-e862b57ccb34")]
        public string editedRenovationHistory
        {
            get { return _editedRenovationHistory; }
            set { _editedRenovationHistory = value; }
        }

        string _editedDescription;

        /// <summary>
        /// Gets or sets the value of variable editedDescription.
        /// </summary>
        [TestVariable("c7571e80-7ad0-484f-87af-29b0373faa2a")]
        public string editedDescription
        {
            get { return _editedDescription; }
            set { _editedDescription = value; }
        }

        string _editedBuildingNumber;

        /// <summary>
        /// Gets or sets the value of variable editedBuildingNumber.
        /// </summary>
        [TestVariable("49e1b5c0-c6de-4620-a571-d508b63edc21")]
        public string editedBuildingNumber
        {
            get { return _editedBuildingNumber; }
            set { _editedBuildingNumber = value; }
        }

        string _editedContructionCost;

        /// <summary>
        /// Gets or sets the value of variable editedContructionCost.
        /// </summary>
        [TestVariable("b9b241bf-6a8a-421c-a9e0-9844097bfe42")]
        public string editedContructionCost
        {
            get { return _editedContructionCost; }
            set { _editedContructionCost = value; }
        }

        string _editedCampus;

        /// <summary>
        /// Gets or sets the value of variable editedCampus.
        /// </summary>
        [TestVariable("da7a6e6c-0129-4229-9e2f-871c16041c6f")]
        public string editedCampus
        {
            get { return _editedCampus; }
            set { _editedCampus = value; }
        }

        string _editedWing;

        /// <summary>
        /// Gets or sets the value of variable editedWing.
        /// </summary>
        [TestVariable("92001ad9-0530-460b-8a45-f6996447e196")]
        public string editedWing
        {
            get { return _editedWing; }
            set { _editedWing = value; }
        }

        string _editedZone;

        /// <summary>
        /// Gets or sets the value of variable editedZone.
        /// </summary>
        [TestVariable("09fa0ada-29ef-415b-895d-da5eca465906")]
        public string editedZone
        {
            get { return _editedZone; }
            set { _editedZone = value; }
        }

        string _oldDateContructed;

        /// <summary>
        /// Gets or sets the value of variable oldDateContructed.
        /// </summary>
        [TestVariable("e3d2487d-628d-493c-b77d-4dbd50cd0b80")]
        public string oldDateContructed
        {
            get { return _oldDateContructed; }
            set { _oldDateContructed = value; }
        }

        string _currentNumber;

        /// <summary>
        /// Gets or sets the value of variable currentNumber.
        /// </summary>
        [TestVariable("dcf2c14f-b696-471f-bbba-7322a342fabb")]
        public string currentNumber
        {
            get { return _currentNumber; }
            set { _currentNumber = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable domain.
        /// </summary>
        [TestVariable("0e49bfa6-0c8f-4999-ad77-5babbb4e74af")]
        public string domain
        {
            get { return repo.domain; }
            set { repo.domain = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable optionIndex.
        /// </summary>
        [TestVariable("977e0d80-698f-4c19-9e27-bd4a66867fc2")]
        public string optionIndex
        {
            get { return repo.optionIndex; }
            set { repo.optionIndex = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.ButtonTagEdit_Row1' at Center.", repo.ApplicationUnderTest.ButtonTagEdit_Row1Info, new RecordItemIndex(0));
            repo.ApplicationUnderTest.ButtonTagEdit_Row1.Click();
            Delay.Milliseconds(0);
            
            HelperMethodsCollection.waitForLoading();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'Value' from item 'ApplicationUnderTest.buildingCreateEdit.building_BuildingName' and assigning its value to variable 'currentString'.", repo.ApplicationUnderTest.buildingCreateEdit.building_BuildingNameInfo, new RecordItemIndex(2));
            currentString = repo.ApplicationUnderTest.buildingCreateEdit.building_BuildingName.Element.GetAttributeValueText("Value");
            Delay.Milliseconds(0);
            
            editedBuildingName = HelperMethodsCollection.getEdittedName(currentString);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.buildingCreateEdit.building_BuildingName' at Center.", repo.ApplicationUnderTest.buildingCreateEdit.building_BuildingNameInfo, new RecordItemIndex(4));
            repo.ApplicationUnderTest.buildingCreateEdit.building_BuildingName.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute TagValue to '' on item 'ApplicationUnderTest.buildingCreateEdit.building_BuildingName'.", repo.ApplicationUnderTest.buildingCreateEdit.building_BuildingNameInfo, new RecordItemIndex(5));
            repo.ApplicationUnderTest.buildingCreateEdit.building_BuildingName.Element.SetAttributeValue("TagValue", "");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$editedBuildingName' with focus on 'ApplicationUnderTest.buildingCreateEdit.building_BuildingName'.", repo.ApplicationUnderTest.buildingCreateEdit.building_BuildingNameInfo, new RecordItemIndex(6));
            repo.ApplicationUnderTest.buildingCreateEdit.building_BuildingName.PressKeys(editedBuildingName);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'Value' from item 'ApplicationUnderTest.buildingCreateEdit.building_BuildingNumber' and assigning its value to variable 'currentString'.", repo.ApplicationUnderTest.buildingCreateEdit.building_BuildingNumberInfo, new RecordItemIndex(7));
            currentString = repo.ApplicationUnderTest.buildingCreateEdit.building_BuildingNumber.Element.GetAttributeValueText("Value");
            Delay.Milliseconds(0);
            
            editedBuildingNumber = HelperMethodsCollection.getEdittedName(currentString);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.buildingCreateEdit.building_BuildingNumber' at Center.", repo.ApplicationUnderTest.buildingCreateEdit.building_BuildingNumberInfo, new RecordItemIndex(9));
            repo.ApplicationUnderTest.buildingCreateEdit.building_BuildingNumber.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute TagValue to '' on item 'ApplicationUnderTest.buildingCreateEdit.building_BuildingNumber'.", repo.ApplicationUnderTest.buildingCreateEdit.building_BuildingNumberInfo, new RecordItemIndex(10));
            repo.ApplicationUnderTest.buildingCreateEdit.building_BuildingNumber.Element.SetAttributeValue("TagValue", "");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$editedBuildingNumber' with focus on 'ApplicationUnderTest.buildingCreateEdit.building_BuildingNumber'.", repo.ApplicationUnderTest.buildingCreateEdit.building_BuildingNumberInfo, new RecordItemIndex(11));
            repo.ApplicationUnderTest.buildingCreateEdit.building_BuildingNumber.PressKeys(editedBuildingNumber);
            Delay.Milliseconds(0);
            
            // The value is fetched again since the text field has a word limit, the code generated name might be different from the entered name.
            Report.Log(ReportLevel.Info, "Get Value", "The value is fetched again since the text field has a word limit, the code generated name might be different from the entered name.\r\nGetting attribute 'Value' from item 'ApplicationUnderTest.buildingCreateEdit.building_BuildingNumber' and assigning its value to variable 'editedBuildingNumber'.", repo.ApplicationUnderTest.buildingCreateEdit.building_BuildingNumberInfo, new RecordItemIndex(12));
            editedBuildingNumber = repo.ApplicationUnderTest.buildingCreateEdit.building_BuildingNumber.Element.GetAttributeValueText("Value");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'Value' from item 'ApplicationUnderTest.buildingCreateEdit.building_DateConstructedInput' and assigning its value to variable 'oldDateContructed'.", repo.ApplicationUnderTest.buildingCreateEdit.building_DateConstructedInputInfo, new RecordItemIndex(13));
            oldDateContructed = repo.ApplicationUnderTest.buildingCreateEdit.building_DateConstructedInput.Element.GetAttributeValueText("Value");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'Value' from item 'ApplicationUnderTest.buildingCreateEdit.building_Architect' and assigning its value to variable 'currentString'.", repo.ApplicationUnderTest.buildingCreateEdit.building_ArchitectInfo, new RecordItemIndex(14));
            currentString = repo.ApplicationUnderTest.buildingCreateEdit.building_Architect.Element.GetAttributeValueText("Value");
            Delay.Milliseconds(0);
            
            editedArchitect = HelperMethodsCollection.getEdittedName(currentString);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.buildingCreateEdit.building_Architect' at Center.", repo.ApplicationUnderTest.buildingCreateEdit.building_ArchitectInfo, new RecordItemIndex(16));
            repo.ApplicationUnderTest.buildingCreateEdit.building_Architect.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute TagValue to '' on item 'ApplicationUnderTest.buildingCreateEdit.building_Architect'.", repo.ApplicationUnderTest.buildingCreateEdit.building_ArchitectInfo, new RecordItemIndex(17));
            repo.ApplicationUnderTest.buildingCreateEdit.building_Architect.Element.SetAttributeValue("TagValue", "");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$editedArchitect' with focus on 'ApplicationUnderTest.buildingCreateEdit.building_Architect'.", repo.ApplicationUnderTest.buildingCreateEdit.building_ArchitectInfo, new RecordItemIndex(18));
            repo.ApplicationUnderTest.buildingCreateEdit.building_Architect.PressKeys(editedArchitect);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'Value' from item 'ApplicationUnderTest.buildingCreateEdit.building_Contractor' and assigning its value to variable 'currentString'.", repo.ApplicationUnderTest.buildingCreateEdit.building_ContractorInfo, new RecordItemIndex(19));
            currentString = repo.ApplicationUnderTest.buildingCreateEdit.building_Contractor.Element.GetAttributeValueText("Value");
            Delay.Milliseconds(0);
            
            editedContractor = HelperMethodsCollection.getEdittedName(currentString);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.buildingCreateEdit.building_Contractor' at Center.", repo.ApplicationUnderTest.buildingCreateEdit.building_ContractorInfo, new RecordItemIndex(21));
            repo.ApplicationUnderTest.buildingCreateEdit.building_Contractor.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute TagValue to '' on item 'ApplicationUnderTest.buildingCreateEdit.building_Contractor'.", repo.ApplicationUnderTest.buildingCreateEdit.building_ContractorInfo, new RecordItemIndex(22));
            repo.ApplicationUnderTest.buildingCreateEdit.building_Contractor.Element.SetAttributeValue("TagValue", "");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$editedContractor' with focus on 'ApplicationUnderTest.buildingCreateEdit.building_Contractor'.", repo.ApplicationUnderTest.buildingCreateEdit.building_ContractorInfo, new RecordItemIndex(23));
            repo.ApplicationUnderTest.buildingCreateEdit.building_Contractor.PressKeys(editedContractor);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.buildingCreateEdit.building_CampusDropdown' at Center.", repo.ApplicationUnderTest.buildingCreateEdit.building_CampusDropdownInfo, new RecordItemIndex(24));
            repo.ApplicationUnderTest.buildingCreateEdit.building_CampusDropdown.Click();
            Delay.Milliseconds(0);
            
            optionIndex = ValueConverter.ToString(HelperMethodsCollection.getDifferentOption(repo.ApplicationUnderTest.buildingCreateEdit.building_visibleDropdown_CompleteDropdown));
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'innertext' from item 'ApplicationUnderTest.buildingCreateEdit.building_visibleDropdown_dynamic' and assigning its value to variable 'editedCampus'.", repo.ApplicationUnderTest.buildingCreateEdit.building_visibleDropdown_dynamicInfo, new RecordItemIndex(26));
            editedCampus = repo.ApplicationUnderTest.buildingCreateEdit.building_visibleDropdown_dynamic.Element.GetAttributeValueText("innertext");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.buildingCreateEdit.building_visibleDropdown_dynamic' at Center.", repo.ApplicationUnderTest.buildingCreateEdit.building_visibleDropdown_dynamicInfo, new RecordItemIndex(27));
            repo.ApplicationUnderTest.buildingCreateEdit.building_visibleDropdown_dynamic.Click();
            Delay.Milliseconds(0);
            
            HelperMethodsCollection.waitForLoading();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.buildingCreateEdit.building_CampusDropdown' at Center.", repo.ApplicationUnderTest.buildingCreateEdit.building_CampusDropdownInfo, new RecordItemIndex(29));
            repo.ApplicationUnderTest.buildingCreateEdit.building_CampusDropdown.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'Value' from item 'ApplicationUnderTest.buildingCreateEdit.building_RenovationHistory' and assigning its value to variable 'currentString'.", repo.ApplicationUnderTest.buildingCreateEdit.building_RenovationHistoryInfo, new RecordItemIndex(30));
            currentString = repo.ApplicationUnderTest.buildingCreateEdit.building_RenovationHistory.Element.GetAttributeValueText("Value");
            Delay.Milliseconds(0);
            
            editedRenovationHistory = HelperMethodsCollection.getEdittedName(currentString);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.buildingCreateEdit.building_RenovationHistory' at Center.", repo.ApplicationUnderTest.buildingCreateEdit.building_RenovationHistoryInfo, new RecordItemIndex(32));
            repo.ApplicationUnderTest.buildingCreateEdit.building_RenovationHistory.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute TagValue to '' on item 'ApplicationUnderTest.buildingCreateEdit.building_RenovationHistory'.", repo.ApplicationUnderTest.buildingCreateEdit.building_RenovationHistoryInfo, new RecordItemIndex(33));
            repo.ApplicationUnderTest.buildingCreateEdit.building_RenovationHistory.Element.SetAttributeValue("TagValue", "");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$editedRenovationHistory' with focus on 'ApplicationUnderTest.buildingCreateEdit.building_RenovationHistory'.", repo.ApplicationUnderTest.buildingCreateEdit.building_RenovationHistoryInfo, new RecordItemIndex(34));
            repo.ApplicationUnderTest.buildingCreateEdit.building_RenovationHistory.PressKeys(editedRenovationHistory);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.buildingCreateEdit.building_ZoneDropdown' at Center.", repo.ApplicationUnderTest.buildingCreateEdit.building_ZoneDropdownInfo, new RecordItemIndex(35));
            repo.ApplicationUnderTest.buildingCreateEdit.building_ZoneDropdown.Click();
            Delay.Milliseconds(0);
            
            optionIndex = ValueConverter.ToString(HelperMethodsCollection.getDifferentOption(repo.ApplicationUnderTest.buildingCreateEdit.building_visibleDropdown_CompleteDropdown));
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'innertext' from item 'ApplicationUnderTest.buildingCreateEdit.building_visibleDropdown_dynamic' and assigning its value to variable 'editedZone'.", repo.ApplicationUnderTest.buildingCreateEdit.building_visibleDropdown_dynamicInfo, new RecordItemIndex(37));
            editedZone = repo.ApplicationUnderTest.buildingCreateEdit.building_visibleDropdown_dynamic.Element.GetAttributeValueText("innertext");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.buildingCreateEdit.building_visibleDropdown_dynamic' at Center.", repo.ApplicationUnderTest.buildingCreateEdit.building_visibleDropdown_dynamicInfo, new RecordItemIndex(38));
            repo.ApplicationUnderTest.buildingCreateEdit.building_visibleDropdown_dynamic.Click();
            Delay.Milliseconds(0);
            
            HelperMethodsCollection.waitForLoading();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.buildingCreateEdit.building_ZoneDropdown' at Center.", repo.ApplicationUnderTest.buildingCreateEdit.building_ZoneDropdownInfo, new RecordItemIndex(40));
            repo.ApplicationUnderTest.buildingCreateEdit.building_ZoneDropdown.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'tagValue' from item 'ApplicationUnderTest.buildingCreateEdit.building_ConstructionCost' and assigning its value to variable 'currentNumber'.", repo.ApplicationUnderTest.buildingCreateEdit.building_ConstructionCostInfo, new RecordItemIndex(41));
            currentNumber = repo.ApplicationUnderTest.buildingCreateEdit.building_ConstructionCost.Element.GetAttributeValueText("tagValue");
            Delay.Milliseconds(0);
            
            currentNumber = ValueConverter.ToString(HelperMethodsCollection.stringToInteger(currentNumber));
            Delay.Milliseconds(0);
            
            editedContructionCost = ValueConverter.ToString(HelperMethodsCollection.getEditedNumber(ValueConverter.ArgumentFromString<int>("oldNumber", currentNumber)));
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.buildingCreateEdit.building_ConstructionCost' at Center.", repo.ApplicationUnderTest.buildingCreateEdit.building_ConstructionCostInfo, new RecordItemIndex(44));
            repo.ApplicationUnderTest.buildingCreateEdit.building_ConstructionCost.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute TagValue to '' on item 'ApplicationUnderTest.buildingCreateEdit.building_ConstructionCost'.", repo.ApplicationUnderTest.buildingCreateEdit.building_ConstructionCostInfo, new RecordItemIndex(45));
            repo.ApplicationUnderTest.buildingCreateEdit.building_ConstructionCost.Element.SetAttributeValue("TagValue", "");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$editedContructionCost' with focus on 'ApplicationUnderTest.buildingCreateEdit.building_ConstructionCost'.", repo.ApplicationUnderTest.buildingCreateEdit.building_ConstructionCostInfo, new RecordItemIndex(46));
            repo.ApplicationUnderTest.buildingCreateEdit.building_ConstructionCost.PressKeys(editedContructionCost);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.buildingCreateEdit.building_WingDropdown' at Center.", repo.ApplicationUnderTest.buildingCreateEdit.building_WingDropdownInfo, new RecordItemIndex(47));
            repo.ApplicationUnderTest.buildingCreateEdit.building_WingDropdown.Click();
            Delay.Milliseconds(0);
            
            optionIndex = ValueConverter.ToString(HelperMethodsCollection.getDifferentOption(repo.ApplicationUnderTest.buildingCreateEdit.building_visibleDropdown_CompleteDropdown));
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'innertext' from item 'ApplicationUnderTest.buildingCreateEdit.building_visibleDropdown_dynamic' and assigning its value to variable 'editedWing'.", repo.ApplicationUnderTest.buildingCreateEdit.building_visibleDropdown_dynamicInfo, new RecordItemIndex(49));
            editedWing = repo.ApplicationUnderTest.buildingCreateEdit.building_visibleDropdown_dynamic.Element.GetAttributeValueText("innertext");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.buildingCreateEdit.building_visibleDropdown_dynamic' at Center.", repo.ApplicationUnderTest.buildingCreateEdit.building_visibleDropdown_dynamicInfo, new RecordItemIndex(50));
            repo.ApplicationUnderTest.buildingCreateEdit.building_visibleDropdown_dynamic.Click();
            Delay.Milliseconds(0);
            
            HelperMethodsCollection.waitForLoading();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.buildingCreateEdit.building_WingDropdown' at Center.", repo.ApplicationUnderTest.buildingCreateEdit.building_WingDropdownInfo, new RecordItemIndex(52));
            repo.ApplicationUnderTest.buildingCreateEdit.building_WingDropdown.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'Value' from item 'ApplicationUnderTest.buildingCreateEdit.building_Description' and assigning its value to variable 'currentString'.", repo.ApplicationUnderTest.buildingCreateEdit.building_DescriptionInfo, new RecordItemIndex(53));
            currentString = repo.ApplicationUnderTest.buildingCreateEdit.building_Description.Element.GetAttributeValueText("Value");
            Delay.Milliseconds(0);
            
            editedDescription = HelperMethodsCollection.getEdittedName(currentString);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.buildingCreateEdit.building_Description' at Center.", repo.ApplicationUnderTest.buildingCreateEdit.building_DescriptionInfo, new RecordItemIndex(55));
            repo.ApplicationUnderTest.buildingCreateEdit.building_Description.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute TagValue to '' on item 'ApplicationUnderTest.buildingCreateEdit.building_Description'.", repo.ApplicationUnderTest.buildingCreateEdit.building_DescriptionInfo, new RecordItemIndex(56));
            repo.ApplicationUnderTest.buildingCreateEdit.building_Description.Element.SetAttributeValue("TagValue", "");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$editedDescription' with focus on 'ApplicationUnderTest.buildingCreateEdit.building_Description'.", repo.ApplicationUnderTest.buildingCreateEdit.building_DescriptionInfo, new RecordItemIndex(57));
            repo.ApplicationUnderTest.buildingCreateEdit.building_Description.PressKeys(editedDescription);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Invoke action", "Invoking EnsureVisible() on item 'ApplicationUnderTest.buttonTagSave'.", repo.ApplicationUnderTest.buttonTagSaveInfo, new RecordItemIndex(58));
            repo.ApplicationUnderTest.buttonTagSave.EnsureVisible();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.buttonTagSave' at Center.", repo.ApplicationUnderTest.buttonTagSaveInfo, new RecordItemIndex(59));
            repo.ApplicationUnderTest.buttonTagSave.Click();
            Delay.Milliseconds(0);
            
            HelperMethodsCollection.waitForLoading();
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
