///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace BudgetItemAutomationIFM
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The create_Projects_Issue_success recording.
    /// </summary>
    [TestModule("71d8e6bd-8804-4594-845c-7101533a3587", ModuleType.Recording, 1)]
    public partial class create_Projects_Issue_success : ITestModule
    {
        /// <summary>
        /// Holds an instance of the BudgetItemAutomationIFMRepository repository.
        /// </summary>
        public static BudgetItemAutomationIFMRepository repo = BudgetItemAutomationIFMRepository.Instance;

        static create_Projects_Issue_success instance = new create_Projects_Issue_success();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public create_Projects_Issue_success()
        {
            itemCount = "";
            newTemplateName = "";
            ballinCourt = "";
            status = "";
            description = "";
            amount = "";
            optionIndex = "";
            issueType = "";
            documentId = "";
            durationDays = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static create_Projects_Issue_success Instance
        {
            get { return instance; }
        }

#region Variables

        string _itemCount;

        /// <summary>
        /// Gets or sets the value of variable itemCount.
        /// </summary>
        [TestVariable("787bb392-2948-465f-9894-2cf8d449da97")]
        public string itemCount
        {
            get { return _itemCount; }
            set { _itemCount = value; }
        }

        string _ballinCourt;

        /// <summary>
        /// Gets or sets the value of variable ballinCourt.
        /// </summary>
        [TestVariable("100cbe55-fcc7-4d6a-a00e-a8d53ed74e75")]
        public string ballinCourt
        {
            get { return _ballinCourt; }
            set { _ballinCourt = value; }
        }

        string _status;

        /// <summary>
        /// Gets or sets the value of variable status.
        /// </summary>
        [TestVariable("ae78704d-47ea-40ac-bd82-628ab12929eb")]
        public string status
        {
            get { return _status; }
            set { _status = value; }
        }

        string _description;

        /// <summary>
        /// Gets or sets the value of variable description.
        /// </summary>
        [TestVariable("d38aa1cf-7e86-406e-a98d-9970ddc1da56")]
        public string description
        {
            get { return _description; }
            set { _description = value; }
        }

        string _amount;

        /// <summary>
        /// Gets or sets the value of variable amount.
        /// </summary>
        [TestVariable("67fb7d12-024c-4b2e-9e51-4982963f4876")]
        public string amount
        {
            get { return _amount; }
            set { _amount = value; }
        }

        string _issueType;

        /// <summary>
        /// Gets or sets the value of variable issueType.
        /// </summary>
        [TestVariable("d1eff3e7-5576-4825-90e7-80ee3a31ff2d")]
        public string issueType
        {
            get { return _issueType; }
            set { _issueType = value; }
        }

        string _documentId;

        /// <summary>
        /// Gets or sets the value of variable documentId.
        /// </summary>
        [TestVariable("0e555908-3949-455e-b35e-a0836b80e3b6")]
        public string documentId
        {
            get { return _documentId; }
            set { _documentId = value; }
        }

        string _durationDays;

        /// <summary>
        /// Gets or sets the value of variable durationDays.
        /// </summary>
        [TestVariable("8b0dd5db-ce05-424c-8de7-536a6ccefebf")]
        public string durationDays
        {
            get { return _durationDays; }
            set { _durationDays = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable domain.
        /// </summary>
        [TestVariable("0e49bfa6-0c8f-4999-ad77-5babbb4e74af")]
        public string domain
        {
            get { return repo.domain; }
            set { repo.domain = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable optionIndex.
        /// </summary>
        [TestVariable("3a9b17db-8b15-4cef-9e5b-32ec200280da")]
        public string optionIndex
        {
            get { return repo.optionIndex; }
            set { repo.optionIndex = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable newTemplateName.
        /// </summary>
        [TestVariable("1a0733f4-2e50-4de0-8220-9c3f185418bc")]
        public string newTemplateName
        {
            get { return repo.newTemplateName; }
            set { repo.newTemplateName = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            itemCount = ValueConverter.ToString(HelperMethodsCollection.getNumberOfRecordsFromFooter(repo.ApplicationUnderTest.showingNumberOfRecords));
            Delay.Milliseconds(0);
            
            newTemplateName = HelperMethodsCollection.getNewCreateItem(ValueConverter.ArgumentFromString<int>("nextCount", itemCount), "item");
            Delay.Milliseconds(0);
            
            Mouse_Click_createSpanTag();
            Delay.Milliseconds(0);
            
            HelperMethodsCollection.waitForLoading();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.Projects_IssueTab_Form.Title' at Center.", repo.ApplicationUnderTest.Projects_IssueTab_Form.TitleInfo, new RecordItemIndex(4));
            repo.ApplicationUnderTest.Projects_IssueTab_Form.Title.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$newTemplateName' with focus on 'ApplicationUnderTest.Projects_IssueTab_Form.Title'.", repo.ApplicationUnderTest.Projects_IssueTab_Form.TitleInfo, new RecordItemIndex(5));
            repo.ApplicationUnderTest.Projects_IssueTab_Form.Title.PressKeys(newTemplateName);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.Projects_IssueTab_Form.BallinCourt' at Center.", repo.ApplicationUnderTest.Projects_IssueTab_Form.BallinCourtInfo, new RecordItemIndex(6));
            repo.ApplicationUnderTest.Projects_IssueTab_Form.BallinCourt.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$ballinCourt' with focus on 'ApplicationUnderTest.Projects_IssueTab_Form.BallinCourt'.", repo.ApplicationUnderTest.Projects_IssueTab_Form.BallinCourtInfo, new RecordItemIndex(7));
            repo.ApplicationUnderTest.Projects_IssueTab_Form.BallinCourt.PressKeys(ballinCourt);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.Projects_IssueTab_Form.status' at Center.", repo.ApplicationUnderTest.Projects_IssueTab_Form.statusInfo, new RecordItemIndex(8));
            repo.ApplicationUnderTest.Projects_IssueTab_Form.status.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$status' with focus on 'ApplicationUnderTest.Projects_IssueTab_Form.status'.", repo.ApplicationUnderTest.Projects_IssueTab_Form.statusInfo, new RecordItemIndex(9));
            repo.ApplicationUnderTest.Projects_IssueTab_Form.status.PressKeys(status);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.Projects_IssueTab_Form.description' at Center.", repo.ApplicationUnderTest.Projects_IssueTab_Form.descriptionInfo, new RecordItemIndex(10));
            repo.ApplicationUnderTest.Projects_IssueTab_Form.description.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$description' with focus on 'ApplicationUnderTest.Projects_IssueTab_Form.description'.", repo.ApplicationUnderTest.Projects_IssueTab_Form.descriptionInfo, new RecordItemIndex(11));
            repo.ApplicationUnderTest.Projects_IssueTab_Form.description.PressKeys(description);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.Projects_IssueTab_Form.Iscostimpact' at Center.", repo.ApplicationUnderTest.Projects_IssueTab_Form.IscostimpactInfo, new RecordItemIndex(12));
            repo.ApplicationUnderTest.Projects_IssueTab_Form.Iscostimpact.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.Projects_IssueTab_Form.Amount' at Center.", repo.ApplicationUnderTest.Projects_IssueTab_Form.AmountInfo, new RecordItemIndex(13));
            repo.ApplicationUnderTest.Projects_IssueTab_Form.Amount.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$amount' with focus on 'ApplicationUnderTest.Projects_IssueTab_Form.Amount'.", repo.ApplicationUnderTest.Projects_IssueTab_Form.AmountInfo, new RecordItemIndex(14));
            repo.ApplicationUnderTest.Projects_IssueTab_Form.Amount.PressKeys(amount);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.Projects_IssueTab_Form.MatMdcSelectMinLineMatMdcSelectP' at Center.", repo.ApplicationUnderTest.Projects_IssueTab_Form.MatMdcSelectMinLineMatMdcSelectPInfo, new RecordItemIndex(15));
            repo.ApplicationUnderTest.Projects_IssueTab_Form.MatMdcSelectMinLineMatMdcSelectP.Click();
            Delay.Milliseconds(0);
            
            optionIndex = ValueConverter.ToString(HelperMethodsCollection.getDifferentOption(repo.ApplicationUnderTest.listbox_DropdownList));
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'InnerText' from item 'ApplicationUnderTest.listbox_dynamicOption' and assigning its value to variable 'issueType'.", repo.ApplicationUnderTest.listbox_dynamicOptionInfo, new RecordItemIndex(17));
            issueType = repo.ApplicationUnderTest.listbox_dynamicOption.Element.GetAttributeValueText("InnerText");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.listbox_dynamicOption' at Center.", repo.ApplicationUnderTest.listbox_dynamicOptionInfo, new RecordItemIndex(18));
            repo.ApplicationUnderTest.listbox_dynamicOption.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.Projects_IssueTab_Form.DocumentID' at Center.", repo.ApplicationUnderTest.Projects_IssueTab_Form.DocumentIDInfo, new RecordItemIndex(19));
            repo.ApplicationUnderTest.Projects_IssueTab_Form.DocumentID.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$documentId' with focus on 'ApplicationUnderTest.Projects_IssueTab_Form.DocumentID'.", repo.ApplicationUnderTest.Projects_IssueTab_Form.DocumentIDInfo, new RecordItemIndex(20));
            repo.ApplicationUnderTest.Projects_IssueTab_Form.DocumentID.PressKeys(documentId);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.Projects_IssueTab_Form.Isscheduleimpact' at Center.", repo.ApplicationUnderTest.Projects_IssueTab_Form.IsscheduleimpactInfo, new RecordItemIndex(21));
            repo.ApplicationUnderTest.Projects_IssueTab_Form.Isscheduleimpact.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.Projects_IssueTab_Form.Durationdays' at Center.", repo.ApplicationUnderTest.Projects_IssueTab_Form.DurationdaysInfo, new RecordItemIndex(22));
            repo.ApplicationUnderTest.Projects_IssueTab_Form.Durationdays.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$durationDays' with focus on 'ApplicationUnderTest.Projects_IssueTab_Form.Durationdays'.", repo.ApplicationUnderTest.Projects_IssueTab_Form.DurationdaysInfo, new RecordItemIndex(23));
            repo.ApplicationUnderTest.Projects_IssueTab_Form.Durationdays.PressKeys(durationDays);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.Projects_IssueTab_Form.ButtonTagSubmit' at Center.", repo.ApplicationUnderTest.Projects_IssueTab_Form.ButtonTagSubmitInfo, new RecordItemIndex(24));
            repo.ApplicationUnderTest.Projects_IssueTab_Form.ButtonTagSubmit.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 30s to exist. Associated repository item: 'ApplicationUnderTest.DivTagIssueCreatedSuccessfully'", repo.ApplicationUnderTest.DivTagIssueCreatedSuccessfullyInfo, new ActionTimeout(30000), new RecordItemIndex(25));
            repo.ApplicationUnderTest.DivTagIssueCreatedSuccessfullyInfo.WaitForExists(30000);
            
            HelperMethodsCollection.waitForLoading();
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
