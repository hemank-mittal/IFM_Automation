///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace BudgetItemAutomationIFM
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The createProjects_AllFields_AdditionalInformation recording.
    /// </summary>
    [TestModule("e03c24cf-209b-4e41-a9c3-978e2e982011", ModuleType.Recording, 1)]
    public partial class createProjects_AllFields_AdditionalInformation : ITestModule
    {
        /// <summary>
        /// Holds an instance of the BudgetItemAutomationIFMRepository repository.
        /// </summary>
        public static BudgetItemAutomationIFMRepository repo = BudgetItemAutomationIFMRepository.Instance;

        static createProjects_AllFields_AdditionalInformation instance = new createProjects_AllFields_AdditionalInformation();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public createProjects_AllFields_AdditionalInformation()
        {
            fieldName = "";
            opening = "";
            grossSiteAreaAcres = "";
            grossFloorAreaSqft = "";
            coreCapacity = "";
            optionIndex = "";
            wbsCode = "";
            building = "";
            room = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static createProjects_AllFields_AdditionalInformation Instance
        {
            get { return instance; }
        }

#region Variables

        string _opening;

        /// <summary>
        /// Gets or sets the value of variable opening.
        /// </summary>
        [TestVariable("d4c91cd0-3b05-484e-aa25-2619db1caee5")]
        public string opening
        {
            get { return _opening; }
            set { _opening = value; }
        }

        string _grossSiteAreaAcres;

        /// <summary>
        /// Gets or sets the value of variable grossSiteAreaAcres.
        /// </summary>
        [TestVariable("a93ab3c7-4ef0-453f-bef2-58665ce12d05")]
        public string grossSiteAreaAcres
        {
            get { return _grossSiteAreaAcres; }
            set { _grossSiteAreaAcres = value; }
        }

        string _grossFloorAreaSqft;

        /// <summary>
        /// Gets or sets the value of variable grossFloorAreaSqft.
        /// </summary>
        [TestVariable("5fa48a3b-4b48-4251-9fa4-73dea6630706")]
        public string grossFloorAreaSqft
        {
            get { return _grossFloorAreaSqft; }
            set { _grossFloorAreaSqft = value; }
        }

        string _coreCapacity;

        /// <summary>
        /// Gets or sets the value of variable coreCapacity.
        /// </summary>
        [TestVariable("baa619b9-ad47-45e6-820e-020a0ca310f5")]
        public string coreCapacity
        {
            get { return _coreCapacity; }
            set { _coreCapacity = value; }
        }

        string _wbsCode;

        /// <summary>
        /// Gets or sets the value of variable wbsCode.
        /// </summary>
        [TestVariable("e0f121f0-5283-4c64-9181-b3fc5f99d8c5")]
        public string wbsCode
        {
            get { return _wbsCode; }
            set { _wbsCode = value; }
        }

        string _building;

        /// <summary>
        /// Gets or sets the value of variable building.
        /// </summary>
        [TestVariable("b5375f3a-d979-42cf-8f5f-24f42d17729f")]
        public string building
        {
            get { return _building; }
            set { _building = value; }
        }

        string _room;

        /// <summary>
        /// Gets or sets the value of variable room.
        /// </summary>
        [TestVariable("ce4b950b-756e-405f-a650-f081104e4612")]
        public string room
        {
            get { return _room; }
            set { _room = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable domain.
        /// </summary>
        [TestVariable("0e49bfa6-0c8f-4999-ad77-5babbb4e74af")]
        public string domain
        {
            get { return repo.domain; }
            set { repo.domain = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable fieldName.
        /// </summary>
        [TestVariable("a9677a2f-d460-4627-a3f0-f7090a67e5e2")]
        public string fieldName
        {
            get { return repo.fieldName; }
            set { repo.fieldName = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable optionIndex.
        /// </summary>
        [TestVariable("514e4918-793c-4216-a31d-57539566f335")]
        public string optionIndex
        {
            get { return repo.optionIndex; }
            set { repo.optionIndex = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Invoke action", "Invoking EnsureVisible() on item 'ApplicationUnderTest.projects_Form.additionalInformationDiv'.", repo.ApplicationUnderTest.projects_Form.additionalInformationDiv.SelfInfo, new RecordItemIndex(0));
            repo.ApplicationUnderTest.projects_Form.additionalInformationDiv.Self.EnsureVisible();
            Delay.Milliseconds(0);
            
            fieldName = HelperMethodsCollection.assignVariable("Opening");
            Delay.Milliseconds(0);
            
            opening = ValueConverter.ToString(HelperMethodsCollection.getEditedNumber(ValueConverter.ArgumentFromString<int>("oldNumber", "0")));
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.projects_Form.additionalInformationDiv.dynamicInputField' at Center.", repo.ApplicationUnderTest.projects_Form.additionalInformationDiv.dynamicInputFieldInfo, new RecordItemIndex(3));
            repo.ApplicationUnderTest.projects_Form.additionalInformationDiv.dynamicInputField.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$opening' with focus on 'ApplicationUnderTest.projects_Form.additionalInformationDiv.dynamicInputField'.", repo.ApplicationUnderTest.projects_Form.additionalInformationDiv.dynamicInputFieldInfo, new RecordItemIndex(4));
            repo.ApplicationUnderTest.projects_Form.additionalInformationDiv.dynamicInputField.EnsureVisible();
            Keyboard.Press(opening);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Escape}' with focus on 'ApplicationUnderTest.projects_Form.additionalInformationDiv.dynamicInputField'.", repo.ApplicationUnderTest.projects_Form.additionalInformationDiv.dynamicInputFieldInfo, new RecordItemIndex(5));
            repo.ApplicationUnderTest.projects_Form.additionalInformationDiv.dynamicInputField.EnsureVisible();
            Keyboard.Press("{Escape}");
            Delay.Milliseconds(0);
            
            fieldName = HelperMethodsCollection.assignVariable("Gross Site Area (Acres)");
            Delay.Milliseconds(0);
            
            grossSiteAreaAcres = ValueConverter.ToString(HelperMethodsCollection.getEditedNumber(ValueConverter.ArgumentFromString<int>("oldNumber", "0")));
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.projects_Form.additionalInformationDiv.dynamicInputField' at Center.", repo.ApplicationUnderTest.projects_Form.additionalInformationDiv.dynamicInputFieldInfo, new RecordItemIndex(8));
            repo.ApplicationUnderTest.projects_Form.additionalInformationDiv.dynamicInputField.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$grossSiteAreaAcres' with focus on 'ApplicationUnderTest.projects_Form.additionalInformationDiv.dynamicInputField'.", repo.ApplicationUnderTest.projects_Form.additionalInformationDiv.dynamicInputFieldInfo, new RecordItemIndex(9));
            repo.ApplicationUnderTest.projects_Form.additionalInformationDiv.dynamicInputField.EnsureVisible();
            Keyboard.Press(grossSiteAreaAcres);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Escape}' with focus on 'ApplicationUnderTest.projects_Form.additionalInformationDiv.dynamicInputField'.", repo.ApplicationUnderTest.projects_Form.additionalInformationDiv.dynamicInputFieldInfo, new RecordItemIndex(10));
            repo.ApplicationUnderTest.projects_Form.additionalInformationDiv.dynamicInputField.EnsureVisible();
            Keyboard.Press("{Escape}");
            Delay.Milliseconds(0);
            
            fieldName = HelperMethodsCollection.assignVariable("Gross Floor Area (Square Feet)");
            Delay.Milliseconds(0);
            
            grossFloorAreaSqft = ValueConverter.ToString(HelperMethodsCollection.getEditedNumber(ValueConverter.ArgumentFromString<int>("oldNumber", "0")));
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.projects_Form.additionalInformationDiv.dynamicInputField' at Center.", repo.ApplicationUnderTest.projects_Form.additionalInformationDiv.dynamicInputFieldInfo, new RecordItemIndex(13));
            repo.ApplicationUnderTest.projects_Form.additionalInformationDiv.dynamicInputField.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$grossFloorAreaSqft' with focus on 'ApplicationUnderTest.projects_Form.additionalInformationDiv.dynamicInputField'.", repo.ApplicationUnderTest.projects_Form.additionalInformationDiv.dynamicInputFieldInfo, new RecordItemIndex(14));
            repo.ApplicationUnderTest.projects_Form.additionalInformationDiv.dynamicInputField.EnsureVisible();
            Keyboard.Press(grossFloorAreaSqft);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Escape}' with focus on 'ApplicationUnderTest.projects_Form.additionalInformationDiv.dynamicInputField'.", repo.ApplicationUnderTest.projects_Form.additionalInformationDiv.dynamicInputFieldInfo, new RecordItemIndex(15));
            repo.ApplicationUnderTest.projects_Form.additionalInformationDiv.dynamicInputField.EnsureVisible();
            Keyboard.Press("{Escape}");
            Delay.Milliseconds(0);
            
            fieldName = HelperMethodsCollection.assignVariable("Core Capacity");
            Delay.Milliseconds(0);
            
            coreCapacity = ValueConverter.ToString(HelperMethodsCollection.getEditedNumber(ValueConverter.ArgumentFromString<int>("oldNumber", "0")));
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.projects_Form.additionalInformationDiv.dynamicInputField' at Center.", repo.ApplicationUnderTest.projects_Form.additionalInformationDiv.dynamicInputFieldInfo, new RecordItemIndex(18));
            repo.ApplicationUnderTest.projects_Form.additionalInformationDiv.dynamicInputField.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$coreCapacity' with focus on 'ApplicationUnderTest.projects_Form.additionalInformationDiv.dynamicInputField'.", repo.ApplicationUnderTest.projects_Form.additionalInformationDiv.dynamicInputFieldInfo, new RecordItemIndex(19));
            repo.ApplicationUnderTest.projects_Form.additionalInformationDiv.dynamicInputField.EnsureVisible();
            Keyboard.Press(coreCapacity);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Escape}' with focus on 'ApplicationUnderTest.projects_Form.additionalInformationDiv.dynamicInputField'.", repo.ApplicationUnderTest.projects_Form.additionalInformationDiv.dynamicInputFieldInfo, new RecordItemIndex(20));
            repo.ApplicationUnderTest.projects_Form.additionalInformationDiv.dynamicInputField.EnsureVisible();
            Keyboard.Press("{Escape}");
            Delay.Milliseconds(0);
            
            fieldName = HelperMethodsCollection.assignVariable("Building");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.projects_Form.additionalInformationDiv.dynamicdropdownField' at Center.", repo.ApplicationUnderTest.projects_Form.additionalInformationDiv.dynamicdropdownFieldInfo, new RecordItemIndex(22));
            repo.ApplicationUnderTest.projects_Form.additionalInformationDiv.dynamicdropdownField.Click();
            Delay.Milliseconds(0);
            
            optionIndex = ValueConverter.ToString(HelperMethodsCollection.getDifferentOption(repo.ApplicationUnderTest.listbox_DropdownList));
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'InnerText' from item 'ApplicationUnderTest.listbox_dynamicOption' and assigning its value to variable 'building'.", repo.ApplicationUnderTest.listbox_dynamicOptionInfo, new RecordItemIndex(24));
            building = repo.ApplicationUnderTest.listbox_dynamicOption.Element.GetAttributeValueText("InnerText");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.listbox_dynamicOption' at Center.", repo.ApplicationUnderTest.listbox_dynamicOptionInfo, new RecordItemIndex(25));
            repo.ApplicationUnderTest.listbox_dynamicOption.Click();
            Delay.Milliseconds(0);
            
            fieldName = HelperMethodsCollection.assignVariable("Room");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.projects_Form.additionalInformationDiv.dynamicdropdownField' at Center.", repo.ApplicationUnderTest.projects_Form.additionalInformationDiv.dynamicdropdownFieldInfo, new RecordItemIndex(27));
            repo.ApplicationUnderTest.projects_Form.additionalInformationDiv.dynamicdropdownField.Click();
            Delay.Milliseconds(0);
            
            optionIndex = ValueConverter.ToString(HelperMethodsCollection.getDifferentOption(repo.ApplicationUnderTest.listbox_DropdownList));
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'InnerText' from item 'ApplicationUnderTest.listbox_dynamicOption' and assigning its value to variable 'room'.", repo.ApplicationUnderTest.listbox_dynamicOptionInfo, new RecordItemIndex(29));
            room = repo.ApplicationUnderTest.listbox_dynamicOption.Element.GetAttributeValueText("InnerText");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.listbox_dynamicOption' at Center.", repo.ApplicationUnderTest.listbox_dynamicOptionInfo, new RecordItemIndex(30));
            repo.ApplicationUnderTest.listbox_dynamicOption.Click();
            Delay.Milliseconds(0);
            
            fieldName = HelperMethodsCollection.assignVariable("Wbs Code");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.projects_Form.additionalInformationDiv.dynamicInputField' at Center.", repo.ApplicationUnderTest.projects_Form.additionalInformationDiv.dynamicInputFieldInfo, new RecordItemIndex(32));
            repo.ApplicationUnderTest.projects_Form.additionalInformationDiv.dynamicInputField.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$wbsCode' with focus on 'ApplicationUnderTest.projects_Form.additionalInformationDiv.dynamicInputField'.", repo.ApplicationUnderTest.projects_Form.additionalInformationDiv.dynamicInputFieldInfo, new RecordItemIndex(33));
            repo.ApplicationUnderTest.projects_Form.additionalInformationDiv.dynamicInputField.EnsureVisible();
            Keyboard.Press(wbsCode);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Escape}' with focus on 'ApplicationUnderTest.projects_Form.additionalInformationDiv.dynamicInputField'.", repo.ApplicationUnderTest.projects_Form.additionalInformationDiv.dynamicInputFieldInfo, new RecordItemIndex(34));
            repo.ApplicationUnderTest.projects_Form.additionalInformationDiv.dynamicInputField.EnsureVisible();
            Keyboard.Press("{Escape}");
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
