///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace BudgetItemAutomationIFM
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The validatePunchList_Project recording.
    /// </summary>
    [TestModule("41644072-eca5-4283-aac5-19f819c08727", ModuleType.Recording, 1)]
    public partial class validatePunchList_Project : ITestModule
    {
        /// <summary>
        /// Holds an instance of the BudgetItemAutomationIFMRepository repository.
        /// </summary>
        public static BudgetItemAutomationIFMRepository repo = BudgetItemAutomationIFMRepository.Instance;

        static validatePunchList_Project instance = new validatePunchList_Project();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public validatePunchList_Project()
        {
            visibleItemName = "";
            visibleCreatorName = "";
            visibleCreatedDate = "";
            visibleStatus = "";
            visibleApprovedStatus = "";
            currentUser = "";
            itemName = "";
            view_visibleItemName = "";
            view_visibleRoomLocation = "";
            view_visibleDescription = "";
            roomLocation = "";
            description = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static validatePunchList_Project Instance
        {
            get { return instance; }
        }

#region Variables

        string _visibleItemName;

        /// <summary>
        /// Gets or sets the value of variable visibleItemName.
        /// </summary>
        [TestVariable("3e674135-56e2-41ea-8859-48bb6422ce2f")]
        public string visibleItemName
        {
            get { return _visibleItemName; }
            set { _visibleItemName = value; }
        }

        string _visibleCreatorName;

        /// <summary>
        /// Gets or sets the value of variable visibleCreatorName.
        /// </summary>
        [TestVariable("a73a0fb1-eca2-4cbf-a456-80ebd9ab5479")]
        public string visibleCreatorName
        {
            get { return _visibleCreatorName; }
            set { _visibleCreatorName = value; }
        }

        string _visibleCreatedDate;

        /// <summary>
        /// Gets or sets the value of variable visibleCreatedDate.
        /// </summary>
        [TestVariable("1b9dd8c5-16bb-4fb3-ba7f-025d72d019db")]
        public string visibleCreatedDate
        {
            get { return _visibleCreatedDate; }
            set { _visibleCreatedDate = value; }
        }

        string _visibleStatus;

        /// <summary>
        /// Gets or sets the value of variable visibleStatus.
        /// </summary>
        [TestVariable("32c95a51-ee4e-4ee6-a888-02c53951fcd3")]
        public string visibleStatus
        {
            get { return _visibleStatus; }
            set { _visibleStatus = value; }
        }

        string _visibleApprovedStatus;

        /// <summary>
        /// Gets or sets the value of variable visibleApprovedStatus.
        /// </summary>
        [TestVariable("86c88c05-68b6-48f8-8c48-833fee4d23bd")]
        public string visibleApprovedStatus
        {
            get { return _visibleApprovedStatus; }
            set { _visibleApprovedStatus = value; }
        }

        string _currentUser;

        /// <summary>
        /// Gets or sets the value of variable currentUser.
        /// </summary>
        [TestVariable("b4920e7c-4fb9-4571-b8e9-0d9f06b03e33")]
        public string currentUser
        {
            get { return _currentUser; }
            set { _currentUser = value; }
        }

        string _itemName;

        /// <summary>
        /// Gets or sets the value of variable itemName.
        /// </summary>
        [TestVariable("b21c69f2-ac55-4a56-9528-ec76bd085fcb")]
        public string itemName
        {
            get { return _itemName; }
            set { _itemName = value; }
        }

        string _view_visibleItemName;

        /// <summary>
        /// Gets or sets the value of variable view_visibleItemName.
        /// </summary>
        [TestVariable("83522363-f501-4263-ac5f-0af6107bc5f7")]
        public string view_visibleItemName
        {
            get { return _view_visibleItemName; }
            set { _view_visibleItemName = value; }
        }

        string _view_visibleRoomLocation;

        /// <summary>
        /// Gets or sets the value of variable view_visibleRoomLocation.
        /// </summary>
        [TestVariable("f4e9a988-4ad6-41da-9f4b-fd4d40ed7768")]
        public string view_visibleRoomLocation
        {
            get { return _view_visibleRoomLocation; }
            set { _view_visibleRoomLocation = value; }
        }

        string _view_visibleDescription;

        /// <summary>
        /// Gets or sets the value of variable view_visibleDescription.
        /// </summary>
        [TestVariable("dee4dcec-2974-43d6-951e-21adc4e2f9c0")]
        public string view_visibleDescription
        {
            get { return _view_visibleDescription; }
            set { _view_visibleDescription = value; }
        }

        string _roomLocation;

        /// <summary>
        /// Gets or sets the value of variable roomLocation.
        /// </summary>
        [TestVariable("85d834ff-a56d-481f-966e-d9a8a56296aa")]
        public string roomLocation
        {
            get { return _roomLocation; }
            set { _roomLocation = value; }
        }

        string _description;

        /// <summary>
        /// Gets or sets the value of variable description.
        /// </summary>
        [TestVariable("be354ebf-09b4-4c09-a11a-87eae254ac55")]
        public string description
        {
            get { return _description; }
            set { _description = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable domain.
        /// </summary>
        [TestVariable("0e49bfa6-0c8f-4999-ad77-5babbb4e74af")]
        public string domain
        {
            get { return repo.domain; }
            set { repo.domain = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.searchBar_type_search' at Center.", repo.ApplicationUnderTest.searchBar_type_searchInfo, new RecordItemIndex(0));
            repo.ApplicationUnderTest.searchBar_type_search.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$itemName' with focus on 'ApplicationUnderTest.searchBar_type_search'.", repo.ApplicationUnderTest.searchBar_type_searchInfo, new RecordItemIndex(1));
            repo.ApplicationUnderTest.searchBar_type_search.PressKeys(itemName);
            Delay.Milliseconds(20);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Return}' with focus on 'ApplicationUnderTest.searchBar_type_search'.", repo.ApplicationUnderTest.searchBar_type_searchInfo, new RecordItemIndex(2));
            repo.ApplicationUnderTest.searchBar_type_search.EnsureVisible();
            Keyboard.Press("{Return}");
            Delay.Milliseconds(0);
            
            HelperMethodsCollection.waitForLoading();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'InnerText' from item 'ApplicationUnderTest.syncfusionGridTable_records.row1_column1' and assigning its value to variable 'visibleItemName'.", repo.ApplicationUnderTest.syncfusionGridTable_records.row1_column1Info, new RecordItemIndex(4));
            visibleItemName = repo.ApplicationUnderTest.syncfusionGridTable_records.row1_column1.Element.GetAttributeValueText("InnerText");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'InnerText' from item 'ApplicationUnderTest.syncfusionGridTable_records.row1_column2' and assigning its value to variable 'visibleCreatorName'.", repo.ApplicationUnderTest.syncfusionGridTable_records.row1_column2Info, new RecordItemIndex(5));
            visibleCreatorName = repo.ApplicationUnderTest.syncfusionGridTable_records.row1_column2.Element.GetAttributeValueText("InnerText");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'InnerText' from item 'ApplicationUnderTest.syncfusionGridTable_records.row1_column3' and assigning its value to variable 'visibleCreatedDate'.", repo.ApplicationUnderTest.syncfusionGridTable_records.row1_column3Info, new RecordItemIndex(6));
            visibleCreatedDate = repo.ApplicationUnderTest.syncfusionGridTable_records.row1_column3.Element.GetAttributeValueText("InnerText");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'InnerText' from item 'ApplicationUnderTest.syncfusionGridTable_records.row1_column4' and assigning its value to variable 'visibleStatus'.", repo.ApplicationUnderTest.syncfusionGridTable_records.row1_column4Info, new RecordItemIndex(7));
            visibleStatus = repo.ApplicationUnderTest.syncfusionGridTable_records.row1_column4.Element.GetAttributeValueText("InnerText");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'InnerText' from item 'ApplicationUnderTest.syncfusionGridTable_records.row1_column5' and assigning its value to variable 'visibleApprovedStatus'.", repo.ApplicationUnderTest.syncfusionGridTable_records.row1_column5Info, new RecordItemIndex(8));
            visibleApprovedStatus = repo.ApplicationUnderTest.syncfusionGridTable_records.row1_column5.Element.GetAttributeValueText("InnerText");
            Delay.Milliseconds(8480);
            
            HelperMethodsCollection.compareStrings(visibleItemName, itemName);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'InnerText' from item 'ApplicationUnderTest.signed_in_UserName' and assigning its value to variable 'currentUser'.", repo.ApplicationUnderTest.signed_in_UserNameInfo, new RecordItemIndex(10));
            currentUser = repo.ApplicationUnderTest.signed_in_UserName.Element.GetAttributeValueText("InnerText");
            Delay.Milliseconds(0);
            
            HelperMethodsCollection.compareStrings(visibleCreatorName, currentUser);
            Delay.Milliseconds(0);
            
            HelperMethodsCollection.compareDateWithCurrentDate(visibleCreatedDate);
            Delay.Milliseconds(0);
            
            HelperMethodsCollection.compareStrings(visibleStatus, "Pending");
            Delay.Milliseconds(0);
            
            HelperMethodsCollection.compareStrings(visibleApprovedStatus, "Pending");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.syncfusionGridTable_records.row1_viewIcon' at Center.", repo.ApplicationUnderTest.syncfusionGridTable_records.row1_viewIconInfo, new RecordItemIndex(15));
            repo.ApplicationUnderTest.syncfusionGridTable_records.row1_viewIcon.Click();
            Delay.Milliseconds(0);
            
            HelperMethodsCollection.waitForLoading();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'InnerText' from item 'ApplicationUnderTest.viewPunchList_Project_itemName' and assigning its value to variable 'view_visibleItemName'.", repo.ApplicationUnderTest.viewPunchList_Project_itemNameInfo, new RecordItemIndex(17));
            view_visibleItemName = repo.ApplicationUnderTest.viewPunchList_Project_itemName.Element.GetAttributeValueText("InnerText");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'InnerText' from item 'ApplicationUnderTest.viewPunchList_Project_RoomLocation' and assigning its value to variable 'view_visibleRoomLocation'.", repo.ApplicationUnderTest.viewPunchList_Project_RoomLocationInfo, new RecordItemIndex(18));
            view_visibleRoomLocation = repo.ApplicationUnderTest.viewPunchList_Project_RoomLocation.Element.GetAttributeValueText("InnerText");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'InnerText' from item 'ApplicationUnderTest.viewPunchList_Project_Description' and assigning its value to variable 'view_visibleDescription'.", repo.ApplicationUnderTest.viewPunchList_Project_DescriptionInfo, new RecordItemIndex(19));
            view_visibleDescription = repo.ApplicationUnderTest.viewPunchList_Project_Description.Element.GetAttributeValueText("InnerText");
            Delay.Milliseconds(0);
            
            HelperMethodsCollection.compareStrings(view_visibleItemName, itemName);
            Delay.Milliseconds(0);
            
            HelperMethodsCollection.compareStrings(view_visibleRoomLocation, roomLocation);
            Delay.Milliseconds(0);
            
            HelperMethodsCollection.compareStrings(view_visibleDescription, description);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.viewPunchList_Project_backToPunchListButton' at Center.", repo.ApplicationUnderTest.viewPunchList_Project_backToPunchListButtonInfo, new RecordItemIndex(23));
            repo.ApplicationUnderTest.viewPunchList_Project_backToPunchListButton.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.searchBar_type_search' at Center.", repo.ApplicationUnderTest.searchBar_type_searchInfo, new RecordItemIndex(24));
            repo.ApplicationUnderTest.searchBar_type_search.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Ctrl+A' Press with focus on 'ApplicationUnderTest.searchBar_type_search'.", repo.ApplicationUnderTest.searchBar_type_searchInfo, new RecordItemIndex(25));
            Keyboard.PrepareFocus(repo.ApplicationUnderTest.searchBar_type_search);
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, 30, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Back}' with focus on 'ApplicationUnderTest.searchBar_type_search'.", repo.ApplicationUnderTest.searchBar_type_searchInfo, new RecordItemIndex(26));
            repo.ApplicationUnderTest.searchBar_type_search.PressKeys("{Back}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Return}' with focus on 'ApplicationUnderTest.searchBar_type_search'.", repo.ApplicationUnderTest.searchBar_type_searchInfo, new RecordItemIndex(27));
            repo.ApplicationUnderTest.searchBar_type_search.EnsureVisible();
            Keyboard.Press("{Return}");
            Delay.Milliseconds(0);
            
            HelperMethodsCollection.waitForLoading();
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
