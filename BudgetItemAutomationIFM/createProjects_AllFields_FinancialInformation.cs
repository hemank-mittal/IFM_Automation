///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace BudgetItemAutomationIFM
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The createProjects_AllFields_FinancialInformation recording.
    /// </summary>
    [TestModule("51135eff-d196-4276-b8e4-3b6efff3652e", ModuleType.Recording, 1)]
    public partial class createProjects_AllFields_FinancialInformation : ITestModule
    {
        /// <summary>
        /// Holds an instance of the BudgetItemAutomationIFMRepository repository.
        /// </summary>
        public static BudgetItemAutomationIFMRepository repo = BudgetItemAutomationIFMRepository.Instance;

        static createProjects_AllFields_FinancialInformation instance = new createProjects_AllFields_FinancialInformation();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public createProjects_AllFields_FinancialInformation()
        {
            fundingSourceCategory = "";
            program = "";
            optionIndex = "";
            fieldName = "";
            fundingSource = "";
            projectName = "";
            estimateProjectCost = "";
            estimateContructionCostPerc = "";
            estimatedConstructionCost = "";
            estimatedSoftCost = "";
            estimatedSoftCostPerc = "";
            approvedBudgetProject = "";
            approvedConstructionCost = "";
            approvedConstructionCostPerc = "Estimated Project Cost";
            approvedSoftBudgetPerc = "";
            approvedSoftCost = "";
            odpReserve = "";
            salesTaxPerc = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static createProjects_AllFields_FinancialInformation Instance
        {
            get { return instance; }
        }

#region Variables

        string _fundingSourceCategory;

        /// <summary>
        /// Gets or sets the value of variable fundingSourceCategory.
        /// </summary>
        [TestVariable("a2ca9e09-444e-4c40-a7d1-42c02171d1e3")]
        public string fundingSourceCategory
        {
            get { return _fundingSourceCategory; }
            set { _fundingSourceCategory = value; }
        }

        string _program;

        /// <summary>
        /// Gets or sets the value of variable program.
        /// </summary>
        [TestVariable("6a36656c-8f71-4476-87a9-556d33996c69")]
        public string program
        {
            get { return _program; }
            set { _program = value; }
        }

        string _fundingSource;

        /// <summary>
        /// Gets or sets the value of variable fundingSource.
        /// </summary>
        [TestVariable("ba6de2fa-1bf8-4d3a-b03e-e7c3e88c028d")]
        public string fundingSource
        {
            get { return _fundingSource; }
            set { _fundingSource = value; }
        }

        string _projectName;

        /// <summary>
        /// Gets or sets the value of variable projectName.
        /// </summary>
        [TestVariable("792b67c2-288a-47f2-8673-81813ce6d010")]
        public string projectName
        {
            get { return _projectName; }
            set { _projectName = value; }
        }

        string _estimateProjectCost;

        /// <summary>
        /// Gets or sets the value of variable estimateProjectCost.
        /// </summary>
        [TestVariable("9e7848dd-5983-4c79-b351-c62f795da50c")]
        public string estimateProjectCost
        {
            get { return _estimateProjectCost; }
            set { _estimateProjectCost = value; }
        }

        string _estimateContructionCostPerc;

        /// <summary>
        /// Gets or sets the value of variable estimateContructionCostPerc.
        /// </summary>
        [TestVariable("8e609169-bb71-4d20-8cff-ceb692fbd3ba")]
        public string estimateContructionCostPerc
        {
            get { return _estimateContructionCostPerc; }
            set { _estimateContructionCostPerc = value; }
        }

        string _estimatedConstructionCost;

        /// <summary>
        /// Gets or sets the value of variable estimatedConstructionCost.
        /// </summary>
        [TestVariable("60df70b7-acdd-4c0a-9aa8-b1775aaf37bf")]
        public string estimatedConstructionCost
        {
            get { return _estimatedConstructionCost; }
            set { _estimatedConstructionCost = value; }
        }

        string _estimatedSoftCost;

        /// <summary>
        /// Gets or sets the value of variable estimatedSoftCost.
        /// </summary>
        [TestVariable("4b14bc52-a4ac-4552-bbee-18e0a9c3a66d")]
        public string estimatedSoftCost
        {
            get { return _estimatedSoftCost; }
            set { _estimatedSoftCost = value; }
        }

        string _estimatedSoftCostPerc;

        /// <summary>
        /// Gets or sets the value of variable estimatedSoftCostPerc.
        /// </summary>
        [TestVariable("895dc30d-9696-426a-976e-0472f9c758bd")]
        public string estimatedSoftCostPerc
        {
            get { return _estimatedSoftCostPerc; }
            set { _estimatedSoftCostPerc = value; }
        }

        string _approvedBudgetProject;

        /// <summary>
        /// Gets or sets the value of variable approvedBudgetProject.
        /// </summary>
        [TestVariable("3586bd93-3ddd-4438-8532-e13e566281ae")]
        public string approvedBudgetProject
        {
            get { return _approvedBudgetProject; }
            set { _approvedBudgetProject = value; }
        }

        string _approvedConstructionCost;

        /// <summary>
        /// Gets or sets the value of variable approvedConstructionCost.
        /// </summary>
        [TestVariable("0b155986-9746-4906-b777-68f157cdf8ef")]
        public string approvedConstructionCost
        {
            get { return _approvedConstructionCost; }
            set { _approvedConstructionCost = value; }
        }

        string _approvedConstructionCostPerc;

        /// <summary>
        /// Gets or sets the value of variable approvedConstructionCostPerc.
        /// </summary>
        [TestVariable("2f107379-e042-45e3-9fd5-214f5b3a29fd")]
        public string approvedConstructionCostPerc
        {
            get { return _approvedConstructionCostPerc; }
            set { _approvedConstructionCostPerc = value; }
        }

        string _approvedSoftBudgetPerc;

        /// <summary>
        /// Gets or sets the value of variable approvedSoftBudgetPerc.
        /// </summary>
        [TestVariable("d7b95bfe-dda6-47e5-8fe2-2fa69bb2e0d3")]
        public string approvedSoftBudgetPerc
        {
            get { return _approvedSoftBudgetPerc; }
            set { _approvedSoftBudgetPerc = value; }
        }

        string _approvedSoftCost;

        /// <summary>
        /// Gets or sets the value of variable approvedSoftCost.
        /// </summary>
        [TestVariable("ed668de2-1288-4c90-bb5c-313f22ba5af7")]
        public string approvedSoftCost
        {
            get { return _approvedSoftCost; }
            set { _approvedSoftCost = value; }
        }

        string _odpReserve;

        /// <summary>
        /// Gets or sets the value of variable odpReserve.
        /// </summary>
        [TestVariable("f309caee-00a1-4af9-abb0-453273ec2a39")]
        public string odpReserve
        {
            get { return _odpReserve; }
            set { _odpReserve = value; }
        }

        string _salesTaxPerc;

        /// <summary>
        /// Gets or sets the value of variable salesTaxPerc.
        /// </summary>
        [TestVariable("f0381ddc-862e-4b85-9f89-9d0ddd6ebc89")]
        public string salesTaxPerc
        {
            get { return _salesTaxPerc; }
            set { _salesTaxPerc = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable domain.
        /// </summary>
        [TestVariable("0e49bfa6-0c8f-4999-ad77-5babbb4e74af")]
        public string domain
        {
            get { return repo.domain; }
            set { repo.domain = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable fieldName.
        /// </summary>
        [TestVariable("61c7de25-781f-40f1-b100-cd704cba912c")]
        public string fieldName
        {
            get { return repo.fieldName; }
            set { repo.fieldName = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable optionIndex.
        /// </summary>
        [TestVariable("37b1c612-fedf-4600-afdf-1d283281ce0d")]
        public string optionIndex
        {
            get { return repo.optionIndex; }
            set { repo.optionIndex = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Invoke action", "Invoking EnsureVisible() on item 'ApplicationUnderTest.projects_Form.financialInformationDiv'.", repo.ApplicationUnderTest.projects_Form.financialInformationDiv.SelfInfo, new RecordItemIndex(0));
            repo.ApplicationUnderTest.projects_Form.financialInformationDiv.Self.EnsureVisible();
            Delay.Milliseconds(0);
            
            fieldName = HelperMethodsCollection.assignVariable("Funding Source Category");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.projects_Form.financialInformationDiv.dynamicdropdownField' at Center.", repo.ApplicationUnderTest.projects_Form.financialInformationDiv.dynamicdropdownFieldInfo, new RecordItemIndex(2));
            repo.ApplicationUnderTest.projects_Form.financialInformationDiv.dynamicdropdownField.Click();
            Delay.Milliseconds(0);
            
            optionIndex = ValueConverter.ToString(HelperMethodsCollection.getDifferentOption(repo.ApplicationUnderTest.listbox_DropdownList));
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'InnerText' from item 'ApplicationUnderTest.listbox_dynamicOption' and assigning its value to variable 'fundingSourceCategory'.", repo.ApplicationUnderTest.listbox_dynamicOptionInfo, new RecordItemIndex(4));
            fundingSourceCategory = repo.ApplicationUnderTest.listbox_dynamicOption.Element.GetAttributeValueText("InnerText");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.listbox_dynamicOption' at Center.", repo.ApplicationUnderTest.listbox_dynamicOptionInfo, new RecordItemIndex(5));
            repo.ApplicationUnderTest.listbox_dynamicOption.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.projects_Form.financialInformationDiv.fundingSourceDropdownField' at Center.", repo.ApplicationUnderTest.projects_Form.financialInformationDiv.fundingSourceDropdownFieldInfo, new RecordItemIndex(6));
            repo.ApplicationUnderTest.projects_Form.financialInformationDiv.fundingSourceDropdownField.Click();
            Delay.Milliseconds(0);
            
            optionIndex = ValueConverter.ToString(HelperMethodsCollection.getDifferentOption(repo.ApplicationUnderTest.listbox_DropdownList));
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'InnerText' from item 'ApplicationUnderTest.listbox_dynamicOption' and assigning its value to variable 'fundingSource'.", repo.ApplicationUnderTest.listbox_dynamicOptionInfo, new RecordItemIndex(8));
            fundingSource = repo.ApplicationUnderTest.listbox_dynamicOption.Element.GetAttributeValueText("InnerText");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.listbox_dynamicOption' at Center.", repo.ApplicationUnderTest.listbox_dynamicOptionInfo, new RecordItemIndex(9));
            repo.ApplicationUnderTest.listbox_dynamicOption.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.projects_Form.financialInformationDiv.fundingSourceDropdownField' at Center.", repo.ApplicationUnderTest.projects_Form.financialInformationDiv.fundingSourceDropdownFieldInfo, new RecordItemIndex(10));
            repo.ApplicationUnderTest.projects_Form.financialInformationDiv.fundingSourceDropdownField.Click();
            Delay.Milliseconds(0);
            
            fieldName = HelperMethodsCollection.assignVariable("Estimated Project Cost");
            Delay.Milliseconds(0);
            
            estimateProjectCost = ValueConverter.ToString(HelperMethodsCollection.getEditedNumber(ValueConverter.ArgumentFromString<int>("oldNumber", "0")));
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.projects_Form.financialInformationDiv.dynamicInputField' at Center.", repo.ApplicationUnderTest.projects_Form.financialInformationDiv.dynamicInputFieldInfo, new RecordItemIndex(13));
            repo.ApplicationUnderTest.projects_Form.financialInformationDiv.dynamicInputField.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$estimateProjectCost' with focus on 'ApplicationUnderTest.projects_Form.financialInformationDiv.dynamicInputField'.", repo.ApplicationUnderTest.projects_Form.financialInformationDiv.dynamicInputFieldInfo, new RecordItemIndex(14));
            repo.ApplicationUnderTest.projects_Form.financialInformationDiv.dynamicInputField.EnsureVisible();
            Keyboard.Press(estimateProjectCost);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Escape}' with focus on 'ApplicationUnderTest.projects_Form.financialInformationDiv.dynamicInputField'.", repo.ApplicationUnderTest.projects_Form.financialInformationDiv.dynamicInputFieldInfo, new RecordItemIndex(15));
            repo.ApplicationUnderTest.projects_Form.financialInformationDiv.dynamicInputField.EnsureVisible();
            Keyboard.Press("{Escape}");
            Delay.Milliseconds(0);
            
            fieldName = HelperMethodsCollection.assignVariable("Estimated Construction Cost Perc");
            Delay.Milliseconds(0);
            
            estimateContructionCostPerc = ValueConverter.ToString(HelperMethodsCollection.getEditedNumber(ValueConverter.ArgumentFromString<int>("oldNumber", "0")));
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.projects_Form.financialInformationDiv.dynamicInputField' at Center.", repo.ApplicationUnderTest.projects_Form.financialInformationDiv.dynamicInputFieldInfo, new RecordItemIndex(18));
            repo.ApplicationUnderTest.projects_Form.financialInformationDiv.dynamicInputField.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$estimateContructionCostPerc' with focus on 'ApplicationUnderTest.projects_Form.financialInformationDiv.dynamicInputField'.", repo.ApplicationUnderTest.projects_Form.financialInformationDiv.dynamicInputFieldInfo, new RecordItemIndex(19));
            repo.ApplicationUnderTest.projects_Form.financialInformationDiv.dynamicInputField.EnsureVisible();
            Keyboard.Press(estimateContructionCostPerc);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Escape}' with focus on 'ApplicationUnderTest.projects_Form.financialInformationDiv.dynamicInputField'.", repo.ApplicationUnderTest.projects_Form.financialInformationDiv.dynamicInputFieldInfo, new RecordItemIndex(20));
            repo.ApplicationUnderTest.projects_Form.financialInformationDiv.dynamicInputField.EnsureVisible();
            Keyboard.Press("{Escape}");
            Delay.Milliseconds(0);
            
            fieldName = HelperMethodsCollection.assignVariable("Estimated Construction Cost");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'Value' from item 'ApplicationUnderTest.projects_Form.financialInformationDiv.dynamicInputField' and assigning its value to variable 'estimatedConstructionCost'.", repo.ApplicationUnderTest.projects_Form.financialInformationDiv.dynamicInputFieldInfo, new RecordItemIndex(22));
            estimatedConstructionCost = repo.ApplicationUnderTest.projects_Form.financialInformationDiv.dynamicInputField.Element.GetAttributeValueText("Value");
            Delay.Milliseconds(0);
            
            //estimatedConstructionCost = ValueConverter.ToString(HelperMethodsCollection.getEditedNumber(ValueConverter.ArgumentFromString<int>("oldNumber", "0")));
            //Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.projects_Form.financialInformationDiv.dynamicInputField' at Center.", repo.ApplicationUnderTest.projects_Form.financialInformationDiv.dynamicInputFieldInfo, new RecordItemIndex(24));
            //repo.ApplicationUnderTest.projects_Form.financialInformationDiv.dynamicInputField.Click();
            //Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$estimatedConstructionCost' with focus on 'ApplicationUnderTest.projects_Form.financialInformationDiv.dynamicInputField'.", repo.ApplicationUnderTest.projects_Form.financialInformationDiv.dynamicInputFieldInfo, new RecordItemIndex(25));
            //repo.ApplicationUnderTest.projects_Form.financialInformationDiv.dynamicInputField.EnsureVisible();
            //Keyboard.Press(estimatedConstructionCost);
            //Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Escape}' with focus on 'ApplicationUnderTest.projects_Form.financialInformationDiv.dynamicInputField'.", repo.ApplicationUnderTest.projects_Form.financialInformationDiv.dynamicInputFieldInfo, new RecordItemIndex(26));
            //repo.ApplicationUnderTest.projects_Form.financialInformationDiv.dynamicInputField.EnsureVisible();
            //Keyboard.Press("{Escape}");
            //Delay.Milliseconds(0);
            
            fieldName = HelperMethodsCollection.assignVariable("Estimated Soft Cost(%)");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'Value' from item 'ApplicationUnderTest.projects_Form.financialInformationDiv.dynamicInputField' and assigning its value to variable 'estimatedSoftCostPerc'.", repo.ApplicationUnderTest.projects_Form.financialInformationDiv.dynamicInputFieldInfo, new RecordItemIndex(28));
            estimatedSoftCostPerc = repo.ApplicationUnderTest.projects_Form.financialInformationDiv.dynamicInputField.Element.GetAttributeValueText("Value");
            Delay.Milliseconds(0);
            
            //estimatedSoftCostPerc = ValueConverter.ToString(HelperMethodsCollection.getEditedNumber(ValueConverter.ArgumentFromString<int>("oldNumber", "0")));
            //Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.projects_Form.financialInformationDiv.dynamicInputField' at Center.", repo.ApplicationUnderTest.projects_Form.financialInformationDiv.dynamicInputFieldInfo, new RecordItemIndex(30));
            //repo.ApplicationUnderTest.projects_Form.financialInformationDiv.dynamicInputField.Click();
            //Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$estimatedSoftCostPerc' with focus on 'ApplicationUnderTest.projects_Form.financialInformationDiv.dynamicInputField'.", repo.ApplicationUnderTest.projects_Form.financialInformationDiv.dynamicInputFieldInfo, new RecordItemIndex(31));
            //repo.ApplicationUnderTest.projects_Form.financialInformationDiv.dynamicInputField.EnsureVisible();
            //Keyboard.Press(estimatedSoftCostPerc);
            //Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Escape}' with focus on 'ApplicationUnderTest.projects_Form.financialInformationDiv.dynamicInputField'.", repo.ApplicationUnderTest.projects_Form.financialInformationDiv.dynamicInputFieldInfo, new RecordItemIndex(32));
            //repo.ApplicationUnderTest.projects_Form.financialInformationDiv.dynamicInputField.EnsureVisible();
            //Keyboard.Press("{Escape}");
            //Delay.Milliseconds(0);
            
            fieldName = HelperMethodsCollection.assignVariable("Estimated Soft Cost");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'Value' from item 'ApplicationUnderTest.projects_Form.financialInformationDiv.dynamicInputField' and assigning its value to variable 'estimatedSoftCost'.", repo.ApplicationUnderTest.projects_Form.financialInformationDiv.dynamicInputFieldInfo, new RecordItemIndex(34));
            estimatedSoftCost = repo.ApplicationUnderTest.projects_Form.financialInformationDiv.dynamicInputField.Element.GetAttributeValueText("Value");
            Delay.Milliseconds(0);
            
            //estimatedSoftCost = ValueConverter.ToString(HelperMethodsCollection.getEditedNumber(ValueConverter.ArgumentFromString<int>("oldNumber", "0")));
            //Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.projects_Form.financialInformationDiv.dynamicInputField' at Center.", repo.ApplicationUnderTest.projects_Form.financialInformationDiv.dynamicInputFieldInfo, new RecordItemIndex(36));
            //repo.ApplicationUnderTest.projects_Form.financialInformationDiv.dynamicInputField.Click();
            //Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$estimatedSoftCost' with focus on 'ApplicationUnderTest.projects_Form.financialInformationDiv.dynamicInputField'.", repo.ApplicationUnderTest.projects_Form.financialInformationDiv.dynamicInputFieldInfo, new RecordItemIndex(37));
            //repo.ApplicationUnderTest.projects_Form.financialInformationDiv.dynamicInputField.EnsureVisible();
            //Keyboard.Press(estimatedSoftCost);
            //Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Escape}' with focus on 'ApplicationUnderTest.projects_Form.financialInformationDiv.dynamicInputField'.", repo.ApplicationUnderTest.projects_Form.financialInformationDiv.dynamicInputFieldInfo, new RecordItemIndex(38));
            //repo.ApplicationUnderTest.projects_Form.financialInformationDiv.dynamicInputField.EnsureVisible();
            //Keyboard.Press("{Escape}");
            //Delay.Milliseconds(0);
            
            fieldName = HelperMethodsCollection.assignVariable("Approved Project Budget");
            Delay.Milliseconds(0);
            
            approvedBudgetProject = ValueConverter.ToString(HelperMethodsCollection.getEditedNumber(ValueConverter.ArgumentFromString<int>("oldNumber", "0")));
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.projects_Form.financialInformationDiv.dynamicInputField' at Center.", repo.ApplicationUnderTest.projects_Form.financialInformationDiv.dynamicInputFieldInfo, new RecordItemIndex(41));
            repo.ApplicationUnderTest.projects_Form.financialInformationDiv.dynamicInputField.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$approvedBudgetProject' with focus on 'ApplicationUnderTest.projects_Form.financialInformationDiv.dynamicInputField'.", repo.ApplicationUnderTest.projects_Form.financialInformationDiv.dynamicInputFieldInfo, new RecordItemIndex(42));
            repo.ApplicationUnderTest.projects_Form.financialInformationDiv.dynamicInputField.EnsureVisible();
            Keyboard.Press(approvedBudgetProject);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Escape}' with focus on 'ApplicationUnderTest.projects_Form.financialInformationDiv.dynamicInputField'.", repo.ApplicationUnderTest.projects_Form.financialInformationDiv.dynamicInputFieldInfo, new RecordItemIndex(43));
            repo.ApplicationUnderTest.projects_Form.financialInformationDiv.dynamicInputField.EnsureVisible();
            Keyboard.Press("{Escape}");
            Delay.Milliseconds(0);
            
            fieldName = HelperMethodsCollection.assignVariable("Approved Construction Cost");
            Delay.Milliseconds(0);
            
            approvedConstructionCost = ValueConverter.ToString(HelperMethodsCollection.getEditedNumber(ValueConverter.ArgumentFromString<int>("oldNumber", "0")));
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.projects_Form.financialInformationDiv.dynamicInputField' at Center.", repo.ApplicationUnderTest.projects_Form.financialInformationDiv.dynamicInputFieldInfo, new RecordItemIndex(46));
            repo.ApplicationUnderTest.projects_Form.financialInformationDiv.dynamicInputField.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$approvedConstructionCost' with focus on 'ApplicationUnderTest.projects_Form.financialInformationDiv.dynamicInputField'.", repo.ApplicationUnderTest.projects_Form.financialInformationDiv.dynamicInputFieldInfo, new RecordItemIndex(47));
            repo.ApplicationUnderTest.projects_Form.financialInformationDiv.dynamicInputField.EnsureVisible();
            Keyboard.Press(approvedConstructionCost);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Escape}' with focus on 'ApplicationUnderTest.projects_Form.financialInformationDiv.dynamicInputField'.", repo.ApplicationUnderTest.projects_Form.financialInformationDiv.dynamicInputFieldInfo, new RecordItemIndex(48));
            repo.ApplicationUnderTest.projects_Form.financialInformationDiv.dynamicInputField.EnsureVisible();
            Keyboard.Press("{Escape}");
            Delay.Milliseconds(0);
            
            fieldName = HelperMethodsCollection.assignVariable("Approved Construction Cost(%)");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'Value' from item 'ApplicationUnderTest.projects_Form.financialInformationDiv.dynamicInputField' and assigning its value to variable 'approvedConstructionCostPerc'.", repo.ApplicationUnderTest.projects_Form.financialInformationDiv.dynamicInputFieldInfo, new RecordItemIndex(50));
            approvedConstructionCostPerc = repo.ApplicationUnderTest.projects_Form.financialInformationDiv.dynamicInputField.Element.GetAttributeValueText("Value");
            Delay.Milliseconds(0);
            
            //approvedConstructionCostPerc = ValueConverter.ToString(HelperMethodsCollection.getEditedNumber(ValueConverter.ArgumentFromString<int>("oldNumber", "0")));
            //Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.projects_Form.financialInformationDiv.dynamicInputField' at Center.", repo.ApplicationUnderTest.projects_Form.financialInformationDiv.dynamicInputFieldInfo, new RecordItemIndex(52));
            //repo.ApplicationUnderTest.projects_Form.financialInformationDiv.dynamicInputField.Click();
            //Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$approvedConstructionCostPerc' with focus on 'ApplicationUnderTest.projects_Form.financialInformationDiv.dynamicInputField'.", repo.ApplicationUnderTest.projects_Form.financialInformationDiv.dynamicInputFieldInfo, new RecordItemIndex(53));
            //repo.ApplicationUnderTest.projects_Form.financialInformationDiv.dynamicInputField.EnsureVisible();
            //Keyboard.Press(approvedConstructionCostPerc);
            //Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Escape}' with focus on 'ApplicationUnderTest.projects_Form.financialInformationDiv.dynamicInputField'.", repo.ApplicationUnderTest.projects_Form.financialInformationDiv.dynamicInputFieldInfo, new RecordItemIndex(54));
            //repo.ApplicationUnderTest.projects_Form.financialInformationDiv.dynamicInputField.EnsureVisible();
            //Keyboard.Press("{Escape}");
            //Delay.Milliseconds(0);
            
            fieldName = HelperMethodsCollection.assignVariable("Approved Soft Budget(%)");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'Value' from item 'ApplicationUnderTest.projects_Form.financialInformationDiv.dynamicInputField' and assigning its value to variable 'approvedSoftBudgetPerc'.", repo.ApplicationUnderTest.projects_Form.financialInformationDiv.dynamicInputFieldInfo, new RecordItemIndex(56));
            approvedSoftBudgetPerc = repo.ApplicationUnderTest.projects_Form.financialInformationDiv.dynamicInputField.Element.GetAttributeValueText("Value");
            Delay.Milliseconds(0);
            
            //approvedSoftBudgetPerc = ValueConverter.ToString(HelperMethodsCollection.getEditedNumber(ValueConverter.ArgumentFromString<int>("oldNumber", "0")));
            //Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.projects_Form.financialInformationDiv.dynamicInputField' at Center.", repo.ApplicationUnderTest.projects_Form.financialInformationDiv.dynamicInputFieldInfo, new RecordItemIndex(58));
            //repo.ApplicationUnderTest.projects_Form.financialInformationDiv.dynamicInputField.Click();
            //Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$approvedSoftBudgetPerc' with focus on 'ApplicationUnderTest.projects_Form.financialInformationDiv.dynamicInputField'.", repo.ApplicationUnderTest.projects_Form.financialInformationDiv.dynamicInputFieldInfo, new RecordItemIndex(59));
            //repo.ApplicationUnderTest.projects_Form.financialInformationDiv.dynamicInputField.EnsureVisible();
            //Keyboard.Press(approvedSoftBudgetPerc);
            //Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Escape}' with focus on 'ApplicationUnderTest.projects_Form.financialInformationDiv.dynamicInputField'.", repo.ApplicationUnderTest.projects_Form.financialInformationDiv.dynamicInputFieldInfo, new RecordItemIndex(60));
            //repo.ApplicationUnderTest.projects_Form.financialInformationDiv.dynamicInputField.EnsureVisible();
            //Keyboard.Press("{Escape}");
            //Delay.Milliseconds(0);
            
            fieldName = HelperMethodsCollection.assignVariable("Approved Soft Cost");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'Value' from item 'ApplicationUnderTest.projects_Form.financialInformationDiv.dynamicInputField' and assigning its value to variable 'approvedSoftCost'.", repo.ApplicationUnderTest.projects_Form.financialInformationDiv.dynamicInputFieldInfo, new RecordItemIndex(62));
            approvedSoftCost = repo.ApplicationUnderTest.projects_Form.financialInformationDiv.dynamicInputField.Element.GetAttributeValueText("Value");
            Delay.Milliseconds(0);
            
            //approvedSoftCost = ValueConverter.ToString(HelperMethodsCollection.getEditedNumber(ValueConverter.ArgumentFromString<int>("oldNumber", "0")));
            //Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.projects_Form.financialInformationDiv.dynamicInputField' at Center.", repo.ApplicationUnderTest.projects_Form.financialInformationDiv.dynamicInputFieldInfo, new RecordItemIndex(64));
            //repo.ApplicationUnderTest.projects_Form.financialInformationDiv.dynamicInputField.Click();
            //Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$approvedSoftCost' with focus on 'ApplicationUnderTest.projects_Form.financialInformationDiv.dynamicInputField'.", repo.ApplicationUnderTest.projects_Form.financialInformationDiv.dynamicInputFieldInfo, new RecordItemIndex(65));
            //repo.ApplicationUnderTest.projects_Form.financialInformationDiv.dynamicInputField.EnsureVisible();
            //Keyboard.Press(approvedSoftCost);
            //Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Escape}' with focus on 'ApplicationUnderTest.projects_Form.financialInformationDiv.dynamicInputField'.", repo.ApplicationUnderTest.projects_Form.financialInformationDiv.dynamicInputFieldInfo, new RecordItemIndex(66));
            //repo.ApplicationUnderTest.projects_Form.financialInformationDiv.dynamicInputField.EnsureVisible();
            //Keyboard.Press("{Escape}");
            //Delay.Milliseconds(0);
            
            fieldName = HelperMethodsCollection.assignVariable("ODP Reserve");
            Delay.Milliseconds(0);
            
            odpReserve = ValueConverter.ToString(HelperMethodsCollection.getEditedNumber(ValueConverter.ArgumentFromString<int>("oldNumber", "0")));
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.projects_Form.financialInformationDiv.dynamicInputField' at Center.", repo.ApplicationUnderTest.projects_Form.financialInformationDiv.dynamicInputFieldInfo, new RecordItemIndex(69));
            repo.ApplicationUnderTest.projects_Form.financialInformationDiv.dynamicInputField.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$odpReserve' with focus on 'ApplicationUnderTest.projects_Form.financialInformationDiv.dynamicInputField'.", repo.ApplicationUnderTest.projects_Form.financialInformationDiv.dynamicInputFieldInfo, new RecordItemIndex(70));
            repo.ApplicationUnderTest.projects_Form.financialInformationDiv.dynamicInputField.EnsureVisible();
            Keyboard.Press(odpReserve);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Escape}' with focus on 'ApplicationUnderTest.projects_Form.financialInformationDiv.dynamicInputField'.", repo.ApplicationUnderTest.projects_Form.financialInformationDiv.dynamicInputFieldInfo, new RecordItemIndex(71));
            repo.ApplicationUnderTest.projects_Form.financialInformationDiv.dynamicInputField.EnsureVisible();
            Keyboard.Press("{Escape}");
            Delay.Milliseconds(0);
            
            fieldName = HelperMethodsCollection.assignVariable("Sales Tax %");
            Delay.Milliseconds(0);
            
            salesTaxPerc = ValueConverter.ToString(HelperMethodsCollection.getEditedNumber(ValueConverter.ArgumentFromString<int>("oldNumber", "0")));
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.projects_Form.financialInformationDiv.dynamicInputField' at Center.", repo.ApplicationUnderTest.projects_Form.financialInformationDiv.dynamicInputFieldInfo, new RecordItemIndex(74));
            repo.ApplicationUnderTest.projects_Form.financialInformationDiv.dynamicInputField.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$salesTaxPerc' with focus on 'ApplicationUnderTest.projects_Form.financialInformationDiv.dynamicInputField'.", repo.ApplicationUnderTest.projects_Form.financialInformationDiv.dynamicInputFieldInfo, new RecordItemIndex(75));
            repo.ApplicationUnderTest.projects_Form.financialInformationDiv.dynamicInputField.EnsureVisible();
            Keyboard.Press(salesTaxPerc);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Escape}' with focus on 'ApplicationUnderTest.projects_Form.financialInformationDiv.dynamicInputField'.", repo.ApplicationUnderTest.projects_Form.financialInformationDiv.dynamicInputFieldInfo, new RecordItemIndex(76));
            repo.ApplicationUnderTest.projects_Form.financialInformationDiv.dynamicInputField.EnsureVisible();
            Keyboard.Press("{Escape}");
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
