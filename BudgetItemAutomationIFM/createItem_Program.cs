///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace BudgetItemAutomationIFM
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The createItem_Program recording.
    /// </summary>
    [TestModule("ee39b631-5266-45d8-8e33-0989455dc9a4", ModuleType.Recording, 1)]
    public partial class createItem_Program : ITestModule
    {
        /// <summary>
        /// Holds an instance of the BudgetItemAutomationIFMRepository repository.
        /// </summary>
        public static BudgetItemAutomationIFMRepository repo = BudgetItemAutomationIFMRepository.Instance;

        static createItem_Program instance = new createItem_Program();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public createItem_Program()
        {
            itemCount = "";
            newTemplateName = "";
            descriptionText = "test description";
            isVirtual = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static createItem_Program Instance
        {
            get { return instance; }
        }

#region Variables

        string _itemCount;

        /// <summary>
        /// Gets or sets the value of variable itemCount.
        /// </summary>
        [TestVariable("e6687a09-7ea9-4381-923c-16726d7fea39")]
        public string itemCount
        {
            get { return _itemCount; }
            set { _itemCount = value; }
        }

        string _descriptionText;

        /// <summary>
        /// Gets or sets the value of variable descriptionText.
        /// </summary>
        [TestVariable("788942b8-ee2e-4470-b82b-d8917e7403b4")]
        public string descriptionText
        {
            get { return _descriptionText; }
            set { _descriptionText = value; }
        }

        string _isVirtual;

        /// <summary>
        /// Gets or sets the value of variable isVirtual.
        /// </summary>
        [TestVariable("d3e06182-98ae-4c8b-969b-4e755646d6d0")]
        public string isVirtual
        {
            get { return _isVirtual; }
            set { _isVirtual = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable newTemplateName.
        /// </summary>
        [TestVariable("93dd40cc-a181-41d5-92ee-74b34ee1a9ad")]
        public string newTemplateName
        {
            get { return repo.newTemplateName; }
            set { repo.newTemplateName = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            itemCount = ValueConverter.ToString(HelperMethodsCollection.getNumberOfRecordsFromFooter(repo.ApplicationUnderTest.showingNumberOfRecords));
            Delay.Milliseconds(0);
            
            newTemplateName = HelperMethodsCollection.getNewCreateItem(ValueConverter.ArgumentFromString<int>("nextCount", itemCount), "category");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.Content1.MatMdcButtonTouchTarget1' at Center.", repo.ApplicationUnderTest.Content1.MatMdcButtonTouchTarget1Info, new RecordItemIndex(2));
            repo.ApplicationUnderTest.Content1.MatMdcButtonTouchTarget1.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.Content1.ProgramForms_ProgramName' at Center.", repo.ApplicationUnderTest.Content1.ProgramForms_ProgramNameInfo, new RecordItemIndex(3));
            repo.ApplicationUnderTest.Content1.ProgramForms_ProgramName.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$newTemplateName' with focus on 'ApplicationUnderTest.Content1.ProgramForms_ProgramName'.", repo.ApplicationUnderTest.Content1.ProgramForms_ProgramNameInfo, new RecordItemIndex(4));
            repo.ApplicationUnderTest.Content1.ProgramForms_ProgramName.PressKeys(newTemplateName);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.Content1.ProgramForms_ProgramNumber' at Center.", repo.ApplicationUnderTest.Content1.ProgramForms_ProgramNumberInfo, new RecordItemIndex(5));
            repo.ApplicationUnderTest.Content1.ProgramForms_ProgramNumber.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$itemCount' with focus on 'ApplicationUnderTest.Content1.ProgramForms_ProgramNumber'.", repo.ApplicationUnderTest.Content1.ProgramForms_ProgramNumberInfo, new RecordItemIndex(6));
            repo.ApplicationUnderTest.Content1.ProgramForms_ProgramNumber.PressKeys(itemCount);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.Content1.ProgramForms_ProgramBudget' at Center.", repo.ApplicationUnderTest.Content1.ProgramForms_ProgramBudgetInfo, new RecordItemIndex(7));
            repo.ApplicationUnderTest.Content1.ProgramForms_ProgramBudget.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$itemCount' with focus on 'ApplicationUnderTest.Content1.ProgramForms_ProgramBudget'.", repo.ApplicationUnderTest.Content1.ProgramForms_ProgramBudgetInfo, new RecordItemIndex(8));
            repo.ApplicationUnderTest.Content1.ProgramForms_ProgramBudget.PressKeys(itemCount);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.Content1.ProgramForms_Description' at Center.", repo.ApplicationUnderTest.Content1.ProgramForms_DescriptionInfo, new RecordItemIndex(9));
            repo.ApplicationUnderTest.Content1.ProgramForms_Description.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$descriptionText' with focus on 'ApplicationUnderTest.Content1.ProgramForms_Description'.", repo.ApplicationUnderTest.Content1.ProgramForms_DescriptionInfo, new RecordItemIndex(10));
            repo.ApplicationUnderTest.Content1.ProgramForms_Description.PressKeys(descriptionText);
            Delay.Milliseconds(0);
            
            Mouse_Click_IsVirtual(repo.ApplicationUnderTest.Content1.ProgramForms_VirtualProgram_CheckboxInfo, ValueConverter.ArgumentFromString<bool>("isVirtual", isVirtual));
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.Content1.Submit' at Center.", repo.ApplicationUnderTest.Content1.SubmitInfo, new RecordItemIndex(12));
            repo.ApplicationUnderTest.Content1.Submit.Click();
            Delay.Milliseconds(0);
            
            HelperMethodsCollection.generateRandomString();
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
