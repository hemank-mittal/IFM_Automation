///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace BudgetItemAutomationIFM
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The findContact_specificRole recording.
    /// </summary>
    [TestModule("13c58114-eaa1-4d83-9c83-c0e017dcce9a", ModuleType.Recording, 1)]
    public partial class findContact_specificRole : ITestModule
    {
        /// <summary>
        /// Holds an instance of the BudgetItemAutomationIFMRepository repository.
        /// </summary>
        public static BudgetItemAutomationIFMRepository repo = BudgetItemAutomationIFMRepository.Instance;

        static findContact_specificRole instance = new findContact_specificRole();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public findContact_specificRole()
        {
            requiredRole = "";
            email = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static findContact_specificRole Instance
        {
            get { return instance; }
        }

#region Variables

        string _requiredRole;

        /// <summary>
        /// Gets or sets the value of variable requiredRole.
        /// </summary>
        [TestVariable("b4b5145f-301d-42b9-9663-69e7b3370edd")]
        public string requiredRole
        {
            get { return _requiredRole; }
            set { _requiredRole = value; }
        }

        string _email;

        /// <summary>
        /// Gets or sets the value of variable email.
        /// </summary>
        [TestVariable("f9182e52-502c-47d6-b63e-d632e6f7dd0d")]
        public string email
        {
            get { return _email; }
            set { _email = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable domain.
        /// </summary>
        [TestVariable("0e49bfa6-0c8f-4999-ad77-5babbb4e74af")]
        public string domain
        {
            get { return repo.domain; }
            set { repo.domain = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            HelperMethodsCollection.waitForLoading();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.searchBtn_Id_searchbox' at Center.", repo.ApplicationUnderTest.searchBtn_Id_searchboxInfo, new RecordItemIndex(1));
            repo.ApplicationUnderTest.searchBtn_Id_searchbox.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$requiredRole' with focus on 'ApplicationUnderTest.searchBtn_Id_searchbox'.", repo.ApplicationUnderTest.searchBtn_Id_searchboxInfo, new RecordItemIndex(2));
            repo.ApplicationUnderTest.searchBtn_Id_searchbox.PressKeys(requiredRole);
            Delay.Milliseconds(20);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (InnerText>$requiredRole) on item 'ApplicationUnderTest.thirdElement_anyTag'.", repo.ApplicationUnderTest.thirdElement_anyTagInfo, new RecordItemIndex(3));
            Validate.AttributeContains(repo.ApplicationUnderTest.thirdElement_anyTagInfo, "InnerText", requiredRole);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'InnerText' from item 'ApplicationUnderTest.secondElement_anyTag' and assigning its value to variable 'email'.", repo.ApplicationUnderTest.secondElement_anyTagInfo, new RecordItemIndex(4));
            email = repo.ApplicationUnderTest.secondElement_anyTag.Element.GetAttributeValueText("InnerText");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.searchBtn_Id_searchbox' at Center.", repo.ApplicationUnderTest.searchBtn_Id_searchboxInfo, new RecordItemIndex(5));
            repo.ApplicationUnderTest.searchBtn_Id_searchbox.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Ctrl+A' Press with focus on 'ApplicationUnderTest.searchBtn_Id_searchbox'.", repo.ApplicationUnderTest.searchBtn_Id_searchboxInfo, new RecordItemIndex(6));
            Keyboard.PrepareFocus(repo.ApplicationUnderTest.searchBtn_Id_searchbox);
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, 30, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Back}' with focus on 'ApplicationUnderTest.searchBtn_Id_searchbox'.", repo.ApplicationUnderTest.searchBtn_Id_searchboxInfo, new RecordItemIndex(7));
            repo.ApplicationUnderTest.searchBtn_Id_searchbox.PressKeys("{Back}");
            Delay.Milliseconds(0);
            
            HelperMethodsCollection.waitForLoading();
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
