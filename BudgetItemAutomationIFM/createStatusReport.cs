///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace BudgetItemAutomationIFM
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The createStatusReport recording.
    /// </summary>
    [TestModule("bf0d99d1-9b89-4bd7-ac07-96b32672259b", ModuleType.Recording, 1)]
    public partial class createStatusReport : ITestModule
    {
        /// <summary>
        /// Holds an instance of the BudgetItemAutomationIFMRepository repository.
        /// </summary>
        public static BudgetItemAutomationIFMRepository repo = BudgetItemAutomationIFMRepository.Instance;

        static createStatusReport instance = new createStatusReport();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public createStatusReport()
        {
            status = "";
            weeklyMeeting = "";
            selectProjectStatus = "";
            selectStatusType = "";
            tag = "";
            title0 = "";
            currentStatus0 = "";
            title1 = "";
            currentStatus1 = "";
            amount = "";
            numberOfDays = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static createStatusReport Instance
        {
            get { return instance; }
        }

#region Variables

        string _status;

        /// <summary>
        /// Gets or sets the value of variable status.
        /// </summary>
        [TestVariable("a396a44e-2a2e-4eea-aedc-a8daa05bb729")]
        public string status
        {
            get { return _status; }
            set { _status = value; }
        }

        string _weeklyMeeting;

        /// <summary>
        /// Gets or sets the value of variable weeklyMeeting.
        /// </summary>
        [TestVariable("e4c046bb-09c4-4758-84ed-d8b00da86918")]
        public string weeklyMeeting
        {
            get { return _weeklyMeeting; }
            set { _weeklyMeeting = value; }
        }

        string _selectProjectStatus;

        /// <summary>
        /// Gets or sets the value of variable selectProjectStatus.
        /// </summary>
        [TestVariable("f5336c0d-8ae7-465d-81a6-ffdd8c1d250f")]
        public string selectProjectStatus
        {
            get { return _selectProjectStatus; }
            set { _selectProjectStatus = value; }
        }

        string _selectStatusType;

        /// <summary>
        /// Gets or sets the value of variable selectStatusType.
        /// </summary>
        [TestVariable("0b628752-791f-4c44-8b98-d55625225efa")]
        public string selectStatusType
        {
            get { return _selectStatusType; }
            set { _selectStatusType = value; }
        }

        string _tag;

        /// <summary>
        /// Gets or sets the value of variable tag.
        /// </summary>
        [TestVariable("ad7146c9-25ee-4d71-b6f4-acb48ed0415b")]
        public string tag
        {
            get { return _tag; }
            set { _tag = value; }
        }

        string _title0;

        /// <summary>
        /// Gets or sets the value of variable title0.
        /// </summary>
        [TestVariable("d01bced1-8ad2-44ef-be99-8642139877d2")]
        public string title0
        {
            get { return _title0; }
            set { _title0 = value; }
        }

        string _currentStatus0;

        /// <summary>
        /// Gets or sets the value of variable currentStatus0.
        /// </summary>
        [TestVariable("8c98f1a8-a599-44eb-afd9-a5e27bf9a73c")]
        public string currentStatus0
        {
            get { return _currentStatus0; }
            set { _currentStatus0 = value; }
        }

        string _title1;

        /// <summary>
        /// Gets or sets the value of variable title1.
        /// </summary>
        [TestVariable("91d48b62-4999-4dab-8bc9-02b0cf4ab744")]
        public string title1
        {
            get { return _title1; }
            set { _title1 = value; }
        }

        string _currentStatus1;

        /// <summary>
        /// Gets or sets the value of variable currentStatus1.
        /// </summary>
        [TestVariable("f36191dc-e418-4335-8e8f-b931fe0ed554")]
        public string currentStatus1
        {
            get { return _currentStatus1; }
            set { _currentStatus1 = value; }
        }

        string _amount;

        /// <summary>
        /// Gets or sets the value of variable amount.
        /// </summary>
        [TestVariable("4a8c6e00-dee2-4ceb-9f49-0fa43e3b12be")]
        public string amount
        {
            get { return _amount; }
            set { _amount = value; }
        }

        string _numberOfDays;

        /// <summary>
        /// Gets or sets the value of variable numberOfDays.
        /// </summary>
        [TestVariable("13fcd5eb-75d2-4749-8abd-8971891b091a")]
        public string numberOfDays
        {
            get { return _numberOfDays; }
            set { _numberOfDays = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable domain.
        /// </summary>
        [TestVariable("0e49bfa6-0c8f-4999-ad77-5babbb4e74af")]
        public string domain
        {
            get { return repo.domain; }
            set { repo.domain = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.textareaField_id_status' at Center.", repo.ApplicationUnderTest.textareaField_id_statusInfo, new RecordItemIndex(0));
            repo.ApplicationUnderTest.textareaField_id_status.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$status' with focus on 'ApplicationUnderTest.textareaField_id_status'.", repo.ApplicationUnderTest.textareaField_id_statusInfo, new RecordItemIndex(1));
            repo.ApplicationUnderTest.textareaField_id_status.PressKeys(status);
            Delay.Milliseconds(20);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.createEditStatusReport_Project.statusReportCreate_WeeklyMeeting_project' at Center.", repo.ApplicationUnderTest.createEditStatusReport_Project.statusReportCreate_WeeklyMeeting_projectInfo, new RecordItemIndex(2));
            repo.ApplicationUnderTest.createEditStatusReport_Project.statusReportCreate_WeeklyMeeting_project.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$weeklyMeeting' with focus on 'ApplicationUnderTest.createEditStatusReport_Project.statusReportCreate_WeeklyMeeting_project'.", repo.ApplicationUnderTest.createEditStatusReport_Project.statusReportCreate_WeeklyMeeting_projectInfo, new RecordItemIndex(3));
            repo.ApplicationUnderTest.createEditStatusReport_Project.statusReportCreate_WeeklyMeeting_project.PressKeys(weeklyMeeting);
            Delay.Milliseconds(20);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.createEditStatusReport_Project.statusReportCreate_selectProjectStatus_project' at Center.", repo.ApplicationUnderTest.createEditStatusReport_Project.statusReportCreate_selectProjectStatus_projectInfo, new RecordItemIndex(4));
            repo.ApplicationUnderTest.createEditStatusReport_Project.statusReportCreate_selectProjectStatus_project.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'InnerText' from item 'ApplicationUnderTest.listbox_firstOption' and assigning its value to variable 'selectProjectStatus'.", repo.ApplicationUnderTest.listbox_firstOptionInfo, new RecordItemIndex(5));
            selectProjectStatus = repo.ApplicationUnderTest.listbox_firstOption.Element.GetAttributeValueText("InnerText");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.listbox_firstOption' at Center.", repo.ApplicationUnderTest.listbox_firstOptionInfo, new RecordItemIndex(6));
            repo.ApplicationUnderTest.listbox_firstOption.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.createEditStatusReport_Project.statusReportCreate_selectStatusType_project' at Center.", repo.ApplicationUnderTest.createEditStatusReport_Project.statusReportCreate_selectStatusType_projectInfo, new RecordItemIndex(7));
            repo.ApplicationUnderTest.createEditStatusReport_Project.statusReportCreate_selectStatusType_project.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'InnerText' from item 'ApplicationUnderTest.listbox_firstOption' and assigning its value to variable 'selectStatusType'.", repo.ApplicationUnderTest.listbox_firstOptionInfo, new RecordItemIndex(8));
            selectStatusType = repo.ApplicationUnderTest.listbox_firstOption.Element.GetAttributeValueText("InnerText");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.listbox_firstOption' at Center.", repo.ApplicationUnderTest.listbox_firstOptionInfo, new RecordItemIndex(9));
            repo.ApplicationUnderTest.listbox_firstOption.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.createEditStatusReport_Project.statusReportCreate_tags_project' at Center.", repo.ApplicationUnderTest.createEditStatusReport_Project.statusReportCreate_tags_projectInfo, new RecordItemIndex(10));
            repo.ApplicationUnderTest.createEditStatusReport_Project.statusReportCreate_tags_project.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$tag' with focus on 'ApplicationUnderTest.createEditStatusReport_Project.statusReportCreate_tags_project'.", repo.ApplicationUnderTest.createEditStatusReport_Project.statusReportCreate_tags_projectInfo, new RecordItemIndex(11));
            repo.ApplicationUnderTest.createEditStatusReport_Project.statusReportCreate_tags_project.PressKeys(tag);
            Delay.Milliseconds(20);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.createEditStatusReport_Project.statusReportCreate_title_project' at Center.", repo.ApplicationUnderTest.createEditStatusReport_Project.statusReportCreate_title_projectInfo, new RecordItemIndex(12));
            repo.ApplicationUnderTest.createEditStatusReport_Project.statusReportCreate_title_project.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$title0' with focus on 'ApplicationUnderTest.createEditStatusReport_Project.statusReportCreate_title_project'.", repo.ApplicationUnderTest.createEditStatusReport_Project.statusReportCreate_title_projectInfo, new RecordItemIndex(13));
            repo.ApplicationUnderTest.createEditStatusReport_Project.statusReportCreate_title_project.PressKeys(title0);
            Delay.Milliseconds(20);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Escape}' with focus on 'ApplicationUnderTest'.", repo.ApplicationUnderTest.SelfInfo, new RecordItemIndex(14));
            repo.ApplicationUnderTest.Self.EnsureVisible();
            Keyboard.Press("{Escape}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.createEditStatusReport_Project.statusReportCreate_currentStatus_project' at Center.", repo.ApplicationUnderTest.createEditStatusReport_Project.statusReportCreate_currentStatus_projectInfo, new RecordItemIndex(15));
            repo.ApplicationUnderTest.createEditStatusReport_Project.statusReportCreate_currentStatus_project.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$currentStatus0' with focus on 'ApplicationUnderTest.createEditStatusReport_Project.statusReportCreate_currentStatus_project'.", repo.ApplicationUnderTest.createEditStatusReport_Project.statusReportCreate_currentStatus_projectInfo, new RecordItemIndex(16));
            repo.ApplicationUnderTest.createEditStatusReport_Project.statusReportCreate_currentStatus_project.PressKeys(currentStatus0);
            Delay.Milliseconds(20);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Escape}' with focus on 'ApplicationUnderTest'.", repo.ApplicationUnderTest.SelfInfo, new RecordItemIndex(17));
            repo.ApplicationUnderTest.Self.EnsureVisible();
            Keyboard.Press("{Escape}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.createEditStatusReport_Project.statusReportCreate_isCostImpact_project' at Center.", repo.ApplicationUnderTest.createEditStatusReport_Project.statusReportCreate_isCostImpact_projectInfo, new RecordItemIndex(18));
            repo.ApplicationUnderTest.createEditStatusReport_Project.statusReportCreate_isCostImpact_project.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.createEditStatusReport_Project.statusReportCreate_isScheduleProject_project' at Center.", repo.ApplicationUnderTest.createEditStatusReport_Project.statusReportCreate_isScheduleProject_projectInfo, new RecordItemIndex(19));
            repo.ApplicationUnderTest.createEditStatusReport_Project.statusReportCreate_isScheduleProject_project.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.createEditStatusReport_Project.statusReportCreate_amount_project' at Center.", repo.ApplicationUnderTest.createEditStatusReport_Project.statusReportCreate_amount_projectInfo, new RecordItemIndex(20));
            repo.ApplicationUnderTest.createEditStatusReport_Project.statusReportCreate_amount_project.Click();
            Delay.Milliseconds(0);
            
            amount = ValueConverter.ToString(HelperMethodsCollection.getEditedNumber(ValueConverter.ArgumentFromString<int>("oldNumber", "0")));
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$amount' with focus on 'ApplicationUnderTest.createEditStatusReport_Project.statusReportCreate_amount_project'.", repo.ApplicationUnderTest.createEditStatusReport_Project.statusReportCreate_amount_projectInfo, new RecordItemIndex(22));
            repo.ApplicationUnderTest.createEditStatusReport_Project.statusReportCreate_amount_project.PressKeys(amount);
            Delay.Milliseconds(20);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.createEditStatusReport_Project.statusReportCreate_numberOfDays_project' at Center.", repo.ApplicationUnderTest.createEditStatusReport_Project.statusReportCreate_numberOfDays_projectInfo, new RecordItemIndex(23));
            repo.ApplicationUnderTest.createEditStatusReport_Project.statusReportCreate_numberOfDays_project.Click();
            Delay.Milliseconds(0);
            
            numberOfDays = ValueConverter.ToString(HelperMethodsCollection.getEditedNumber(ValueConverter.ArgumentFromString<int>("oldNumber", "0")));
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$numberOfDays' with focus on 'ApplicationUnderTest.createEditStatusReport_Project.statusReportCreate_numberOfDays_project'.", repo.ApplicationUnderTest.createEditStatusReport_Project.statusReportCreate_numberOfDays_projectInfo, new RecordItemIndex(25));
            repo.ApplicationUnderTest.createEditStatusReport_Project.statusReportCreate_numberOfDays_project.PressKeys(numberOfDays);
            Delay.Milliseconds(20);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.createEditStatusReport_Project.statusReportCreate_plusSign_projects' at Center.", repo.ApplicationUnderTest.createEditStatusReport_Project.statusReportCreate_plusSign_projectsInfo, new RecordItemIndex(26));
            repo.ApplicationUnderTest.createEditStatusReport_Project.statusReportCreate_plusSign_projects.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.createEditStatusReport_Project.statusReportCreate_title_project' at Center.", repo.ApplicationUnderTest.createEditStatusReport_Project.statusReportCreate_title_projectInfo, new RecordItemIndex(27));
            repo.ApplicationUnderTest.createEditStatusReport_Project.statusReportCreate_title_project.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$title1' with focus on 'ApplicationUnderTest.createEditStatusReport_Project.statusReportCreate_title_project'.", repo.ApplicationUnderTest.createEditStatusReport_Project.statusReportCreate_title_projectInfo, new RecordItemIndex(28));
            repo.ApplicationUnderTest.createEditStatusReport_Project.statusReportCreate_title_project.PressKeys(title1);
            Delay.Milliseconds(20);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Escape}' with focus on 'ApplicationUnderTest'.", repo.ApplicationUnderTest.SelfInfo, new RecordItemIndex(29));
            repo.ApplicationUnderTest.Self.EnsureVisible();
            Keyboard.Press("{Escape}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.createEditStatusReport_Project.statusReportCreate_currentStatus_project' at Center.", repo.ApplicationUnderTest.createEditStatusReport_Project.statusReportCreate_currentStatus_projectInfo, new RecordItemIndex(30));
            repo.ApplicationUnderTest.createEditStatusReport_Project.statusReportCreate_currentStatus_project.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$currentStatus1' with focus on 'ApplicationUnderTest.createEditStatusReport_Project.statusReportCreate_currentStatus_project'.", repo.ApplicationUnderTest.createEditStatusReport_Project.statusReportCreate_currentStatus_projectInfo, new RecordItemIndex(31));
            repo.ApplicationUnderTest.createEditStatusReport_Project.statusReportCreate_currentStatus_project.PressKeys(currentStatus1);
            Delay.Milliseconds(20);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Escape}' with focus on 'ApplicationUnderTest'.", repo.ApplicationUnderTest.SelfInfo, new RecordItemIndex(32));
            repo.ApplicationUnderTest.Self.EnsureVisible();
            Keyboard.Press("{Escape}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.buttonTagSubmit' at Center.", repo.ApplicationUnderTest.buttonTagSubmitInfo, new RecordItemIndex(33));
            repo.ApplicationUnderTest.buttonTagSubmit.Click();
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
