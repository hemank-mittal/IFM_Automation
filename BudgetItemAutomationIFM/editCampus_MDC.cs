///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace BudgetItemAutomationIFM
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The editCampus_MDC recording.
    /// </summary>
    [TestModule("fb1d9869-904e-4a54-9bca-e5a178a2cb70", ModuleType.Recording, 1)]
    public partial class editCampus_MDC : ITestModule
    {
        /// <summary>
        /// Holds an instance of the BudgetItemAutomationIFMRepository repository.
        /// </summary>
        public static BudgetItemAutomationIFMRepository repo = BudgetItemAutomationIFMRepository.Instance;

        static editCampus_MDC instance = new editCampus_MDC();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public editCampus_MDC()
        {
            optionIndex = "";
            newCampus = "";
            newZone = "";
            oldDescription = "";
            editedDescription = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static editCampus_MDC Instance
        {
            get { return instance; }
        }

#region Variables

        string _newCampus;

        /// <summary>
        /// Gets or sets the value of variable newCampus.
        /// </summary>
        [TestVariable("888a1395-3c38-40ee-8caf-b24f9bb64ceb")]
        public string newCampus
        {
            get { return _newCampus; }
            set { _newCampus = value; }
        }

        string _newZone;

        /// <summary>
        /// Gets or sets the value of variable newZone.
        /// </summary>
        [TestVariable("aba58ba3-dc92-406b-b3c7-1ef8a04466f2")]
        public string newZone
        {
            get { return _newZone; }
            set { _newZone = value; }
        }

        string _oldDescription;

        /// <summary>
        /// Gets or sets the value of variable oldDescription.
        /// </summary>
        [TestVariable("29c37606-abe2-436b-ac72-ccf334dc5750")]
        public string oldDescription
        {
            get { return _oldDescription; }
            set { _oldDescription = value; }
        }

        string _editedDescription;

        /// <summary>
        /// Gets or sets the value of variable editedDescription.
        /// </summary>
        [TestVariable("dccb9085-1ae0-4976-b746-23dd9b62b438")]
        public string editedDescription
        {
            get { return _editedDescription; }
            set { _editedDescription = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable domain.
        /// </summary>
        [TestVariable("0e49bfa6-0c8f-4999-ad77-5babbb4e74af")]
        public string domain
        {
            get { return repo.domain; }
            set { repo.domain = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable optionIndex.
        /// </summary>
        [TestVariable("a6e9f171-37cf-41a2-826b-258ee0297dcc")]
        public string optionIndex
        {
            get { return repo.optionIndex; }
            set { repo.optionIndex = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.ButtonTagEdit_Row2' at Center.", repo.ApplicationUnderTest.ButtonTagEdit_Row2Info, new RecordItemIndex(0));
            repo.ApplicationUnderTest.ButtonTagEdit_Row2.Click();
            Delay.Milliseconds(0);
            
            HelperMethodsCollection.waitForLoading();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.Campus_MDC_CreateEdit.campusDropdown' at Center.", repo.ApplicationUnderTest.Campus_MDC_CreateEdit.campusDropdownInfo, new RecordItemIndex(2));
            repo.ApplicationUnderTest.Campus_MDC_CreateEdit.campusDropdown.Click();
            Delay.Milliseconds(0);
            
            optionIndex = ValueConverter.ToString(HelperMethodsCollection.getDifferentOption(repo.ApplicationUnderTest.Campus_MDC_CreateEdit.visibleDropdown_CompleteDropdown));
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'innertext' from item 'ApplicationUnderTest.Campus_MDC_CreateEdit.visibleDropdown_dynamic' and assigning its value to variable 'newCampus'.", repo.ApplicationUnderTest.Campus_MDC_CreateEdit.visibleDropdown_dynamicInfo, new RecordItemIndex(4));
            newCampus = repo.ApplicationUnderTest.Campus_MDC_CreateEdit.visibleDropdown_dynamic.Element.GetAttributeValueText("innertext");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.Campus_MDC_CreateEdit.visibleDropdown_dynamic' at Center.", repo.ApplicationUnderTest.Campus_MDC_CreateEdit.visibleDropdown_dynamicInfo, new RecordItemIndex(5));
            repo.ApplicationUnderTest.Campus_MDC_CreateEdit.visibleDropdown_dynamic.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.Campus_MDC_CreateEdit.campusDropdown' at Center.", repo.ApplicationUnderTest.Campus_MDC_CreateEdit.campusDropdownInfo, new RecordItemIndex(6));
            repo.ApplicationUnderTest.Campus_MDC_CreateEdit.campusDropdown.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.Campus_MDC_CreateEdit.zoneDropdown' at Center.", repo.ApplicationUnderTest.Campus_MDC_CreateEdit.zoneDropdownInfo, new RecordItemIndex(7));
            repo.ApplicationUnderTest.Campus_MDC_CreateEdit.zoneDropdown.Click();
            Delay.Milliseconds(0);
            
            optionIndex = ValueConverter.ToString(HelperMethodsCollection.getDifferentOption(repo.ApplicationUnderTest.Campus_MDC_CreateEdit.visibleDropdown_CompleteDropdown));
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'innertext' from item 'ApplicationUnderTest.Campus_MDC_CreateEdit.visibleDropdown_dynamic' and assigning its value to variable 'newZone'.", repo.ApplicationUnderTest.Campus_MDC_CreateEdit.visibleDropdown_dynamicInfo, new RecordItemIndex(9));
            newZone = repo.ApplicationUnderTest.Campus_MDC_CreateEdit.visibleDropdown_dynamic.Element.GetAttributeValueText("innertext");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.Campus_MDC_CreateEdit.visibleDropdown_selectedOption' at Center.", repo.ApplicationUnderTest.Campus_MDC_CreateEdit.visibleDropdown_selectedOptionInfo, new RecordItemIndex(10));
            repo.ApplicationUnderTest.Campus_MDC_CreateEdit.visibleDropdown_selectedOption.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.Campus_MDC_CreateEdit.visibleDropdown_dynamic' at Center.", repo.ApplicationUnderTest.Campus_MDC_CreateEdit.visibleDropdown_dynamicInfo, new RecordItemIndex(11));
            repo.ApplicationUnderTest.Campus_MDC_CreateEdit.visibleDropdown_dynamic.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.Campus_MDC_CreateEdit.zoneDropdown' at Center.", repo.ApplicationUnderTest.Campus_MDC_CreateEdit.zoneDropdownInfo, new RecordItemIndex(12));
            repo.ApplicationUnderTest.Campus_MDC_CreateEdit.zoneDropdown.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.Campus_MDC_CreateEdit.campusDescription' at Center.", repo.ApplicationUnderTest.Campus_MDC_CreateEdit.campusDescriptionInfo, new RecordItemIndex(13));
            repo.ApplicationUnderTest.Campus_MDC_CreateEdit.campusDescription.Click();
            Delay.Milliseconds(0);
            
            editedDescription = HelperMethodsCollection.getEdittedName(oldDescription);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Ctrl+A' Press with focus on 'ApplicationUnderTest.Campus_MDC_CreateEdit.campusDescription'.", repo.ApplicationUnderTest.Campus_MDC_CreateEdit.campusDescriptionInfo, new RecordItemIndex(15));
            Keyboard.PrepareFocus(repo.ApplicationUnderTest.Campus_MDC_CreateEdit.campusDescription);
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, 30, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Back}' with focus on 'ApplicationUnderTest.Campus_MDC_CreateEdit.campusDescription'.", repo.ApplicationUnderTest.Campus_MDC_CreateEdit.campusDescriptionInfo, new RecordItemIndex(16));
            repo.ApplicationUnderTest.Campus_MDC_CreateEdit.campusDescription.EnsureVisible();
            Keyboard.Press("{Back}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$editedDescription' with focus on 'ApplicationUnderTest.Campus_MDC_CreateEdit.campusDescription'.", repo.ApplicationUnderTest.Campus_MDC_CreateEdit.campusDescriptionInfo, new RecordItemIndex(17));
            repo.ApplicationUnderTest.Campus_MDC_CreateEdit.campusDescription.PressKeys(editedDescription);
            Delay.Milliseconds(20);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.Content1.ButtonTagSave' at Center.", repo.ApplicationUnderTest.Content1.ButtonTagSaveInfo, new RecordItemIndex(18));
            repo.ApplicationUnderTest.Content1.ButtonTagSave.Click();
            Delay.Milliseconds(0);
            
            HelperMethodsCollection.waitForLoading();
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
