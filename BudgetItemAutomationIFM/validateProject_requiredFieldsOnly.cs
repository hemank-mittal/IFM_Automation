///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace BudgetItemAutomationIFM
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The validateProject_requiredFieldsOnly recording.
    /// </summary>
    [TestModule("f0840021-11d6-435f-aa33-575df44997e4", ModuleType.Recording, 1)]
    public partial class validateProject_requiredFieldsOnly : ITestModule
    {
        /// <summary>
        /// Holds an instance of the BudgetItemAutomationIFMRepository repository.
        /// </summary>
        public static BudgetItemAutomationIFMRepository repo = BudgetItemAutomationIFMRepository.Instance;

        static validateProject_requiredFieldsOnly instance = new validateProject_requiredFieldsOnly();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public validateProject_requiredFieldsOnly()
        {
            projectName = "";
            visibleProjectName = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static validateProject_requiredFieldsOnly Instance
        {
            get { return instance; }
        }

#region Variables

        string _projectName;

        /// <summary>
        /// Gets or sets the value of variable projectName.
        /// </summary>
        [TestVariable("36cfc13b-9a21-402f-b22d-e71449625f19")]
        public string projectName
        {
            get { return _projectName; }
            set { _projectName = value; }
        }

        string _visibleProjectName;

        /// <summary>
        /// Gets or sets the value of variable visibleProjectName.
        /// </summary>
        [TestVariable("bb31ff89-8395-42e8-8918-f8bcf864b9d3")]
        public string visibleProjectName
        {
            get { return _visibleProjectName; }
            set { _visibleProjectName = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable domain.
        /// </summary>
        [TestVariable("0e49bfa6-0c8f-4999-ad77-5babbb4e74af")]
        public string domain
        {
            get { return repo.domain; }
            set { repo.domain = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.searchBtn_Grid' at Center.", repo.ApplicationUnderTest.searchBtn_GridInfo, new RecordItemIndex(0));
            repo.ApplicationUnderTest.searchBtn_Grid.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$projectName' with focus on 'ApplicationUnderTest.searchBtn_Grid'.", repo.ApplicationUnderTest.searchBtn_GridInfo, new RecordItemIndex(1));
            repo.ApplicationUnderTest.searchBtn_Grid.PressKeys(projectName);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Return}' with focus on 'ApplicationUnderTest.searchBtn_Grid'.", repo.ApplicationUnderTest.searchBtn_GridInfo, new RecordItemIndex(2));
            repo.ApplicationUnderTest.searchBtn_Grid.PressKeys("{Return}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'InnerText' from item 'ApplicationUnderTest.syncfusionGridTable_records.row1_column2' and assigning its value to variable 'visibleProjectName'.", repo.ApplicationUnderTest.syncfusionGridTable_records.row1_column2Info, new RecordItemIndex(3));
            visibleProjectName = repo.ApplicationUnderTest.syncfusionGridTable_records.row1_column2.Element.GetAttributeValueText("InnerText");
            Delay.Milliseconds(0);
            
            HelperMethodsCollection.compareStrings(visibleProjectName, projectName);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Ctrl+A' Press with focus on 'ApplicationUnderTest.searchBtn_Grid'.", repo.ApplicationUnderTest.searchBtn_GridInfo, new RecordItemIndex(5));
            Keyboard.PrepareFocus(repo.ApplicationUnderTest.searchBtn_Grid);
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, 30, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Back}' with focus on 'ApplicationUnderTest.searchBtn_Grid'.", repo.ApplicationUnderTest.searchBtn_GridInfo, new RecordItemIndex(6));
            repo.ApplicationUnderTest.searchBtn_Grid.PressKeys("{Back}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Return}' with focus on 'ApplicationUnderTest.searchBtn_Grid'.", repo.ApplicationUnderTest.searchBtn_GridInfo, new RecordItemIndex(7));
            repo.ApplicationUnderTest.searchBtn_Grid.PressKeys("{Return}");
            Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'IFM360ProjectInfo.Content.MatMdcFormFieldInfixNgTnsC50857122' at 234;6.", repo.IFM360ProjectInfo.Content.MatMdcFormFieldInfixNgTnsC50857122Info, new RecordItemIndex(8));
            //repo.IFM360ProjectInfo.Content.MatMdcFormFieldInfixNgTnsC50857122.Click("234;6");
            //Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
