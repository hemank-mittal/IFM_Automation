///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace Automation_CreateNewClient_IFM
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The enterCredentials recording.
    /// </summary>
    [TestModule("c6b34524-b792-4fcd-b9b7-0a619efae0d1", ModuleType.Recording, 1)]
    public partial class enterCredentials : ITestModule
    {
        /// <summary>
        /// Holds an instance of the Automation_CreateNewClient_IFMRepository repository.
        /// </summary>
        public static Automation_CreateNewClient_IFMRepository repo = Automation_CreateNewClient_IFMRepository.Instance;

        static enterCredentials instance = new enterCredentials();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public enterCredentials()
        {
            Username = "";
            Password = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static enterCredentials Instance
        {
            get { return instance; }
        }

#region Variables

        string _Username;

        /// <summary>
        /// Gets or sets the value of variable Username.
        /// </summary>
        [TestVariable("14aea3d7-0d65-49d8-af4b-0a6b07326e39")]
        public string Username
        {
            get { return _Username; }
            set { _Username = value; }
        }

        string _Password;

        /// <summary>
        /// Gets or sets the value of variable Password.
        /// </summary>
        [TestVariable("6361264b-6601-496c-9605-4e418fc4c119")]
        public string Password
        {
            get { return _Password; }
            set { _Password = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.HttpsAppIfm360ComLogin.Username' at Center.", repo.ApplicationUnderTest.HttpsAppIfm360ComLogin.UsernameInfo, new RecordItemIndex(0));
            repo.ApplicationUnderTest.HttpsAppIfm360ComLogin.Username.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Username' with focus on 'ApplicationUnderTest.HttpsAppIfm360ComLogin.Username'.", repo.ApplicationUnderTest.HttpsAppIfm360ComLogin.UsernameInfo, new RecordItemIndex(1));
            repo.ApplicationUnderTest.HttpsAppIfm360ComLogin.Username.PressKeys(Username);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Escape}' with focus on 'ApplicationUnderTest.HttpsAppIfm360ComLogin.Username'.", repo.ApplicationUnderTest.HttpsAppIfm360ComLogin.UsernameInfo, new RecordItemIndex(2));
            repo.ApplicationUnderTest.HttpsAppIfm360ComLogin.Username.PressKeys("{Escape}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.HttpsAppIfm360ComLogin.Password' at Center.", repo.ApplicationUnderTest.HttpsAppIfm360ComLogin.PasswordInfo, new RecordItemIndex(3));
            repo.ApplicationUnderTest.HttpsAppIfm360ComLogin.Password.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Password' with focus on 'ApplicationUnderTest.HttpsAppIfm360ComLogin.Password'.", repo.ApplicationUnderTest.HttpsAppIfm360ComLogin.PasswordInfo, new RecordItemIndex(4));
            repo.ApplicationUnderTest.HttpsAppIfm360ComLogin.Password.EnsureVisible();
            Keyboard.Press(Password);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Escape}' with focus on 'ApplicationUnderTest.HttpsAppIfm360ComLogin.Password'.", repo.ApplicationUnderTest.HttpsAppIfm360ComLogin.PasswordInfo, new RecordItemIndex(5));
            repo.ApplicationUnderTest.HttpsAppIfm360ComLogin.Password.PressKeys("{Escape}");
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
